[
    {
        "front": "What is the purpose of Ethernet's minimum frame size in relation to collision detection?",
        "back": "The minimum frame size ensures that a station is still transmitting when a collision occurs, allowing for proper collision detection in CSMA/CD networks before frame transmission completes.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 1
    },
    {
        "front": "What is the formula for calculating the minimum frame size in Ethernet?",
        "back": "$$\\text{Minimum Frame Size} = \\frac{2 \\times \\text{Segment Length} \\times \\text{Transmission Speed}}{\\text{Propagation Speed}}$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 2
    },
    {
        "front": "What are the three variables needed to calculate Ethernet's minimum frame size?",
        "back": "1. Segment Length (in meters)\n2. Transmission Speed (in bits/second)\n3. Propagation Speed (in meters/second)",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 3
    },
    {
        "front": "What is the standard minimum frame size in practical Ethernet implementations?",
        "back": "512 bits (64 bytes)",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 4
    },
    {
        "front": "What happens to TCP's congestion window (cwnd) immediately after a timeout occurs?",
        "back": "After a timeout, the congestion window is reset to 1 MSS (Maximum Segment Size), as timeout indicates severe congestion.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 5
    },
    {
        "front": "How does the congestion window grow during the Slow Start phase after a timeout?",
        "back": "During Slow Start, the window size doubles each RTT (Round Trip Time) if all segments are acknowledged correctly. The formula is: $$cwnd_{new} = 2 \\times cwnd_{previous}$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 6
    },
    {
        "front": "What is the sequence of congestion window sizes during the first three RTTs after a timeout?",
        "back": "First RTT: 1 MSS \u2192 2 MSS\nSecond RTT: 2 MSS \u2192 4 MSS\nThird RTT: 4 MSS \u2192 8 MSS",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 7
    },
    {
        "front": "Why does TCP use the Slow Start mechanism after a timeout?",
        "back": "TCP uses Slow Start after a timeout to help recover from congestion while preventing network overload through gradual window size increase. Timeout indicates severe congestion, so TCP responds by being most conservative initially.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 8
    },
    {
        "front": "What is CIDR notation and what does it specify?",
        "back": "CIDR (Classless Inter-Domain Routing) notation uses a prefix length (/n) to specify how many bits are fixed in the network portion of an IP address.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 9
    },
    {
        "front": "What is the formula to calculate the CIDR prefix length (n)?",
        "back": "$$n = 32 - \\log_2(\\text{number of addresses})$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 10
    },
    {
        "front": "What are the two key requirements for a valid CIDR block?",
        "back": "1. The block size must be a power of 2\n2. The starting address must be divisible by the block size",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 11
    },
    {
        "front": "Given IP range 10.12.2.0 to 10.12.3.255, how do you calculate its CIDR notation?",
        "back": "1. Calculate total addresses: 512 (2 \u00d7 256)\n2. Find power of 2 block size: 512 = 2\u2079\n3. Calculate prefix: 32 - 9 = 23\n4. Result: /23",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 12
    },
    {
        "front": "Which two fields must be modified by routers in an IP packet header during packet forwarding?",
        "back": "1. TTL (Time to Live)\n2. Header Checksum",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 13
    },
    {
        "front": "Why must the TTL field be modified during routing, and what is its purpose?",
        "back": "TTL must be decremented by 1 at each router to prevent infinite routing loops. When TTL reaches 0, the packet is discarded.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 14
    },
    {
        "front": "Why must the Header Checksum be recalculated during routing?",
        "back": "The Header Checksum must be recalculated whenever any header field changes (including TTL) to ensure header integrity.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 15
    },
    {
        "front": "Which fields in an IP packet header remain immutable during routing?",
        "back": "1. Source IP Address (identifies original sender)\n2. Protocol field (indicates transport layer protocol)",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 16
    },
    {
        "front": "What is IPv4 fragmentation and why is it needed?",
        "back": "IPv4 fragmentation is a process where large IP datagrams are broken into smaller pieces (fragments) to accommodate different Maximum Transmission Units (MTU) along a network path. It's needed to handle different network technologies with varying MTU sizes while ensuring reliable data delivery.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 17
    },
    {
        "front": "How does the Don't Fragment (DF) flag control IPv4 fragmentation?",
        "back": "The DF flag controls fragmentation in two ways:\n- If DF=0: Packet can be fragmented\n- If DF=1: Packet is dropped and ICMP message is sent back",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 18
    },
    {
        "front": "Where does IP packet reassembly occur and why?",
        "back": "Reassembly occurs EXCLUSIVELY at the final destination and is never performed by intermediate routers. It uses fragment offset and identification fields to reconstruct the original datagram.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 19
    },
    {
        "front": "What are the key fields in IP header used for fragmentation?",
        "back": "The key fields are:\n1. Identification: Links fragments of same datagram\n2. Fragment Offset: Position in original datagram\n3. More Fragments (MF) flag: Indicates if more fragments follow\n4. Don't Fragment (DF) flag: Controls fragmentation permission",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 20
    },
    {
        "front": "What is CRC (Cyclic Redundancy Check) and what is its primary purpose?",
        "back": "CRC is a powerful error-detecting code used in digital networks and storage devices to detect transmission errors.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 21
    },
    {
        "front": "What is a Generator Polynomial in CRC, and how is it represented?",
        "back": "A Generator Polynomial is represented as a binary number. For example, the polynomial $$X^3+X+1$$ is represented as 1011 in binary. The degree of the polynomial determines the number of check bits.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 22
    },
    {
        "front": "What is the formula for calculating the Transmitted Message in CRC?",
        "back": "$$\\text{Transmitted Message} = \\text{Original Message} \\cdot 2^k + \\text{Remainder}$$\nwhere k is the degree of the generator polynomial",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 23
    },
    {
        "front": "What are the key properties of CRC error detection?",
        "back": "1. Can detect all single-bit errors\n2. Can detect all burst errors up to length of generator polynomial\n3. Check bits are appended to original message for transmission",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 24
    },
    {
        "front": "What are the rules for CRC division?",
        "back": "1. Division is performed modulo-2 (XOR operation)\n2. No carrying or borrowing in calculations\n3. Remainder length is always less than generator polynomial length",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 25
    },
    {
        "front": "What is the TCP Three-Way Handshake?",
        "back": "A fundamental connection establishment protocol in TCP/IP networking that ensures reliable, full-duplex communication between two hosts through a three-step synchronization process.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 26
    },
    {
        "front": "What are the key flags and numbers used in TCP segment headers during the handshake?",
        "back": "1. SYN (Synchronization) flag: Indicates connection initiation\n2. ACK (Acknowledgment) flag: Confirms receipt of previous segment\n3. SEQ (Sequence) number: Identifies the sequence of data bytes\n4. ACK number: Indicates next expected byte (SEQ number + 1)",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 27
    },
    {
        "front": "Describe Step 1 (Client to Server) of the TCP Three-Way Handshake",
        "back": "Client sends:\n- SYN = 1\n- SEQ = X (random initial sequence number)\n- ACK = 0",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 28
    },
    {
        "front": "Describe Step 2 (Server to Client) of the TCP Three-Way Handshake",
        "back": "Server sends:\n- SYN = 1\n- SEQ = Y (server's random sequence number)\n- ACK = 1\n- ACK number = X + 1",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 29
    },
    {
        "front": "Describe Step 3 (Client to Server) of the TCP Three-Way Handshake",
        "back": "Client sends:\n- SYN = 0\n- SEQ = X + 1\n- ACK = 1\n- ACK number = Y + 1",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 30
    },
    {
        "front": "What are the three main purposes of the TCP Three-Way Handshake?",
        "back": "1. Synchronization of sequence numbers\n2. Both parties agree to establish connection\n3. Both parties acknowledge each other's initial sequence numbers",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 31
    },
    {
        "front": "What is the formula for link utilization (\u03b7) in sliding window flow control?",
        "back": "$$\\eta = \\frac{N \\times T_f}{T_f + 2T_p + T_{ACK}}$$\nwhere:\nN = Window size (frames)\nT_f = Frame transmission time\nT_p = Propagation delay\nT_{ACK} = ACK transmission time",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 32
    },
    {
        "front": "What is the formula to calculate the minimum window size (N) required for a target utilization (\u03b7)?",
        "back": "$$N = \\left\\lceil \\frac{\\eta(T_f + 2T_p + T_{ACK})}{T_f} \\right\\rceil$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 33
    },
    {
        "front": "What are the components that make up the total cycle time in sliding window flow control?",
        "back": "The total cycle time consists of:\n1. Data frame transmission time (T_f)\n2. Round-trip propagation delay (2T_p)\n3. ACK transmission time (T_{ACK})",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 34
    },
    {
        "front": "How is frame transmission time calculated in sliding window flow control?",
        "back": "Frame transmission time = Frame size / Link data rate",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 35
    },
    {
        "front": "What is IP fragmentation and when does it occur?",
        "back": "IP fragmentation is the process where IP datagrams are broken into smaller fragments when they need to traverse a network link with a smaller MTU (Maximum Transmission Unit) than the original packet size.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 36
    },
    {
        "front": "What is the formula for calculating fragment size in IP fragmentation?",
        "back": "$$Fragment Size = MTU - IP Header Size (20 bytes)$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 37
    },
    {
        "front": "What are the key characteristics of the first fragment in IP fragmentation?",
        "back": "The first fragment contains:\n1. The original IP header\n2. The complete TCP header\n3. The same IP ID as other fragments",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 38
    },
    {
        "front": "How is fragment loss handled in TCP/IP, and who is responsible for retransmission?",
        "back": "If any fragment is lost:\n1. The entire TCP segment must be retransmitted\n2. The original sender (not routers) is responsible for retransmission\n3. The IP ID in retransmitted packets may differ from the original",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 39
    },
    {
        "front": "What is the formula for calculating the total size of an IP packet?",
        "back": "$$Total Size = IP Header (20 bytes) + TCP Segment Size$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 40
    },
    {
        "front": "What are the key requirements for successful fragment reassembly?",
        "back": "1. All fragments must arrive at the destination\n2. Fragments must share the same IP ID\n3. Fragment offset is used for proper ordering\n4. TCP port information is only available in the first fragment",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 41
    },
    {
        "front": "What happens to TCP connection states when a server crashes and reboots?",
        "back": "The server loses all information about previously established TCP connections as the connection state is lost from memory.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 42
    },
    {
        "front": "What is a TCP 'half-open connection' and when does it occur?",
        "back": "A half-open connection occurs when one end of a TCP connection loses connection state (due to crash/reboot) while the other end thinks the connection is still active, resulting in desynchronized connections.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 43
    },
    {
        "front": "What happens when a client sends data to a crashed/rebooted server in TCP?",
        "back": "The server, having no record of the connection, responds with an RST (Reset) segment: $$RST \\rightarrow \\text{Connection does not exist}$$",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 44
    },
    {
        "front": "What is the relationship between TCP port binding and application status after a server reboot?",
        "back": "While TCP ports become available after reboot, applications must explicitly restart to begin listening on ports. Port availability does not mean automatic application restart.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 45
    },
    {
        "front": "What are the positions of check bits in Hamming Code?",
        "back": "Check bits are placed at positions that are powers of 2 (positions 1, 2, 4, 8, etc.)",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 46
    },
    {
        "front": "What is the mathematical relationship between the number of check bits (r) and codeword length (n) in Hamming Code?",
        "back": "$$2^r \\geq n + r + 1$$, where r is the number of check bits and n is the codeword length",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 47
    },
    {
        "front": "How does a check bit at position $$2^k$$ determine which bits to check in Hamming Code?",
        "back": "The check bit at position $$2^k$$ covers all bits whose binary position numbers have a 1 in the kth position, ensuring even parity for those positions",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 48
    },
    {
        "front": "What error detection capabilities does Hamming Code provide?",
        "back": "Hamming Code allows for single-bit error correction and double-bit error detection in data transmission",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 49
    },
    {
        "front": "What is the purpose of ARP (Address Resolution Protocol)?",
        "back": "ARP is used to maintain MAC-to-IP address mappings and enables devices to discover MAC addresses corresponding to known IP addresses in local area networks.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 50
    },
    {
        "front": "What are the characteristics of an ARP Request message?",
        "back": "An ARP Request is a broadcast message that:\n- Is sent to all devices in local subnet\n- Uses broadcast MAC address (FF:FF:FF:FF:FF:FF)\n- Aims to discover MAC address for a known IP address",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 51
    },
    {
        "front": "What are the characteristics of an ARP Reply message?",
        "back": "An ARP Reply is a unicast message that:\n- Is sent directly to the requesting device\n- Uses a specific destination MAC address\n- Contains the requested MAC-IP address mapping",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 52
    },
    {
        "front": "At which OSI layers does ARP operate?",
        "back": "ARP operates at the interface between Layer 2 (Data Link) and Layer 3 (Network).",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 53
    },
    {
        "front": "What components are included in TCP checksum calculation?",
        "back": "Three main components:\n1. TCP header\n2. TCP data\n3. Pseudo header (containing source IP, destination IP, protocol, TCP length)",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 54
    },
    {
        "front": "What is the formula for TCP checksum calculation?",
        "back": "$$Checksum = \\text{One's\\_Complement}(\\sum\\text{Header} + \\sum\\text{Data} + \\sum\\text{Pseudo\\_Header})$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 55
    },
    {
        "front": "What are the key features of TCP checksum?",
        "back": "1. Provides basic error detection capability\n2. Computationally efficient compared to cryptographic hashes\n3. Mandatory in TCP but optional in IPv6\n4. Works on 16-bit word boundaries for efficiency",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 56
    },
    {
        "front": "How is TCP checksum calculated in terms of data processing?",
        "back": "1. Data is processed in 16-bit words\n2. All components are added together\n3. Final result is converted to one's complement",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 57
    },
    {
        "front": "What is TCP's persist timer and what problem does it solve?",
        "back": "TCP's persist timer is a flow control mechanism that prevents deadlock situations in window-based flow control. It prevents scenarios where both sender and receiver might wait indefinitely due to lost window update packets.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 58
    },
    {
        "front": "What situation triggers the TCP persist timer to start?",
        "back": "The persist timer starts when a sender receives a zero window notification from the receiver, indicating that the receiver's buffer is full and cannot accept more data.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 59
    },
    {
        "front": "How does the TCP persist timer mechanism work to prevent deadlock?",
        "back": "1. Timer starts when sender receives zero window notification\n2. When timer expires, sender probes receiver with small packet\n3. This forces receiver to respond with current window size\n4. Process prevents indefinite wait state",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 60
    },
    {
        "front": "What potential deadlock scenario does the TCP persist timer prevent?",
        "back": "It prevents a scenario where:\n- Sender is waiting for a window update\n- Receiver is waiting for data\n- A lost window update packet causes neither side to take action\n- Both sides wait indefinitely",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 61
    },
    {
        "front": "What is the key difference in signal transitions between Manchester and NRZ encoding?",
        "back": "Manchester encoding uses two signal transitions per bit period, while NRZ encoding uses one signal level for the entire bit period.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 62
    },
    {
        "front": "What is the relationship between Manchester and NRZ clock frequencies?",
        "back": "Manchester encoding requires twice the clock frequency of NRZ encoding, expressed as: $$f_{NRZ} = \\frac{f_{Manchester}}{2}$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 63
    },
    {
        "front": "Why is Manchester encoding considered self-clocking?",
        "back": "Manchester encoding is self-clocking because it has guaranteed signal transitions in the middle of each bit period.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 64
    },
    {
        "front": "What is the main advantage of NRZ encoding over Manchester encoding in terms of bandwidth?",
        "back": "NRZ encoding requires only half the bandwidth/clock frequency compared to Manchester encoding for transmitting the same bit sequence.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 65
    },
    {
        "front": "What is CSMA/CA and what does it stand for in wireless networks?",
        "back": "CSMA/CA stands for Carrier Sense Multiple Access with Collision Avoidance. It is a protocol designed for wireless networks where devices listen to the medium before transmitting, allow multiple devices to access the channel, and implement mechanisms to avoid collisions.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 66
    },
    {
        "front": "What is the key difference between CSMA/CA (wireless) and CSMA/CD (wired) networks?",
        "back": "In wireless networks (CSMA/CA), collisions cannot be detected while transmitting, so they must be avoided beforehand. In contrast, wired networks (CSMA/CD) can detect collisions while transmitting.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 67
    },
    {
        "front": "What are the main mechanisms used in CSMA/CA to prevent collisions?",
        "back": "The main mechanisms are:\n- RTS (Request to Send)\n- CTS (Clear to Send)\n- NAV (Network Allocation Vector)\n- Random backoff timers",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 68
    },
    {
        "front": "Why is CSMA/CA essential for wireless networks?",
        "back": "CSMA/CA is essential because:\n1. The wireless medium is shared by all devices in range\n2. Signal interference is more problematic than in wired networks\n3. Hidden node problems need to be addressed",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 69
    },
    {
        "front": "What is SMTP and what is its primary purpose?",
        "back": "SMTP (Simple Mail Transfer Protocol) is the standard protocol for email transmission across the Internet, designed specifically for sending and transferring electronic mail between servers.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 70
    },
    {
        "front": "What are the technical specifications of SMTP?",
        "back": "SMTP operates on TCP port 25 and is part of the application layer in the TCP/IP protocol suite.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 71
    },
    {
        "front": "What are the key characteristics of SMTP?",
        "back": "- Push protocol (sender initiates transmission)\n- Uses plain text commands\n- Handles outgoing mail delivery\n- Works with POP3 and IMAP for complete email functionality",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 72
    },
    {
        "front": "What are the complementary protocols that work with SMTP and their purposes?",
        "back": "- POP3 (Post Office Protocol): For receiving emails\n- IMAP (Internet Message Access Protocol): For managing emails on servers",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 73
    },
    {
        "front": "What is the formula for calculating the number of links in a fully connected mesh network topology with n nodes?",
        "back": "$$L_{mesh} = \\frac{n(n-1)}{2}$$\nWhere n is the number of nodes in the network.",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 74
    },
    {
        "front": "What is the formula for calculating the number of links in a star topology with n nodes?",
        "back": "$$L_{star} = n-1$$\nWhere n is the total number of nodes including the central hub.",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 75
    },
    {
        "front": "Why is the mesh topology formula divided by 2?",
        "back": "The formula is divided by 2 because each link is counted twice in the initial calculation (once for each node it connects), so we need to divide by 2 to get the actual number of physical links.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 76
    },
    {
        "front": "Compare the advantages and disadvantages of mesh vs star topology in terms of redundancy and cable usage.",
        "back": "Mesh topology:\n- Maximum redundancy\n- Requires most cables\n\nStar topology:\n- More efficient cable usage\n- Has a single point of failure (central hub)",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 77
    },
    {
        "front": "What is the default subnet mask for a Class B network?",
        "back": "255.255.0.0",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 78
    },
    {
        "front": "How many bits are used for network ID and host ID in a Class B network?",
        "back": "16 bits for network ID (first two octets) and 16 bits for host ID (last two octets)",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 79
    },
    {
        "front": "What is the binary representation of a Class B default subnet mask?",
        "back": "11111111.11111111.00000000.00000000",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 80
    },
    {
        "front": "How many networks and hosts are possible in a Class B network?",
        "back": "Approximately 16,384 networks, with up to 65,534 hosts per network",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 81
    },
    {
        "front": "What is Unshielded Twisted Pair (UTP) cable?",
        "back": "UTP is a network cable consisting of pairs of insulated copper wires twisted together, without additional metallic shielding. It's commonly used in Ethernet networks, telephone systems, and LANs.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 82
    },
    {
        "front": "What are the main advantages of UTP cabling?",
        "back": "1. Cost-effective compared to shielded alternatives\n2. Lighter and more flexible\n3. Easier to install\n4. Available in different categories for various bandwidth needs",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 83
    },
    {
        "front": "How does the twisting in UTP cables help with signal quality?",
        "back": "The twisting of wire pairs helps reduce electromagnetic interference (EMI) and crosstalk between adjacent wire pairs.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 84
    },
    {
        "front": "What is the maximum length limitation for a UTP cable run?",
        "back": "The maximum length for a UTP cable run is typically limited to 100 meters.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 85
    },
    {
        "front": "What is CRC (Cyclic Redundancy Check) and what is its primary purpose?",
        "back": "CRC is an error-detecting code used in digital networks and storage devices to detect accidental changes to raw data during transmission or storage.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 86
    },
    {
        "front": "What is a Generator Polynomial in CRC, and how does it relate to check bits?",
        "back": "A Generator Polynomial is a polynomial of degree n used as the divisor in CRC calculations. The degree of the polynomial determines the number of check bits (n bits). For example, polynomial $$x^3 + 1$$ requires 3 check bits.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 87
    },
    {
        "front": "Describe the basic steps of the CRC calculation process.",
        "back": "1. Append n zeros to the original message\n2. Perform polynomial division using modulo-2 arithmetic\n3. Use the remainder as check bits\n4. Create final transmitted message by combining original message + check bits",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 88
    },
    {
        "front": "What is the mathematical expression for the transmitted message in CRC?",
        "back": "If M is the original message and G is the generator polynomial:\nTransmitted message = $$M \\cdot 2^n + R$$\nwhere R is the remainder of $$(M \\cdot 2^n) \\div G$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 89
    },
    {
        "front": "How do you calculate the maximum number of subnets in a Class B network with n subnet bits?",
        "back": "Maximum number of subnets = $$2^n$$, where n is the number of subnet bits. Practically usable subnets = $$2^n - 2$$ (after subtracting all-0s and all-1s subnets)",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 90
    },
    {
        "front": "How do you calculate the number of usable hosts per subnet in a Class B network?",
        "back": "Usable hosts per subnet = $$2^{\\text{host bits}} - 2$$, where host bits = (16 - subnet bits). Subtract 2 to account for network and broadcast addresses.",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 91
    },
    {
        "front": "What are the key characteristics of a Class B network?",
        "back": "1. Starts with binary 10\n2. Has 16 bits for network portion\n3. Has 16 bits for host portion\n4. When subnetting, bits are borrowed from the host portion",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 92
    },
    {
        "front": "Why are two addresses subtracted when calculating usable hosts and practical subnets?",
        "back": "For hosts: Two addresses are subtracted to reserve the network address (all 0s) and broadcast address (all 1s)\nFor subnets: Two subnets are subtracted to avoid the all-0s and all-1s subnet addresses",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 93
    },
    {
        "front": "What are the two key components involved in calculating bit delay in networks?",
        "back": "1. Transmission Delay: Time to put one bit on the medium\n2. Propagation Distance: Distance covered during transmission time",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 94
    },
    {
        "front": "What is the formula for transmission delay in networks?",
        "back": "$$T_{transmission} = \\frac{1}{Bandwidth}$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 95
    },
    {
        "front": "What is the formula for calculating the 1-bit delay distance in networks?",
        "back": "$$Distance_{1-bit} = Propagation Speed \\times \\frac{1}{Bandwidth}$$\nWhere propagation speed is in meters/\u03bcs and bandwidth in bps",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 96
    },
    {
        "front": "What are the practical applications of understanding 1-bit delay distance in networks?",
        "back": "1. Understanding network latency\n2. Bit timing in synchronous communications\n3. Physical limitations of network architectures\n4. Design considerations for network topology\n5. Determining buffer sizes and timing requirements in network protocols",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 97
    },
    {
        "front": "What is DHCP and what is its primary function?",
        "back": "DHCP (Dynamic Host Configuration Protocol) is a network management protocol that dynamically assigns IP addresses and other network configuration parameters to devices on a network. It operates at the Application Layer.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 98
    },
    {
        "front": "What additional network configuration parameters does DHCP provide besides IP addresses?",
        "back": "DHCP provides subnet mask, gateway, and DNS server information.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 99
    },
    {
        "front": "What is the difference between ARP and RARP?",
        "back": "ARP (Address Resolution Protocol) maps IP addresses to MAC addresses using broadcast requests and unicast replies, while RARP (Reverse ARP) maps MAC addresses to IP addresses using static mapping tables.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 100
    },
    {
        "front": "How does BOOTP differ from DHCP?",
        "back": "BOOTP (Bootstrap Protocol) is the predecessor to DHCP and uses static mapping tables, making it less flexible than DHCP. Both operate at the Application Layer, but DHCP offers dynamic address assignment and configuration.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 101
    },
    {
        "front": "What is the purpose of a Jam Signal in CSMA/CD?",
        "back": "A Jam Signal is a 32-bit sequence that serves to:\n1. Ensure all stations detect the collision\n2. Force collision detection by all transmitting stations\n3. Reinforce the collision presence to all stations",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 102
    },
    {
        "front": "What are the key characteristics of a Jam Signal in CSMA/CD?",
        "back": "- 32 bits in length\n- Different from Preamble signal\n- Part of collision enforcement mechanism\n- Helps maintain network integrity during collisions",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 103
    },
    {
        "front": "What are the five main steps in the CSMA/CD protocol?",
        "back": "1. Listen before transmit (Carrier Sense)\n2. Multiple stations can access the medium (Multiple Access)\n3. Detect collisions while transmitting (Collision Detection)\n4. Send Jam signal when collision detected\n5. Execute backoff algorithm after collision",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 104
    },
    {
        "front": "What does CSMA/CD stand for and what are its main components?",
        "back": "CSMA/CD stands for:\nCarrier Sense Multiple Access with Collision Detection\n\nMain components:\n- Carrier Sense: Listen before transmitting\n- Multiple Access: Multiple stations can use the medium\n- Collision Detection: Ability to detect collisions during transmission",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 105
    },
    {
        "front": "What is Cyclic Redundancy Check (CRC)?",
        "back": "CRC is an error detection technique used in data communications where the sender appends a check value (CRC bits) to the original data, calculated using polynomial division.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 106
    },
    {
        "front": "What are the three key components of CRC?",
        "back": "1. Data Unit: Original message to be transmitted\n2. Divisor: Predetermined binary number (generator polynomial)\n3. Dividend at Receiver: Complete message (original data + CRC bits)",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 107
    },
    {
        "front": "What is the mathematical representation of the complete message in CRC?",
        "back": "$$\\text{Complete Message} = \\text{Original Data} + \\text{CRC bits}$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 108
    },
    {
        "front": "How does the receiver verify error-free transmission in CRC?",
        "back": "The receiver divides the complete message (original data + CRC bits) by the same divisor used by sender. If the remainder is zero, the transmission is considered error-free.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 109
    },
    {
        "front": "What is the formula for calculating character transmission rate in synchronous communication?",
        "back": "$$\\text{Characters per second} = \\frac{\\text{Bits per second}}{\\text{Total bits per character}}$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 110
    },
    {
        "front": "What are the components that make up the total bits per character in synchronous transmission?",
        "back": "In synchronous transmission, total bits per character includes:\n- Data bits (typically 7 bits)\n- Parity bit (1 bit for error detection)\nNote: No start/stop bits are needed",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 111
    },
    {
        "front": "Why is synchronous transmission more efficient than asynchronous transmission in terms of character transmission rate?",
        "back": "Synchronous transmission is more efficient because it doesn't require start and stop bits for each character, resulting in fewer overhead bits per character and higher transmission rates.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 112
    },
    {
        "front": "What are the key characteristics of synchronous data transmission?",
        "back": "- Data is transmitted as a continuous stream of bits\n- Each character includes data bits (typically 7) and a parity bit\n- No start/stop bits required\n- More efficient than asynchronous transmission",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 113
    },
    {
        "front": "What is the basic structure of an IPv4 address?",
        "back": "An IPv4 address is a 32-bit address written in dotted-decimal notation, divided into 4 octets (8 bits each), with format $$\text{xxx.xxx.xxx.xxx}$$ where each xxx ranges from 0-255.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 114
    },
    {
        "front": "How many unique addresses are possible in IPv4?",
        "back": "IPv4 allows for $$2^{32}$$ (approximately 4.3 billion) unique addresses.",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 115
    },
    {
        "front": "What are the two main portions of an IPv4 address?",
        "back": "An IPv4 address is divided into network and host portions, with the division determined by the subnet mask.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 116
    },
    {
        "front": "What is the valid range for each octet in an IPv4 address?",
        "back": "Each octet in an IPv4 address can range from 0 to 255 (8 bits of data).",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 117
    },
    {
        "front": "What is the typical frequency range for microwave communications?",
        "back": "Microwaves operate between 300 MHz to 300 GHz",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 118
    },
    {
        "front": "What is the wavelength range for microwaves?",
        "back": "$$\\lambda = 1 \\text{ meter to } 1 \\text{ millimeter}$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 119
    },
    {
        "front": "What are the three main classifications of microwave bands?",
        "back": "1. UHF (Ultra High Frequency)\n2. SHF (Super High Frequency)\n3. EHF (Extremely High Frequency)",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 120
    },
    {
        "front": "What are the main factors that influence microwave frequency selection?",
        "back": "1. Required bandwidth\n2. Atmospheric absorption\n3. Path loss considerations\n4. Application-specific requirements",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 121
    },
    {
        "front": "What is a T-switch in networking?",
        "back": "A T-switch is a mechanical or electronic device used for network configuration management that allows manual reconfiguration of physical connections between computing equipment.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 122
    },
    {
        "front": "What is the primary purpose of a T-switch?",
        "back": "The primary purpose is to allow manual reconfiguration of physical connections between computing equipment without physically unplugging cables.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 123
    },
    {
        "front": "List four main applications of T-switches in networking.",
        "back": "1. Network maintenance\n2. Backup switching\n3. Equipment testing\n4. Physical connection management",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 124
    },
    {
        "front": "How does a T-switch differ from other network switches like ethernet switches?",
        "back": "A T-switch operates at the physical connection level rather than handling data routing or packet switching.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 125
    },
    {
        "front": "What is Stop-and-Wait Protocol Efficiency and how is it measured?",
        "back": "Stop-and-Wait Protocol Efficiency measures the ratio of actual data transmission time to total time including delays. It is calculated as: $$\\text{Efficiency} = \\frac{\\text{Transmission time for data}}{\\text{Round Trip Time (RTT)} \\times \\text{Link Speed}}$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 126
    },
    {
        "front": "What is the complete formula for Stop-and-Wait Protocol Efficiency including all components?",
        "back": "$$\\text{Efficiency} = \\frac{\\text{Packet Size}}{\\text{Link Speed} \\times (2 \\times \\text{Propagation Delay} + \\text{Transmission Time})}$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 127
    },
    {
        "front": "What components are included in the Round Trip Time (RTT) for Stop-and-Wait Protocol?",
        "back": "RTT includes:\n- Two-way propagation delay (2p)\n- Data transmission time\n- ACK transmission time (if significant)",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 128
    },
    {
        "front": "What are the key factors affecting Stop-and-Wait Protocol Efficiency?",
        "back": "- Efficiency decreases as propagation delay increases\n- Maximum efficiency is limited by the ratio of transmission time to total round-trip time\n- In practice, efficiency is often improved by using sliding window protocols instead of stop-and-wait",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 129
    },
    {
        "front": "What is the probability formula for successful transmission in a slotted network with n nodes?",
        "back": "$$P(\\text{success}) = \\sum_{i=1}^{n} [P(S_i) \\prod_{j \\neq i} P(\\neg S_j)]$$\nwhere:\n- $$P(S_i)$$ is probability node i transmits\n- $$P(\\neg S_j)$$ is probability node j doesn't transmit",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 130
    },
    {
        "front": "What are the conditions required for successful frame transmission in a slotted LAN?",
        "back": "1. Exactly one node must transmit\n2. All other nodes must remain silent\n3. Only one node can successfully transmit in a given time slot",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 131
    },
    {
        "front": "Why is the multiplication rule of independent events used in calculating successful transmission probability?",
        "back": "The multiplication rule is used because we need:\n1. One node to transmit (independent event)\n2. ALL other nodes to remain silent (independent events)\nThese events must occur simultaneously for success",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 132
    },
    {
        "front": "What are the main applications of slotted network transmission probability calculations?",
        "back": "1. Medium Access Control (MAC) protocols\n2. Network performance analysis\n3. Collision probability calculations in shared medium networks",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 133
    },
    {
        "front": "What is the formula for efficiency/link utilization in Stop-and-Wait Protocol?",
        "back": "$$\\text{Efficiency} = \\frac{T_x}{T_x + 2T_p} = \\frac{1}{1 + 2a}$$\nwhere:\n- $$T_x$$ is transmission time\n- $$T_p$$ is propagation delay\n- $$a = \\frac{T_p}{T_x}$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 134
    },
    {
        "front": "How is transmission time ($$T_x$$) calculated in Stop-and-Wait Protocol?",
        "back": "$$T_x = \\frac{\\text{Frame Size}}{\\text{Bandwidth}}$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 135
    },
    {
        "front": "What is the formula for calculating link utilization based on frame size and propagation delay?",
        "back": "$$\\text{Utilization} = \\frac{\\text{Frame Size}}{\\text{Frame Size} + \\text{Bandwidth} \u00d7 2T_p}$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 136
    },
    {
        "front": "What condition must be met to achieve 50% utilization in Stop-and-Wait Protocol?",
        "back": "The frame transmission time must equal twice the propagation delay: $$T_x = 2T_p$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 137
    },
    {
        "front": "What are the two main categories of TCP connection patterns in internet protocols?",
        "back": "1. Single TCP Connection Protocols (e.g., SMTP, TELNET)\n2. Multiple TCP Connection Protocols (e.g., HTTP, FTP)",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 138
    },
    {
        "front": "Which protocols use a single TCP connection, and why?",
        "back": "SMTP and TELNET use single TCP connections. These protocols prioritize simplicity and sequential operations.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 139
    },
    {
        "front": "How does HTTP handle TCP connections, and what is the benefit?",
        "back": "HTTP can establish multiple parallel TCP connections, with each resource being fetched using a separate connection. This enables concurrent downloads and improved performance.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 140
    },
    {
        "front": "How does FTP manage TCP connections, and what is unique about its approach?",
        "back": "FTP uses two distinct TCP connections:\n1. Control Connection: Uses Telnet protocol for commands\n2. Data Connection: Separate connection for actual data transfer",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 141
    },
    {
        "front": "Which fields in an IP header remain unmodified during routing?",
        "back": "The Source Address and Destination Address remain unchanged throughout packet transmission.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 142
    },
    {
        "front": "What are the three IP header fields that are modified by routers during packet transmission?",
        "back": "1. Time to Live (TTL) - decremented by 1 at each hop\n2. Header Checksum - recalculated due to TTL changes\n3. Length - may be modified if fragmentation occurs",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 143
    },
    {
        "front": "How does a router modify the Time to Live (TTL) field in an IP header?",
        "back": "The router decrements (reduces) the TTL value by 1 at each hop.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 144
    },
    {
        "front": "Why do IP routers need to recalculate the header checksum?",
        "back": "The header checksum must be recalculated because of changes made to the TTL field, ensuring the integrity of the modified header.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 145
    },
    {
        "front": "How does an Ethernet switch handle collision domains?",
        "back": "An Ethernet switch creates separate collision domains for each port, giving each connected device its own dedicated collision domain. This prevents collisions between devices on different ports and enables full-duplex communication.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 146
    },
    {
        "front": "How does an Ethernet switch handle broadcast domains?",
        "back": "All ports on an Ethernet switch share the same broadcast domain. Broadcast traffic is forwarded to all ports (except the source port). Only Layer-3 devices (routers) can separate broadcast domains.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 147
    },
    {
        "front": "What is the key difference between a switch and a hub regarding collision domains?",
        "back": "A switch creates separate collision domains for each port, while a hub shares a single collision domain among all connected devices.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 148
    },
    {
        "front": "What is the key difference between a switch and a router regarding network domains?",
        "back": "A switch can only separate collision domains but maintains a single broadcast domain, while a router can separate both collision and broadcast domains.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 149
    },
    {
        "front": "What fields are added by the Physical Layer (Layer 1) to an Ethernet frame?",
        "back": "The Physical Layer adds:\n1. Preamble (7 bytes of alternating 1s and 0s: 10101010)\n2. Start Frame Delimiter (SFD) (1 byte: 10101011)",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 150
    },
    {
        "front": "What is the purpose of the Preamble and SFD in an Ethernet frame?",
        "back": "They are used for synchronization between sending and receiving devices. These fields are stripped off before the frame reaches the Data Link Layer and are not part of the actual frame structure.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 151
    },
    {
        "front": "What are the main components included in the Data Link Layer (Layer 2) of an Ethernet frame?",
        "back": "The Data Link Layer contains:\n1. MAC Addresses (Source and Destination)\n2. Length/Type field\n3. Data payload\n4. CRC/FCS (Frame Check Sequence)",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 152
    },
    {
        "front": "What is the pattern of the Ethernet frame's Preamble and SFD?",
        "back": "Preamble: 7 bytes of $$10101010$$\nSFD (Start Frame Delimiter): 1 byte of $$10101011$$",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 153
    },
    {
        "front": "What are the voltage ranges for RS-232C logic LOW (Mark/1)?",
        "back": "Logic LOW (Mark/1) ranges from $$+3V$$ to $$+15V$$",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 154
    },
    {
        "front": "What are the voltage ranges for RS-232C logic HIGH (Space/0)?",
        "back": "Logic HIGH (Space/0) ranges from $$-15V$$ to $$-3V$$",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 155
    },
    {
        "front": "What is the mathematical expression for valid RS-232C signal ranges?",
        "back": "Logic LOW: $$V_{LOW} = +3V \u2264 V \u2264 +15V$$\nLogic HIGH: $$V_{HIGH} = -15V \u2264 V \u2264 -3V$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 156
    },
    {
        "front": "What are three key differences between RS-232C and common digital logic?",
        "back": "1. Uses higher voltages than typical 5V/3.3V logic\n2. Has inverse relationship between voltage and logical level\n3. Includes a voltage buffer zone for noise immunity",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 157
    },
    {
        "front": "What is the formula for an affine cipher encryption?",
        "back": "$$C(M) = (kM + b) \\bmod n$$\nwhere:\n- k is the multiplicative key\n- b is the additive constant\n- n is the alphabet size\n- M is the numerical value of plaintext letter (A=0, B=1, ..., Z=25)",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 158
    },
    {
        "front": "What are the two basic components that make up an affine cipher?",
        "back": "An affine cipher is a combination of:\n1. Multiplicative cipher (multiplication by k)\n2. Caesar cipher (addition of constant b)",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 159
    },
    {
        "front": "What is the key requirement for the multiplicative key (k) in an affine cipher?",
        "back": "The multiplicative key (k) must be coprime with the modulus (n) for decryption to be possible.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 160
    },
    {
        "front": "What is the process of converting plaintext to numbers in an affine cipher?",
        "back": "Letters are converted to numbers using the mapping: A=0, B=1, ..., Z=25, creating a numerical value between 0 and 25 for each letter.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 161
    },
    {
        "front": "What is IEEE 1394 (FireWire) and what type of interface is it?",
        "back": "IEEE 1394 (FireWire) is a high-speed serial bus interface standard designed for connecting digital devices.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 162
    },
    {
        "front": "What are the four main technical characteristics of FireWire (IEEE 1394)?",
        "back": "1. High-speed serial interface\n2. Hot-pluggable capability\n3. Supports both isochronous and asynchronous data transfer\n4. Peer-to-peer communication capability",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 163
    },
    {
        "front": "What are the key performance specifications of FireWire?",
        "back": "- Maximum speed: 3.2 Gbps (FireWire 800)\n- Can daisy-chain up to 63 devices\n- Provides power to connected devices\n- Supports real-time data transfer",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 164
    },
    {
        "front": "What are the primary applications of FireWire (IEEE 1394)?",
        "back": "1. Digital audio/video devices\n2. External storage devices\n3. High-speed data transfer\n4. Professional audio/video equipment",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 165
    },
    {
        "front": "What is the formula for maximum utilization in a Token Ring network?",
        "back": "$$\\text{Maximum Utilization} = \\frac{t_t}{t_t + \\frac{t_p}{N}}$$\nWhere:\n- t_t = Frame transmission time\n- t_p = Ring latency\n- N = Number of stations",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 166
    },
    {
        "front": "What are the two key timing components that affect Token Ring utilization?",
        "back": "1. Frame transmission time (t_t): Time to transmit one frame\n2. Ring latency (t_p): Time for token to complete one round",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 167
    },
    {
        "front": "How does increasing the number of stations (N) affect Token Ring utilization?",
        "back": "Increasing the number of stations (N) improves utilization by reducing per-station latency. The utilization approaches 1 (100%) as N increases.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 168
    },
    {
        "front": "Under what condition is Token Ring utilization optimized?",
        "back": "Token Ring utilization is optimized when the frame transmission time (t_t) is much larger than the per-station latency (t_p/N).",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 169
    },
    {
        "front": "What is the formula for maximum efficiency in a Token Ring network?",
        "back": "$$\\text{Maximum Efficiency} = \\frac{t_t}{t_t + (t_p/N)}$$\nWhere:\n- $$t_t$$ = Transmission time for one frame\n- $$t_p$$ = Ring latency (propagation delay)\n- $$N$$ = Number of stations",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 170
    },
    {
        "front": "What are the three main factors that improve Token Ring network efficiency?",
        "back": "1. Higher transmission time ($$t_t$$)\n2. Lower propagation delay ($$t_p$$)\n3. More stations (N)",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 171
    },
    {
        "front": "What are the key assumptions made in the Token Ring efficiency formula?",
        "back": "The formula assumes:\n1. Early token release\n2. Equal spacing between stations\n3. Fixed frame size\n4. All stations are active\n5. Other latencies are negligible",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 172
    },
    {
        "front": "What do the variables $$t_t$$ and $$t_p$$ represent in Token Ring efficiency?",
        "back": "- $$t_t$$ represents the transmission time for one frame\n- $$t_p$$ represents the ring latency (propagation delay)",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 173
    },
    {
        "front": "What is Base64 encoding and what is its primary purpose?",
        "back": "Base64 is a binary-to-text encoding scheme that converts binary data into ASCII characters. It is used to transmit binary data through text-based protocols, such as email attachments and data URLs.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 174
    },
    {
        "front": "How many bits are in each Base64 character group and why?",
        "back": "Each Base64 character represents 6 bits because $$2^6 = 64$$, which allows for 64 unique characters in the encoding alphabet.",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 175
    },
    {
        "front": "What are the components of the standard Base64 alphabet?",
        "back": "The Base64 alphabet consists of:\n- Values 0-25: 'A' to 'Z'\n- Values 26-51: 'a' to 'z'\n- Values 52-61: '0' to '9'\n- Value 62: '+'\n- Value 63: '/'\n- Padding character: '='",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 176
    },
    {
        "front": "What is the relationship between input bytes and output characters in Base64 encoding?",
        "back": "Every 3 bytes (24 bits) of binary input produces 4 Base64 characters. When the input length is not divisible by 3, padding ('=') is added to complete the final group.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 177
    },
    {
        "front": "What is the formula for channel efficiency in a polling-based broadcast channel?",
        "back": "$$\\text{Efficiency} = \\frac{\\text{Transmission Time}}{\\text{Transmission Time + Polling Overhead}}$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 178
    },
    {
        "front": "How is maximum throughput calculated in a broadcast channel?",
        "back": "$$\\text{Maximum Throughput} = \\text{Channel Capacity} \\times \\text{Efficiency}$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 179
    },
    {
        "front": "What are the main time components in a polling-based broadcast channel cycle?",
        "back": "The main components are:\n1. Transmission Time: Time to transmit data at channel capacity\n2. Polling Overhead: Time spent in polling between transmissions\n3. Total Cycle Time = Transmission Time + Polling Overhead",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 180
    },
    {
        "front": "Why is the maximum achievable throughput always less than the channel capacity in polling-based systems?",
        "back": "Because polling overhead reduces the effective channel utilization. The time spent on polling between transmissions cannot be used for data transmission, thus reducing the overall throughput.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 181
    },
    {
        "front": "What is the structure of routing in a complete binary tree network with centralized control?",
        "back": "All messages must travel up to the root node first, and then down to the destination node (up-down routing pattern).",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 182
    },
    {
        "front": "How many nodes are present at level i in a complete binary tree?",
        "back": "At level i, there are $$2^i$$ nodes (except possibly at the last level).",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 183
    },
    {
        "front": "What is the formula for calculating average path length to root in a complete binary tree?",
        "back": "$$\\text{Avg}_{\\text{to root}} = \\frac{\\sum(\\text{depth}_i \\times \\text{nodes at depth}_i)}{\\text{total nodes}}$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 184
    },
    {
        "front": "How do you calculate the total average number of hops in a complete binary tree network with centralized routing?",
        "back": "$$\\text{Total Average Hops} = 2 \\times \\text{Avg}_{\\text{to root}}$$ \nThis accounts for both upward (source to root) and downward (root to destination) paths.",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 185
    },
    {
        "front": "What are the components that make up Round Trip Time (RTT) in sliding window protocols?",
        "back": "RTT consists of two components:\n1. Transmission time: $$T_{trans} = \\frac{K}{R}$$ (K = frame size, R = channel capacity)\n2. Propagation delay: $$T_{prop} = 2Lt$$ (L = distance, t = delay per unit distance)",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 186
    },
    {
        "front": "How is the maximum number of frames in transit calculated in sliding window protocols?",
        "back": "Maximum frames in transit = $$\\frac{RTT}{T_{trans}} = \\frac{K + 2LtR}{K}$$\nWhere:\nK = frame size\nL = distance\nt = delay per unit distance\nR = channel capacity",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 187
    },
    {
        "front": "What is the formula for calculating the minimum number of sequence number bits needed in sliding window protocols?",
        "back": "Minimum bits needed = $$\\left\\lceil \\log_2\\left(\\frac{K + 2LtR}{K}\\right) \\right\\rceil$$\nWhere:\nK = frame size\nL = distance\nt = delay per unit distance\nR = channel capacity",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 188
    },
    {
        "front": "Why are sequence number bits important in sliding window protocols?",
        "back": "Sequence number bits are crucial for ensuring unique identification of frames during transmission, enabling efficient flow control and error detection in data link layer protocols.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 189
    },
    {
        "front": "What is Cyclic Redundancy Check (CRC)?",
        "back": "CRC is an error-detecting code used in digital networks and storage devices to detect accidental changes to raw data.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 190
    },
    {
        "front": "What is the role of the Generator Polynomial in CRC, and how does it relate to check bits?",
        "back": "The Generator Polynomial serves as the divisor in CRC calculations. Its degree 'n' determines the number of check bits needed. For example, a polynomial $$x^3 + 1$$ requires 3 check bits.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 191
    },
    {
        "front": "What are the steps in the CRC calculation process?",
        "back": "1. Append n zeros to the original message\n2. Perform polynomial division using modulo-2 arithmetic\n3. Use the remainder as CRC bits\n4. Combine original message with CRC bits for final transmission",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 192
    },
    {
        "front": "What is the mathematical formula for the transmitted message in CRC?",
        "back": "$$\\text{Transmitted Message} = M \\cdot 2^n + \\text{CRC}$$\nwhere CRC is the remainder of $$\\frac{M \\cdot 2^n}{G}$$\n(M is the message, G is the generator polynomial, n is the degree of G)",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 193
    },
    {
        "front": "How do you calculate the maximum number of subnets in a Class B network when n bits are borrowed?",
        "back": "Maximum number of subnets = $$2^n$$, where n is the number of borrowed subnet bits. Note: Practically, subtract 2 for network and broadcast addresses.",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 194
    },
    {
        "front": "How do you calculate the maximum number of hosts per subnet in a Class B network with n subnet bits?",
        "back": "Maximum hosts per subnet = $$2^{(16-n)}$$\nUsable hosts = $$2^{(16-n)} - 2$$\nwhere n is the number of subnet bits, and we subtract 2 for network and broadcast addresses.",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 195
    },
    {
        "front": "What is the default number of host bits in a Class B network before subnetting?",
        "back": "Class B networks have 16 bits available for host addressing by default.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 196
    },
    {
        "front": "What is the relationship between borrowed bits and subnet/host capacity in Class B networks?",
        "back": "Each bit borrowed from the host portion doubles the possible number of subnets but halves the possible number of hosts per subnet.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 197
    },
    {
        "front": "What is the formula for transmission delay (bit time) in network communications?",
        "back": "$$T_{transmission} = \\frac{1}{Bandwidth}$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 198
    },
    {
        "front": "What is the formula for calculating 1-bit delay distance in networks?",
        "back": "$$1\\text{-bit delay distance} = Propagation Speed \\times \\frac{1}{Bandwidth}$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 199
    },
    {
        "front": "What are the two key components that determine 1-bit delay in networks?",
        "back": "1. Transmission Delay (time needed to put one bit on the medium)\n2. Propagation Delay (how fast the signal travels through the physical medium)",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 200
    },
    {
        "front": "Why is the concept of 1-bit delay important in network design?",
        "back": "The 1-bit delay concept is important for understanding:\n- Signal timing\n- Network latency\n- Buffer requirements\n- Maximum network segment lengths",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 201
    },
    {
        "front": "What is the probability formula for a successful transmission in a slotted LAN where exactly one station transmits?",
        "back": "$$P(\\text{exactly one transmits}) = np(1-p)^{n-1}$$\nWhere:\nn = total number of stations\np = probability of transmission attempt by each station",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 202
    },
    {
        "front": "What conditions are required for a successful transmission in a slotted LAN system?",
        "back": "1. Exactly one station must transmit\n2. All other stations must remain silent\n3. Each station independently decides to transmit with probability p",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 203
    },
    {
        "front": "What does the term $$(1-p)^{n-1}$$ represent in the slotted LAN transmission probability formula?",
        "back": "It represents the probability that all other (n-1) stations remain silent, where (1-p) is the probability of not transmitting for each station.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 204
    },
    {
        "front": "What is the expanded binomial probability formula for exactly one successful transmission in slotted LAN?",
        "back": "$$P(\\text{exactly one transmits}) = {n \\choose 1}p^1(1-p)^{n-1}$$\nThis simplifies to $$np(1-p)^{n-1}$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 205
    },
    {
        "front": "What is the formula for calculating the maximum number of sources (S1) when there is no buffer in link multiplexing?",
        "back": "$$S1 = \\frac{\\text{Link Capacity}}{\\text{Source Rate}}$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 206
    },
    {
        "front": "How is the effective rate calculated for a source with a duty cycle in link multiplexing?",
        "back": "$$\\text{Effective Rate} = \\text{Source Rate} \\times \\frac{\\text{On Time}}{\\text{Total Time}}$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 207
    },
    {
        "front": "What is the formula for calculating the maximum number of sources (S2) when there is a large buffer?",
        "back": "$$S2 = \\frac{\\text{Link Capacity}}{\\text{Effective Rate per Source}}$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 208
    },
    {
        "front": "What are the key differences between buffered and non-buffered link multiplexing?",
        "back": "- Without buffering: Must plan for peak rates\n- With buffering: Can plan for average rates\n- Buffer allows for temporary traffic bursts above link capacity",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 209
    },
    {
        "front": "What is the formula for calculating the minimum packet processing time required for wire-speed forwarding in routers?",
        "back": "$$T_{process} = \\frac{\\text{Minimum Frame Size} \\times 8}{\\text{Total Input Bandwidth}}$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 210
    },
    {
        "front": "What are the key components needed to calculate wire-speed packet processing time?",
        "back": "1. Minimum frame size (including overhead like Preamble and Inter-Packet-Gap)\n2. Combined bandwidth of all input interfaces\n3. Total incoming bandwidth for full-duplex interfaces",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 211
    },
    {
        "front": "What defines successful wire-speed operation in a router?",
        "back": "A router achieves wire-speed operation when it can complete all packet processing (routing decisions, header updates, and switching) within the calculated processing time window without introducing queuing delays.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 212
    },
    {
        "front": "What happens if a router's processing time exceeds the minimum required time for wire-speed forwarding?",
        "back": "If processing takes longer than the minimum required time, queuing delays will occur, preventing line-rate forwarding.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 213
    },
    {
        "front": "What is Goodput in network communication and how is it measured?",
        "back": "Goodput is the effective data transfer rate that measures only successfully acknowledged packets. It is calculated as the ratio of successfully delivered data to total transmission time.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 214
    },
    {
        "front": "What is the formula for calculating Goodput at time i in window-based flow control?",
        "back": "$$Goodput = \\frac{Successfully\\space delivered\\space packets}{Total\\space time} = \\frac{i-N}{i} = 1-\\frac{N}{i}$$\nWhere:\n- i = Current time/Total packets sent\n- N = Window size/RTT",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 215
    },
    {
        "front": "What are the key components that affect Goodput in window-based flow control?",
        "back": "1. Successfully acknowledged packets\n2. Round Trip Time (RTT)\n3. Window size (limits unacknowledged packets in transit)\n4. Total transmission time",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 216
    },
    {
        "front": "What does (i-N) represent in the Goodput formula?",
        "back": "(i-N) represents the number of acknowledged packets (successful deliveries), where i is the current time/total packets sent and N is the window size/RTT.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 217
    },
    {
        "front": "What is the Longest Prefix Match principle in IP routing?",
        "back": "When a router receives a packet, it selects the routing table entry with the longest matching subnet mask (most 1's) after performing the operation: $$\\text{Destination IP} \\text{ AND } \\text{Subnet Mask}$$",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 218
    },
    {
        "front": "What is the mathematical operation used to determine a network prefix from an IP address?",
        "back": "$$\\text{IP} \\text{ AND } \\text{Mask} = \\text{Network Prefix}$$\nWhere AND is a bitwise operation between IP address and subnet mask",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 219
    },
    {
        "front": "What is the process of Longest Prefix Matching in routing tables?",
        "back": "1. For each entry, perform: $$\\text{Destination IP} \\text{ AND } \\text{Subnet Mask}$$\n2. Compare result with destination network\n3. Choose entry with longest subnet mask among matches\n4. Forward packet to corresponding interface",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 220
    },
    {
        "front": "How does the order of checking work in Longest Prefix Matching?",
        "back": "1. Start with longest mask (most specific)\n2. Move to shorter masks (more general) if no match\n3. Multiple matches possible, but longest match wins",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 221
    },
    {
        "front": "What are the two key length-related properties of a hash function?",
        "back": "1. Input Length Property: Accepts input of any arbitrary length\n2. Output Length Property: Produces a fixed-length output (hash value/digest)",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 222
    },
    {
        "front": "What is a collision in the context of hash functions?",
        "back": "A collision occurs when two different inputs produce the same hash value. Mathematically, for inputs $$x_1 \neq x_2$$, a collision means $$H(x_1) = H(x_2)$$.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 223
    },
    {
        "front": "Give an example of a hash collision using the modulo hash function h(x) = x mod 10",
        "back": "For the hash function $$h(x) = x \bmod 10$$:\nh(1) = 1\nh(11) = 1\nBoth inputs (1 and 11) produce the same hash value.",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 224
    },
    {
        "front": "Why are collisions inevitable in hash functions, and what's the requirement for cryptographic hash functions regarding collisions?",
        "back": "Collisions are mathematically inevitable due to the pigeonhole principle. For cryptographic hash functions, finding such collisions should be computationally difficult (collision-resistant), though the function cannot be completely collision-free.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 225
    },
    {
        "front": "What error detection mechanism is used in Ethernet frames at the Data Link Layer?",
        "back": "Cyclic Redundancy Check (CRC), which is located in the Frame Check Sequence (FCS) field. It uses polynomial division and is effective at detecting burst errors and multiple bit errors.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 226
    },
    {
        "front": "What error detection mechanism is used in IP packets at the Network Layer?",
        "back": "Checksum, which is located in the IP header. It's calculated by adding up 16-bit words and taking the one's complement.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 227
    },
    {
        "front": "Compare the error detection mechanisms used in Ethernet (Data Link Layer) vs IP (Network Layer)",
        "back": "Ethernet uses CRC which is more robust but computationally intensive, while IP uses Checksum which is simpler and faster but less robust. This reflects each layer's specific requirements and trade-offs between processing overhead and error detection capability.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 228
    },
    {
        "front": "Where are the error detection fields located in Ethernet frames and IP packets?",
        "back": "In Ethernet frames, the CRC is located in the Frame Check Sequence (FCS) field. In IP packets, the Checksum is located in the header.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 229
    },
    {
        "front": "What are the four key commands used in SMTP (Simple Mail Transfer Protocol)?",
        "back": "1. HELO (Initial greeting)\n2. MAIL FROM\n3. RCPT TO\n4. DATA",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 230
    },
    {
        "front": "What are the four main commands used in FTP (File Transfer Protocol)?",
        "back": "1. PORT (Specifies connection parameters)\n2. USER (Authentication)\n3. RETR (Retrieve file)\n4. STOR (Store file)",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 231
    },
    {
        "front": "What is the primary purpose of SMTP (Simple Mail Transfer Protocol)?",
        "back": "SMTP is used for sending emails between servers and clients.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 232
    },
    {
        "front": "Why is understanding protocol command associations important in networking?",
        "back": "Understanding protocol command associations is important for:\n1. Protocol identification\n2. Network debugging\n3. System administration\n4. Security analysis",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 233
    },
    {
        "front": "What is the primary purpose of the Spanning Tree Protocol (STP) in bridge networks?",
        "back": "STP creates loop-free paths in LANs by establishing a hierarchical structure for packet forwarding, preventing broadcast storms and maintaining network stability.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 234
    },
    {
        "front": "How is the root bridge selected in STP?",
        "back": "The bridge with the lowest serial number is selected as the root bridge.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 235
    },
    {
        "front": "What are the key rules for port selection in STP when there are multiple bridges forwarding to the same LAN?",
        "back": "1. Priority is given to bridges closest to root\n2. Among equidistant bridges, the bridge with the lowest serial number wins\n3. Port conflicts are resolved using port index values (lower wins)",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 236
    },
    {
        "front": "What is a root port in STP and how is it determined?",
        "back": "A root port is the port that provides the shortest path to the root bridge. Each bridge designates one root port for forwarding frames to the root bridge.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 237
    },
    {
        "front": "What is the main purpose of Spanning Tree Protocol (STP) in bridge networks?",
        "back": "STP creates a loop-free logical topology in networks with redundant paths by selecting root bridges, root ports, and designated ports while blocking other ports to prevent loops.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 238
    },
    {
        "front": "How is the root bridge selected in STP, and what happens to its ports?",
        "back": "The bridge with the lowest serial/ID number becomes the root bridge, and all ports on the root bridge become designated ports.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 239
    },
    {
        "front": "What are the criteria for root port selection in STP?",
        "back": "Root port selection criteria:\n1. Shortest path cost to root bridge\n2. If equal costs, choose port with lower index number\nNote: Each non-root bridge must select exactly one root port, which is always in forwarding state.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 240
    },
    {
        "front": "What is the formula for calculating the total number of forwarding ports in a spanning tree?",
        "back": "$$\\text{Total Forwarding Ports} = \\text{Number of LANs} + \\text{Number of Bridges} - 1$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 241
    },
    {
        "front": "What are the possible port states in STP and which ports go into which states?",
        "back": "There are two main port states:\n1. Forwarding ports: Root ports and designated ports\n2. Blocked ports: All other ports (to prevent loops)",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 242
    },
    {
        "front": "What is the main principle of Go-Back-N ARQ in Sliding Window Protocol?",
        "back": "When an error occurs, the sender must retransmit all packets starting from the lost packet, including all subsequent packets in the current window.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 243
    },
    {
        "front": "What is the formula for calculating total transmissions in Go-Back-N ARQ?",
        "back": "$$Total_{transmissions} = Original_{packets} + \\sum Retransmissions_{after\\_each\\_loss}$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 244
    },
    {
        "front": "What role does the window size play in Go-Back-N ARQ?",
        "back": "The window size determines:\n1. How many unacknowledged packets can be in transit\n2. The maximum number of packets that must be retransmitted after a loss",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 245
    },
    {
        "front": "What are the key components that affect retransmission in Go-Back-N ARQ?",
        "back": "1. Lost packet pattern (every Nth packet)\n2. Window size\n3. Lost acknowledgments\n4. Sequential packet numbering",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 246
    },
    {
        "front": "What is CSMA/CD and what does it stand for?",
        "back": "CSMA/CD stands for Carrier Sense Multiple Access with Collision Detection. It is a media access control protocol used in early Ethernet networks that allows multiple devices to share the same network medium.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 247
    },
    {
        "front": "What are the three main components of CSMA/CD's operating principle?",
        "back": "1. Carrier Sensing: Devices listen before transmitting\n2. Multiple Access: Multiple stations can access the medium\n3. Collision Detection: Devices can detect when transmissions collide",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 248
    },
    {
        "front": "What is the relationship between CSMA/CD efficiency and propagation delay?",
        "back": "The efficiency of CSMA/CD is inversely proportional to the propagation delay: $$\\text{Efficiency} \\propto \\frac{1}{\\text{Propagation Delay}}$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 249
    },
    {
        "front": "What are the key limitations of CSMA/CD?",
        "back": "1. Not suitable for networks with high propagation delay (like satellite networks)\n2. Performance degrades significantly when distance/delay increases\n3. Collision detection becomes ineffective with long propagation times",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 250
    },
    {
        "front": "What is the basic principle of how traceroute works?",
        "back": "Traceroute maps network paths by sending packets with incrementing TTL values and collecting ICMP responses from routers when packets expire.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 251
    },
    {
        "front": "How does TTL manipulation work in traceroute?",
        "back": "- Packets are sent with incrementing TTL values (starting from 1)\n- Each router decrements TTL by 1\n- When TTL reaches 0, the packet is dropped and an ICMP message is sent back",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 252
    },
    {
        "front": "What is the relationship between router position and TTL value in traceroute?",
        "back": "$$\\text{Router}_n \\text{ discovered with } \\text{TTL} = n$$\nMeaning the nth router in the path is discovered using a packet with TTL value of n",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 253
    },
    {
        "front": "What types of ICMP messages are used in traceroute and when are they generated?",
        "back": "1. ICMP Time Exceeded: Sent by routers when TTL reaches 0\n2. ICMP Echo Reply: Sent by final destination when reached",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 254
    },
    {
        "front": "What is the purpose of the PROMPT command in FTP?",
        "back": "The PROMPT command is a control command used during batch file transfers to control interactive prompting during multiple file transfers (mget/mput). It helps automate file transfer operations.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 255
    },
    {
        "front": "What is the purpose of the HEAD command in HTTP?",
        "back": "The HEAD command is a request method used for retrieving metadata/document headers without downloading the actual content. It's useful for checking resource properties efficiently.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 256
    },
    {
        "front": "What is the format and purpose of the RCPT command in SMTP?",
        "back": "Format: RCPT TO: <email_address>\nPurpose: Specifies email recipients and is used in the email delivery process to identify message destinations.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 257
    },
    {
        "front": "How do the command vocabularies differ between FTP, HTTP, and SMTP in terms of their primary functions?",
        "back": "Each protocol has specialized commands for their specific purposes:\n- FTP: Commands for file operations\n- HTTP: Commands for web resource access\n- SMTP: Commands for email transmission",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 258
    },
    {
        "front": "What is the purpose of minimum frame size in Ethernet CSMA/CD?",
        "back": "The minimum frame size ensures that the sender can detect any collision before finishing the frame transmission, making the CSMA/CD protocol effective.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 259
    },
    {
        "front": "What is the formula for calculating minimum frame size in Ethernet CSMA/CD?",
        "back": "$$\\text{Minimum Frame Size} = \\text{Data Rate} \\times (\\text{Round Trip Delay} + \\text{Jam Signal Transmission Time})$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 260
    },
    {
        "front": "What are the key components of the collision detection window in Ethernet CSMA/CD?",
        "back": "1. Time for first bit to reach receiver (propagation delay)\n2. Time for jam signal to return (propagation delay)\n3. Time to transmit the jam signal",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 261
    },
    {
        "front": "How is the total time calculated for minimum frame size in CSMA/CD?",
        "back": "$$\\text{Total Time} = \\text{RTD} + \\frac{\\text{Jam Signal Size}}{\\text{Data Rate}}$$\nWhere RTD is Round Trip Delay",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 262
    },
    {
        "front": "What are the two main components that make up a packet's total size in packet switching?",
        "back": "A packet consists of:\n1. Data size\n2. Header overhead\nTotal packet size = Data size + Header size",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 263
    },
    {
        "front": "What is the formula for calculating the number of packets needed for a message?",
        "back": "$$\\text{Number of packets} = \\frac{\\text{Message size}}{\\text{Data size per packet}}$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 264
    },
    {
        "front": "What are the formulas for calculating first packet delay and remaining packets delay in packet switching?",
        "back": "First packet delay: $$T_{first} = \\text{Number of nodes} \\times \\frac{\\text{Packet size}}{\\text{Bandwidth}}$$\n\nRemaining packets delay: $$T_{remaining} = (\\text{Number of packets} - 1) \\times \\frac{\\text{Packet size}}{\\text{Bandwidth}}$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 265
    },
    {
        "front": "How is the optimal packet size determined in packet switching networks?",
        "back": "The optimal packet size is determined when the derivative of total transmission time with respect to packet size equals zero. This balances the trade-off between:\n- Larger packets (fewer packets but longer transmission time per packet)\n- Smaller packets (more packets but shorter transmission time per packet)",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 266
    },
    {
        "front": "What is the efficiency formula for Go-Back-N ARQ protocol?",
        "back": "$$\\text{Efficiency} = \\frac{\\text{Window Size} \\times \\text{Transmission Time}}{\\text{Transmission Time} + 2 \\times \\text{Propagation Time}}$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 267
    },
    {
        "front": "How is transmission time calculated in Go-Back-N ARQ?",
        "back": "$$\\text{Transmission Time} = \\frac{\\text{Frame Size in bits}}{\\text{Link Speed}}$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 268
    },
    {
        "front": "What is the formula for maximum achievable data rate in Go-Back-N ARQ?",
        "back": "$$\\text{Maximum Data Rate} = \\text{Efficiency} \\times \\text{Link Speed}$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 269
    },
    {
        "front": "What are the three main factors that affect Go-Back-N ARQ Protocol Efficiency?",
        "back": "1. Window size (n)\n2. Transmission time\n3. Propagation delay",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 270
    },
    {
        "front": "What is the formula for Frame Transmission Time (Tt) in a Token Ring LAN?",
        "back": "$$T_t = \\frac{\\text{Frame Size in bits}}{\\text{Bandwidth}}$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 271
    },
    {
        "front": "What is Token Holding Time (THT) in delayed token reinsertion?",
        "back": "$$THT = T_t + \\text{Ring Latency}$$\nWhere Tt is Frame Transmission Time and Ring Latency is the time for a bit to travel around the ring once.",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 272
    },
    {
        "front": "What is the formula for Utilization in a Token Ring LAN?",
        "back": "$$\\text{Utilization} = \\frac{N \\times T_t}{P_t + N \\times THT}$$\nWhere:\nN = Number of frames\nPt = Propagation time\nTHT = Token Holding Time\nTt = Frame Transmission Time",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 273
    },
    {
        "front": "How is the Effective Data Rate calculated in a Token Ring LAN?",
        "back": "$$\\text{Effective Rate} = \\text{Utilization} \\times \\text{Bandwidth}$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 274
    },
    {
        "front": "What determines the minimum number of sequence numbers needed in a Sliding Window ARQ protocol?",
        "back": "The minimum number of sequence numbers needed depends on both the sender's window size ($$W_s$$) and receiver's window size ($$W_r$$).",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 275
    },
    {
        "front": "What is the formula for calculating the minimum sequence numbers required in Sliding Window ARQ?",
        "back": "Minimum sequence numbers required = $$W_s + W_r$$, where $$W_s$$ is the sender window size and $$W_r$$ is the receiver window size",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 276
    },
    {
        "front": "Why is the minimum sequence number requirement important in Sliding Window ARQ?",
        "back": "It ensures:\n1. Unique identification of packets\n2. Prevention of sequence number wraparound\n3. Proper packet ordering and acknowledgment\n4. Avoidance of confusion between new packets and retransmissions",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 277
    },
    {
        "front": "What two main components must the sequence space accommodate in Sliding Window ARQ?",
        "back": "1. Unacknowledged packets at the sender ($$W_s$$)\n2. Packets being processed at the receiver ($$W_r$$)",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 278
    },
    {
        "front": "What is bit stuffing in data link layer protocols?",
        "back": "Bit stuffing is a technique used in data link protocols to prevent data patterns from being mistaken for control flags by inserting extra bits into the data stream according to specific rules.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 279
    },
    {
        "front": "What is the basic rule for bit stuffing in data link layer?",
        "back": "After every two consecutive 1s (11), a 0 is inserted into the data stream. The receiver removes these stuffed bits to recover the original data.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 280
    },
    {
        "front": "What is the primary purpose of bit stuffing?",
        "back": "1. Ensures frame delimiter patterns don't accidentally appear in the data\n2. Maintains data transparency while allowing special bit sequences for control",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 281
    },
    {
        "front": "For a flag pattern $$F = 0111$$, what is the bit stuffing rule and its result?",
        "back": "Rule: Look for pattern $$11$$ in data and insert $$0$$ after each occurrence.\nResult: The resulting sequence will never contain $$111$$ except in flags.",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 282
    },
    {
        "front": "What is the formula for calculating transfer rate in asynchronous serial transmission?",
        "back": "$$\\text{Transfer Rate} = \\frac{\\text{Bit Rate}}{\\text{Total bits per character}}$$\nwhere Total bits = Data bits + Start bits + Stop bits + Parity bits",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 283
    },
    {
        "front": "What is the formula for calculating transfer rate in synchronous transmission?",
        "back": "$$\\text{Transfer Rate} = \\frac{\\text{Bit Rate} \\times \\text{Number of Data Characters}}{\\text{Total bits in frame}}$$\nwhere Total bits = (Sync characters \u00d7 8) + (Data characters \u00d7 8)",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 284
    },
    {
        "front": "What are the key differences between asynchronous and synchronous transmission in terms of efficiency?",
        "back": "Asynchronous: More overhead per character but simpler implementation\nSynchronous: Better efficiency for bulk data but requires initial synchronization overhead",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 285
    },
    {
        "front": "What components make up the total bits per character in asynchronous serial transmission?",
        "back": "The total bits per character consists of:\n- Data bits\n- Start bits\n- Stop bits\n- Parity bits",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 286
    },
    {
        "front": "What is the basic waiting time formula in Ethernet's Binary Exponential Backoff (BEB) Algorithm?",
        "back": "The waiting time is $$k \\times 51.2 \\mu s$$, where k is randomly chosen from range $$[0, 2^N-1]$$, and N is the transmission attempt number ($$1 \\leq N \\leq 10$$).",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 287
    },
    {
        "front": "What are the backoff range rules for different transmission attempts in Ethernet's BEB Algorithm?",
        "back": "- Attempts 1-10: k chosen from $$[0, 2^N-1]$$\n- Attempts 11-15: k chosen from $$[0, 1023]$$\n- At attempt 16: transmission is abandoned",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 288
    },
    {
        "front": "How is winning probability calculated in Ethernet's BEB Algorithm?",
        "back": "Winning probability = $$\\frac{\\text{Favorable combinations}}{\\text{Total possible combinations}}$$\nThe station with lower k value wins the backoff race.",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 289
    },
    {
        "front": "What is the significance of the slot time (51.2 \u03bcs) in Ethernet's BEB Algorithm?",
        "back": "The slot time (51.2 \u03bcs) is the basic time unit used to calculate the actual waiting time before retransmission. The total waiting time is this slot time multiplied by the randomly chosen k value.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 290
    },
    {
        "front": "What is the formula for calculating character transmission rate in serial communication?",
        "back": "$$\\text{Characters per second} = \\frac{\\text{Baud Rate}}{\\text{Total bits per character}}$$\nWhere Total bits per character = Start bits + Data bits + Parity bits + Stop bits",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 291
    },
    {
        "front": "What are the components that make up the total bits per character in serial communication?",
        "back": "The total bits per character consists of:\n- Start bit(s)\n- Data bits\n- Parity bit(s)\n- Stop bit(s)",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 292
    },
    {
        "front": "What is the relationship between baud rate and bits per second (bps) in binary signaling?",
        "back": "In binary signaling, 1 baud equals 1 bit per second (bps)",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 293
    },
    {
        "front": "Why is the actual data throughput always lower than the baud rate in serial communication?",
        "back": "The actual data throughput is lower than the baud rate due to overhead bits (start, stop, and parity bits) that must be added to each character in asynchronous transmission.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 294
    },
    {
        "front": "At which OSI layer do bridges and routers operate?",
        "back": "Bridges operate at Layer 2 (Data Link Layer)\nRouters operate at Layer 3 (Network Layer)",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 295
    },
    {
        "front": "What type of addresses do bridges and routers use for packet forwarding?",
        "back": "Bridges use MAC addresses (48-bit physical addresses)\nRouters use IP addresses (logical addresses)",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 296
    },
    {
        "front": "How do bridges learn and build their forwarding tables?",
        "back": "Bridges are self-learning devices that build their forwarding tables by inspecting incoming packets' MAC addresses",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 297
    },
    {
        "front": "What is the key difference in network connectivity capabilities between bridges and routers?",
        "back": "Bridges connect similar network segments (typically LANs)\nRouters can connect different types of networks (LAN to WAN)",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 298
    },
    {
        "front": "What are the primary functions of the Data Link Layer (Layer 2) in the OSI model?",
        "back": "1. Provides reliable point-to-point data delivery over physical link\n2. Handles error detection and correction at frame level\n3. Manages flow control between directly connected nodes",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 299
    },
    {
        "front": "What are the main responsibilities of the Network Layer (Layer 3) in the OSI model?",
        "back": "1. Routes data packets between networks\n2. Handles logical addressing and path determination\n3. Makes forwarding decisions based on network topology\n4. Responsible for packet routing from source to destination across multiple nodes",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 300
    },
    {
        "front": "What are the key functions of the Transport Layer (Layer 4) in the OSI model?",
        "back": "1. Enables end-to-end communication between processes\n2. Provides reliable data transfer between applications\n3. Handles segmentation, flow control, and error recovery\n4. Ensures data arrives in correct order at the destination process",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 301
    },
    {
        "front": "What is the key concept regarding the relationship between OSI layers?",
        "back": "Each layer serves a specific purpose in the network stack, with clear boundaries of responsibilities, working together to enable reliable network communication while maintaining separation of concerns.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 302
    },
    {
        "front": "What is the formula for maximum number of packets in transit in a sliding window protocol?",
        "back": "Maximum packets in transit = $$1 + 2a$$, where 'a' is the ratio of propagation delay to transmission time ($$a = \\frac{\\text{Propagation Delay}}{\\text{Transmission Time}}$$)",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 303
    },
    {
        "front": "How is efficiency calculated in sliding window protocol?",
        "back": "Efficiency = $$\\frac{\\text{Actual Window Size}}{\\text{Maximum Packets Possible}}$$\nNote: It is limited by the smaller of send/receive window sizes",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 304
    },
    {
        "front": "What is the formula for maximum achievable throughput in sliding window protocol?",
        "back": "Maximum Achievable Throughput = $$\\text{Efficiency} \\times \\text{Channel Bandwidth}$$\nwhere Channel Bandwidth = $$\\frac{\\text{Packet Size}}{\\text{Transmission Time}}$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 305
    },
    {
        "front": "What are the key factors affecting sliding window protocol's efficiency?",
        "back": "1. Window size (limited by send/receive window sizes)\n2. Propagation delay to transmission time ratio\n3. Channel bandwidth\n4. Full duplex capability of the link",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 306
    },
    {
        "front": "What is the fundamental principle behind CSMA/CD minimum packet size?",
        "back": "A station must continue transmitting until it can detect any possible collision, meaning the transmission time must be greater than twice the propagation delay.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 307
    },
    {
        "front": "What is the formula for propagation delay in CSMA/CD networks?",
        "back": "Propagation Delay = $$\\frac{\\text{Cable Length}}{\\text{Signal Speed}}$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 308
    },
    {
        "front": "What is the formula for transmission time in CSMA/CD networks?",
        "back": "Transmission Time = $$\\frac{\\text{Packet Size (bits)}}{\\text{Bandwidth (bps)}}$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 309
    },
    {
        "front": "What is the complete calculation rule for minimum packet size in CSMA/CD?",
        "back": "$$\\frac{\\text{Minimum Packet Size} \\times 8}{\\text{Bandwidth}} > 2 \\times \\frac{\\text{Cable Length}}{\\text{Signal Speed}}$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 310
    },
    {
        "front": "What is the structure of a subnet mask and what do the 1s and 0s represent?",
        "back": "A subnet mask uses 1s to represent the network portion and 0s to represent the host portion of the address. Example: 255.255.31.0 in binary is 11111111.11111111.00011111.00000000",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 311
    },
    {
        "front": "What is the formula to calculate a network address using subnet mask?",
        "back": "$$NetworkAddress = IPAddress \\text{ AND } SubnetMask$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 312
    },
    {
        "front": "How do you determine if two IP addresses belong to the same network?",
        "back": "Perform a bitwise AND operation between each IP address and the subnet mask. If the resulting network addresses match, the IP addresses are in the same network.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 313
    },
    {
        "front": "What does the subnet mask 255.255.31.0 indicate about IP address matching requirements?",
        "back": "It indicates that:\n- First two octets must match exactly (255.255)\n- Third octet allows variation within the mask's pattern (31)\n- Last octet can be any value (0)",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 314
    },
    {
        "front": "What is the essential (must-have) function of the Transport Layer in the OSI model?",
        "back": "The essential function is end-to-end connectivity through port addressing, enabling process-to-process communication between applications.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 315
    },
    {
        "front": "List the optional (nice-to-have) services of the Transport Layer.",
        "back": "The optional services include:\n- Error recovery\n- Duplicate detection\n- Packet ordering",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 316
    },
    {
        "front": "What distinguishes transport layer protocols from network layer protocols?",
        "back": "The ability to deliver data to the correct process through port addressing (process-to-process delivery).",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 317
    },
    {
        "front": "Why can UDP exist as a transport layer protocol without reliability features?",
        "back": "Because reliability features are optional services in the transport layer, while only port addressing and end-to-end connectivity are essential. UDP implements these essential functions while omitting optional reliability features.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 318
    },
    {
        "front": "What is multiple IP addressing and what are its benefits?",
        "back": "Multiple IP addressing allows a single computer to have multiple IP addresses assigned to different network interfaces or virtual interfaces. This enables multi-homing and virtual hosting capabilities.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 319
    },
    {
        "front": "What are the key characteristics of dynamic routing in IP?",
        "back": "In dynamic routing:\n- IP packets between same source and destination can take different routes\n- Routes are determined dynamically based on network conditions and routing tables\n- Enables fault tolerance and load balancing",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 320
    },
    {
        "front": "What is TTL in IP packets and what is its purpose?",
        "back": "TTL (Time To Live) is a field in every IP packet that prevents infinite loops by limiting packet lifetime in the network. The packet is discarded if TTL reaches zero.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 321
    },
    {
        "front": "What is source routing in IP and what are its types?",
        "back": "Source routing is a mechanism where the sender can specify the route for their packets. It has two types:\n1. Strict source routing: Specifies exact route\n2. Loose source routing: Specifies partial route\nWhile supported by IP, it's not commonly used today for security reasons.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 322
    },
    {
        "front": "What is the basic structure of a serial data transmission frame in asynchronous communication?",
        "back": "A frame consists of:\n1. Start bit (0)\n2. Data byte (8 bits)\n3. Stop bit(s) (1 or 2 bits, all '1')",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 323
    },
    {
        "front": "What is the formula for calculating the total number of bits in a serial data transmission frame?",
        "back": "$$\\text{Total bits} = 1 \\text{ (start bit)} + 8 \\text{ (data bits)} + (1 \\text{ or } 2) \\text{ (stop bits)}$$",
        "type": "formula-based",
        "topic": "Data Link Layer",
        "id": 324
    },
    {
        "front": "What is the purpose of start and stop bits in asynchronous serial communication?",
        "back": "Start and stop bits help the receiver synchronize and properly identify byte boundaries. The start bit signals the beginning of a new byte, while stop bits ensure proper separation between bytes, maintaining proper timing in asynchronous communication.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 325
    },
    {
        "front": "Which common communication protocols use this framing structure?",
        "back": "This framing structure is used in RS-232 and UART communication protocols.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 326
    },
    {
        "front": "What are start and stop bits in serial communication, and what is their primary purpose?",
        "back": "Start and stop bits are special control bits that don't carry actual data. Their primary purpose is to maintain synchronization between sender and receiver in serial communication.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 327
    },
    {
        "front": "What is the basic frame format for serial communication?",
        "back": "The basic frame format is: $$[Start\\ Bit\\ (1)] [Data\\ Bits\\ (5-8)] [Stop\\ Bit(s)\\ (1-2)]$$",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 328
    },
    {
        "front": "How do start and stop bits help the receiver in serial communication?",
        "back": "They help the receiver:\n1. Identify when a new byte/character begins (start bit)\n2. Identify when it ends (stop bit)\n3. Properly align incoming bits\n4. Stay synchronized throughout the transmission",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 329
    },
    {
        "front": "Why are start and stop bits particularly important in asynchronous serial communication?",
        "back": "They are essential in asynchronous serial communication (like RS-232) because they allow devices to maintain timing alignment without sharing a common clock signal, ensuring reliable communication.",
        "type": "definition/recall-based",
        "topic": "Data Link Layer",
        "id": 330
    },
    {
        "front": "What is a non-persistent HTTP connection?",
        "back": "A non-persistent HTTP connection is where each HTTP request-response pair requires a separate TCP connection that is closed immediately after the server sends the response.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 331
    },
    {
        "front": "What is the formula for calculating the minimum number of TCP connections required for a webpage in non-persistent HTTP?",
        "back": "$$\\text{Total TCP Connections} = 1 \\text{ (for HTML)} + \\text{Number of Additional Resources}$$",
        "type": "formula-based",
        "topic": "Application Layer Protocols",
        "id": 332
    },
    {
        "front": "What are the key characteristics of non-persistent HTTP connections?",
        "back": "1. Less efficient than persistent connections\n2. More overhead due to multiple TCP connection establishments\n3. Each connection requires TCP three-way handshake\n4. Commonly used in HTTP/1.0",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 333
    },
    {
        "front": "Why does a non-persistent HTTP connection create more overhead?",
        "back": "It creates more overhead because a new TCP connection must be established for each web resource (requiring a three-way handshake), and each connection is closed after a single request-response pair.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 334
    },
    {
        "front": "When does IP packet fragmentation occur in a router?",
        "back": "Fragmentation occurs when the outgoing link's Maximum Transmission Unit (MTU) is smaller than the incoming packet size. Mathematically: When Packet_Size > MTU.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 335
    },
    {
        "front": "What is the formula to calculate the number of fragments needed for an IP packet?",
        "back": "$$\\text{Number of Fragments} = \\ceil{\\frac{\\text{Original Packet Size}}{\\text{MTU}}}$$",
        "type": "formula-based",
        "topic": "Application Layer Protocols",
        "id": 336
    },
    {
        "front": "How do routers handle IP packet fragments during normal operation?",
        "back": "Routers do not reassemble fragments during normal operation. Fragment reassembly typically occurs at the destination. Cut-through switching allows packets to be forwarded immediately without waiting for complete assembly.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 337
    },
    {
        "front": "What are the two main approaches to router operation regarding routing protocols?",
        "back": "Routers can operate either dynamically (with routing protocols) or statically (with pre-configured routes). There is no mandatory requirement for implementing routing protocols.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 338
    },
    {
        "front": "In RSA cryptography, how is the public modulus (n) calculated?",
        "back": "The public modulus is the product of two prime numbers p and q: $$n = p \u00d7 q$$",
        "type": "formula-based",
        "topic": "Application Layer Protocols",
        "id": 339
    },
    {
        "front": "What is Euler's Totient Function (\u03c6(n)) for a prime number p?",
        "back": "For a prime number p: $$\u03c6(p) = p - 1$$",
        "type": "formula-based",
        "topic": "Application Layer Protocols",
        "id": 340
    },
    {
        "front": "What is Euler's Totient Function (\u03c6(n)) for a product of two primes p and q?",
        "back": "For a product of two primes: $$\u03c6(n) = \u03c6(p \u00d7 q) = (p-1)(q-1)$$",
        "type": "formula-based",
        "topic": "Application Layer Protocols",
        "id": 341
    },
    {
        "front": "Why is the relationship between n and \u03c6(n) important in RSA cryptography?",
        "back": "When n and \u03c6(n) are known, prime factors can be found using the relationships $$n = p \u00d7 q$$ and $$\u03c6(n) = (p-1)(q-1)$$. The security of RSA relies on the difficulty of finding these prime factors for large numbers.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 342
    },
    {
        "front": "What is the formula for calculating the maximum number of end devices that can be connected using multiple n-port switches?",
        "back": "$$\\text{Max Devices} = n \u00d7 \\text{number of switches} - (\\text{number of switches} - 1)$$\nwhere n is the number of ports per switch",
        "type": "formula-based",
        "topic": "Application Layer Protocols",
        "id": 343
    },
    {
        "front": "What does the term (number of switches - 1) represent in the switch connectivity formula?",
        "back": "It represents the number of ports used for inter-switch connections when cascading multiple switches together.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 344
    },
    {
        "front": "What are the two types of connections that can be made to a switch port in a cascaded switch setup?",
        "back": "1. Connection to an end device (machine)\n2. Connection to another switch (inter-switch connection)",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 345
    },
    {
        "front": "What are the key considerations when calculating the minimum number of switches needed for a network?",
        "back": "1. Number of required end device connections\n2. Ports needed for switch-to-switch connections\n3. Choose smallest number of switches that can accommodate all devices",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 346
    },
    {
        "front": "What is the primary purpose of Address Resolution Protocol (ARP)?",
        "back": "ARP maps IP addresses (Layer 3) to MAC addresses (Layer 2) within a local subnet, enabling local network communication by discovering the physical address of a device when only its IP address is known.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 347
    },
    {
        "front": "Describe the ARP request process.",
        "back": "The source machine broadcasts an ARP request to all devices in the subnet using the broadcast MAC address (FF:FF:FF:FF:FF:FF). The request contains the sender's IP and MAC address, and the target's IP address.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 348
    },
    {
        "front": "How does the ARP reply process work?",
        "back": "Only the machine with the matching IP address responds to an ARP request. The response contains the requested MAC address and is sent as a unicast message directly to the requester.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 349
    },
    {
        "front": "What is the scope of ARP operation, and how does it handle cross-subnet communication?",
        "back": "ARP works only within the same subnet. For cross-subnet communication, the ARP request is sent to the default gateway instead of the final destination.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 350
    },
    {
        "front": "What is the correct sequence of network protocols when accessing a web page?",
        "back": "1. DNS Resolution\n2. TCP Connection Establishment\n3. HTTP Communication",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 351
    },
    {
        "front": "Why must DNS resolution occur before TCP connection establishment when accessing a web page?",
        "back": "DNS resolution must occur first to convert the human-readable domain name (e.g., www.example.com) into an IP address, which is required to establish the TCP connection.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 352
    },
    {
        "front": "Why must TCP connection be established before HTTP communication can begin?",
        "back": "TCP connection provides the reliable communication channel required for HTTP. The TCP three-way handshake must complete to establish this connection before any HTTP requests can be sent.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 353
    },
    {
        "front": "What fundamental principle governs the sequence of network protocols in web page access?",
        "back": "Network communications follow a bottom-up layered approach, where lower-level protocols (DNS, TCP) must be completed before higher-level protocols (HTTP) can function.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 354
    },
    {
        "front": "What is CSMA/CD and what are its main functions?",
        "back": "CSMA/CD (Carrier Sense Multiple Access with Collision Detection) is a protocol where:\n1. Stations monitor the channel while transmitting\n2. Stop transmission if collision is detected\n3. Send jamming signal to notify other stations",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 355
    },
    {
        "front": "What are the steps in the Ethernet collision recovery process?",
        "back": "1. Stop current transmission\n2. Send jamming signal\n3. Implement exponential backoff algorithm",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 356
    },
    {
        "front": "What is the formula for calculating backoff time in the exponential backoff algorithm?",
        "back": "$$\\text{Backoff Time} = R \u00d7 512\\text{ bit times}$$\nwhere R is a random integer from $$[0, 2^n-1]$$\nand n increases with each collision attempt",
        "type": "formula-based",
        "topic": "Application Layer Protocols",
        "id": 357
    },
    {
        "front": "What is the purpose of the jamming signal in Ethernet collision handling?",
        "back": "The jamming signal:\n1. Notifies all stations of a collision\n2. Ensures collision detection by all participating stations\n3. Is not used for frame padding",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 358
    },
    {
        "front": "What are the three main security features provided by digital signatures?",
        "back": "1. Authentication\n2. Non-repudiation\n3. Integrity",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 359
    },
    {
        "front": "Describe the signing process in digital signatures",
        "back": "The sender uses their private key to encrypt/sign the message, creating a unique digital signature that only they could have created.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 360
    },
    {
        "front": "How does the verification process work in digital signatures?",
        "back": "The receiver uses the sender's public key to verify the signature. Successful verification proves:\n- Message authenticity (came from claimed sender)\n- Message integrity (hasn't been altered)\n- Non-repudiation (sender cannot deny sending it)",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 361
    },
    {
        "front": "What is the key usage pattern in digital signatures?",
        "back": "- Private key: Used by sender for signing\n- Public key: Used by receiver for verification\n\nPrinciple: What is encrypted with a private key can only be decrypted with its corresponding public key, and vice versa.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 362
    },
    {
        "front": "What is the basic principle of Stop-and-Wait ARQ Protocol?",
        "back": "The protocol sends one frame and waits for its acknowledgment before sending the next frame, creating a cycle of transmission and waiting.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 363
    },
    {
        "front": "What are the three components of the total transmission cycle time in Stop-and-Wait ARQ?",
        "back": "1. Frame transmission time (sender to receiver)\n2. Propagation delay (both directions)\n3. Acknowledgment transmission time (receiver to sender)",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 364
    },
    {
        "front": "What is the formula for calculating sender transmission time in Stop-and-Wait ARQ?",
        "back": "$$T_{t(Send)} = \\frac{\\text{Frame Size in bits}}{\\text{Sender transmission rate}}$$",
        "type": "formula-based",
        "topic": "Application Layer Protocols",
        "id": 365
    },
    {
        "front": "What is the formula for total cycle time in Stop-and-Wait ARQ?",
        "back": "$$T_{total} = T_{t(Send)} + 2T_p + T_{t(Recv)}$$\nWhere:\n- T_{t(Send)} is sender transmission time\n- T_p is propagation delay\n- T_{t(Recv)} is receiver transmission time",
        "type": "formula-based",
        "topic": "Application Layer Protocols",
        "id": 366
    },
    {
        "front": "How is throughput calculated in Stop-and-Wait ARQ Protocol?",
        "back": "$$\\text{Throughput} = \\frac{\\text{Frame Size}}{T_{total}}$$",
        "type": "formula-based",
        "topic": "Application Layer Protocols",
        "id": 367
    },
    {
        "front": "What is the Token Bucket Algorithm and what is its primary purpose?",
        "back": "The Token Bucket Algorithm is a traffic shaping mechanism that controls the rate at which packets can be transmitted in a network, providing congestion control while allowing controlled bursts of data.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 368
    },
    {
        "front": "What are the two main parameters that control traffic in the Token Bucket Algorithm?",
        "back": "1. Token arrival rate (r): $$r = \\text{sustained rate of data transmission}$$\n2. Bucket capacity (b): Maximum burst size allowed",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 369
    },
    {
        "front": "How is burst transmission time calculated in the Token Bucket Algorithm?",
        "back": "$$\\text{Time}_{\\text{burst}} = \\frac{\\text{bucket size}}{\\text{token arrival rate}}$$",
        "type": "formula-based",
        "topic": "Application Layer Protocols",
        "id": 370
    },
    {
        "front": "What are the key operating principles of the Token Bucket Algorithm?",
        "back": "- Tokens accumulate in the bucket at rate r up to maximum capacity b\n- Each data transmission consumes tokens\n- Data can be sent at maximum rate M when tokens are available\n- When bucket empties, transmission rate is limited to token arrival rate r",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 371
    },
    {
        "front": "What is DNS (Domain Name System)?",
        "back": "DNS is a hierarchical naming system that maps IP addresses to human-readable domain names, functioning as the 'phone book' of the Internet.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 372
    },
    {
        "front": "What are the levels in DNS hierarchical structure (from top to bottom)?",
        "back": "The DNS hierarchy levels are:\n1. Root (.)\n2. Top-Level Domain (TLD)\n3. Second-Level Domain\n4. Subdomain",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 373
    },
    {
        "front": "What is DNS name resolution?",
        "back": "DNS name resolution is the process of converting human-readable domain names (e.g., www.example.com) to IP addresses (e.g., 192.168.1.1). It can also work in reverse (Reverse DNS lookup).",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 374
    },
    {
        "front": "What are the three main benefits of DNS hierarchical structure?",
        "back": "1. Efficient organization of the internet namespace\n2. Distributed administration of domains\n3. Scalable lookup system for the entire internet",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 375
    },
    {
        "front": "What are the main components that determine end-to-end packet transmission time in computer networks?",
        "back": "The three main components are:\n1. Transmission Time (putting bits on the link)\n2. Propagation Delay (travel through medium)\n3. Switch Processing Delay (processing and forwarding)",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 376
    },
    {
        "front": "What is the formula for calculating transmission time in packet switching?",
        "back": "$$T_{transmission} = \\frac{\\text{Packet Size}}{\\text{Link Speed}}$$",
        "type": "formula-based",
        "topic": "Application Layer Protocols",
        "id": 377
    },
    {
        "front": "What is the formula for calculating the total time for the first packet in a network transmission?",
        "back": "$$T_{first} = T_{transmission} + T_{propagation} + T_{switch} + T_{transmission} + T_{propagation}$$",
        "type": "formula-based",
        "topic": "Application Layer Protocols",
        "id": 378
    },
    {
        "front": "What is the key advantage of packet switching regarding transmission timing?",
        "back": "In packet switching, subsequent packets can be transmitted while earlier packets are still in transit, allowing for pipelining of transmissions. This improves overall network efficiency.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 379
    },
    {
        "front": "What are the key components needed to calculate the minimum sequence number bits in Go-Back-N protocol?",
        "back": "1. Window Size (Ws)\n2. Round Trip Time (RTT = 2 \u00d7 Propagation Delay + Transmission Time)\n3. Propagation Delay ($$\\frac{\\text{Distance}}{\\text{Propagation Speed}}$$)\n4. Transmission Time ($$\\frac{\\text{Packet Size}}{\\text{Bandwidth}}$$)",
        "type": "formula-based",
        "topic": "Application Layer Protocols",
        "id": 380
    },
    {
        "front": "How is the minimum number of sequence number bits calculated in Go-Back-N protocol?",
        "back": "Minimum bits = $$\\lceil \\log_2(\\text{Ws} + 1) \\rceil$$\nwhere Ws is the sender window size",
        "type": "formula-based",
        "topic": "Application Layer Protocols",
        "id": 381
    },
    {
        "front": "What is the receiver window size (Wr) in Go-Back-N protocol?",
        "back": "The receiver window size (Wr) is always 1 in Go-Back-N protocol",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 382
    },
    {
        "front": "What is the requirement for full network utilization in Go-Back-N protocol?",
        "back": "The sender must be able to continuously transmit frames while waiting for acknowledgments, and the sequence number space must be larger than the maximum window size to avoid ambiguity",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 383
    },
    {
        "front": "What does a /27 subnet mask indicate about network and host portions?",
        "back": "A /27 subnet mask means:\n- 27 bits are used for the network portion\n- 5 bits remain for host addresses (32-27=5)\n- Creates blocks of 32 addresses ($$2^5$$)",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 384
    },
    {
        "front": "What is the formula for calculating the number of usable hosts in a subnet?",
        "back": "$$\\text{Usable hosts} = 2^{\\text{host bits}} - 2$$\nWhere host bits = 32 - subnet mask length",
        "type": "formula-based",
        "topic": "Application Layer Protocols",
        "id": 385
    },
    {
        "front": "What are the special addresses in each subnet block and their purposes?",
        "back": "- Network address: First address (all host bits 0)\n- Broadcast address: Last address (all host bits 1)\n- Last usable host: Broadcast address - 1",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 386
    },
    {
        "front": "What is the formula for calculating the last usable address in a subnet?",
        "back": "$$\\text{Last usable} = \\text{Network portion} + (2^{\\text{host bits}} - 2)$$\nCalculated by setting all host bits to 1 and subtracting 1",
        "type": "formula-based",
        "topic": "Application Layer Protocols",
        "id": 387
    },
    {
        "front": "What is the fundamental timing requirement for collision detection in CSMA/CD networks?",
        "back": "The frame transmission time must be greater than or equal to twice the propagation delay, expressed as: $$\\text{Frame Transmission Time} \\geq 2 \\times \\text{Propagation Delay}$$",
        "type": "formula-based",
        "topic": "Application Layer Protocols",
        "id": 388
    },
    {
        "front": "What is the mathematical relationship between frame size and network parameters in CSMA/CD?",
        "back": "$$\\frac{\\text{Frame Size (bits)}}{\\text{Data Rate (bps)}} \\geq \\frac{2 \\times \\text{Cable Length}}{\\text{Signal Speed}}$$",
        "type": "formula-based",
        "topic": "Application Layer Protocols",
        "id": 389
    },
    {
        "front": "What are the four key parameters that determine minimum frame size in CSMA/CD networks?",
        "back": "1. Frame size (in bits)\n2. Network data rate\n3. Cable length\n4. Signal propagation speed",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 390
    },
    {
        "front": "Why is minimum frame size important in CSMA/CD networks?",
        "back": "It ensures reliable collision detection by making sure a station continues transmitting long enough to detect any potential collisions on the network.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 391
    },
    {
        "front": "What are the main characteristics of TCP (Transmission Control Protocol)?",
        "back": "- Connection-oriented protocol\n- Ensures reliable data transmission\n- Provides end-to-end delivery with error checking\n- Includes acknowledgment mechanism\n- Used primarily for HTTP (web browsing)",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 392
    },
    {
        "front": "What is the default port number for HTTP?",
        "back": "Port 80",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 393
    },
    {
        "front": "What are the key characteristics of UDP (User Datagram Protocol)?",
        "back": "- Connectionless protocol\n- Used for simple request-response communications\n- No guarantee of delivery or order\n- Common applications: DNS, BOOTP/DHCP, NTP",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 394
    },
    {
        "front": "Why is TCP chosen for web browsing over UDP?",
        "back": "TCP is chosen because it provides:\n1. Reliable data transmission\n2. Connection maintenance\n3. Ordered packet delivery\n4. Error checking and recovery",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 395
    },
    {
        "front": "What are the four main timestamp components in network time synchronization?",
        "back": "1. Original Timestamp (OTS): Initial sending time by originator\n2. Receive Timestamp (RTS): Reception time at responder\n3. Transmit Timestamp (TTS): Time when responder sends reply\n4. Arrival Timestamp (ATS): Time when originator receives reply",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 396
    },
    {
        "front": "What is the formula for calculating Round Trip Time (RTT) using timestamp components?",
        "back": "$$RTT = (ATS - OTS) - (TTS - RTS)$$",
        "type": "formula-based",
        "topic": "Application Layer Protocols",
        "id": 397
    },
    {
        "front": "How is theoretical One-way Delay calculated in network time synchronization?",
        "back": "$$OneWayDelay = \\frac{RTT}{2}$$",
        "type": "formula-based",
        "topic": "Application Layer Protocols",
        "id": 398
    },
    {
        "front": "How do you interpret clock offset in network time synchronization?",
        "back": "- Clock offset = Actual receive time - Expected receive time\n- Negative offset means clock needs to go back\n- Positive offset means clock needs to go forward",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 399
    },
    {
        "front": "What is a supernet and what is its main purpose?",
        "back": "A supernet combines multiple contiguous networks into a larger network. It is used for route aggregation and efficient routing table management.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 400
    },
    {
        "front": "What is the mathematical formula to verify if an IP address belongs to a supernet?",
        "back": "$$\\text{Test\\_IP} \\text{ AND } \\text{Supernet\\_Mask} = \\text{Supernet\\_Address}$$\nIf this equation is true, the IP belongs to the supernet.",
        "type": "formula-based",
        "topic": "Application Layer Protocols",
        "id": 401
    },
    {
        "front": "What are the two key components that define a supernet?",
        "back": "1. Network address\n2. Supernet mask",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 402
    },
    {
        "front": "What is the step-by-step process to verify if an IP address belongs to a supernet?",
        "back": "1. Perform bitwise AND operation between the test IP and supernet mask\n2. Compare the result with the supernet's network address\n3. If they match, the IP belongs to that supernet",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 403
    },
    {
        "front": "What are the first 4 bits in an IPv4 packet header, and what value should they contain?",
        "back": "The first 4 bits contain the Version field, and for IPv4 packets, they should contain 0100.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 404
    },
    {
        "front": "What is the IHL (Internet Header Length) field in an IPv4 header, and what is its minimum valid value?",
        "back": "The IHL field is the next 4 bits after the Version field. It represents the total header length in 32-bit words. The minimum valid value is 5, corresponding to 20 bytes.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 405
    },
    {
        "front": "How do you calculate the actual header length in bytes from the IHL value?",
        "back": "$$\\text{Actual Header Length} = \\text{IHL} \\times 4\\text{ bytes}$$",
        "type": "formula-based",
        "topic": "Application Layer Protocols",
        "id": 406
    },
    {
        "front": "What should a receiving node do if IPv4 header validation fails?",
        "back": "If header validation fails (invalid version or header length < 20 bytes), the receiving node must reject the packet to maintain protocol integrity.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 407
    },
    {
        "front": "What are the two main components of data transmission time in networks?",
        "back": "1. Propagation Time: Time for signal to travel from sender to receiver\n2. Transmission Time: Time to push all bits onto the link",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 408
    },
    {
        "front": "What is the formula for propagation time in network data transmission?",
        "back": "$$T_{propagation} = \\frac{\\text{Distance}}{\\text{Speed of signal}}$$",
        "type": "formula-based",
        "topic": "Application Layer Protocols",
        "id": 409
    },
    {
        "front": "What is the formula for transmission time in network data transmission?",
        "back": "$$T_{transmission} = \\frac{\\text{Message Size}}{\\text{Bandwidth}}$$",
        "type": "formula-based",
        "topic": "Application Layer Protocols",
        "id": 410
    },
    {
        "front": "What is the formula for total data transmission time in networks?",
        "back": "$$T_{total} = T_{propagation} + T_{transmission}$$",
        "type": "formula-based",
        "topic": "Application Layer Protocols",
        "id": 411
    },
    {
        "front": "What is Round-trip time (RTT) in network transmission?",
        "back": "Round-trip time (RTT) is twice the one-way propagation time, representing the time for a signal to travel to the destination and back.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 412
    },
    {
        "front": "What units should be used when calculating transmission time?",
        "back": "Bandwidth should be in bits per second (bps) and message size should be in bits to ensure consistent units.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 413
    },
    {
        "front": "What happens when a web browser loads a page with embedded resources in terms of HTTP requests?",
        "back": "Multiple HTTP requests are made:\n1. One request for the main HTML file\n2. Separate requests for each embedded resource (images, CSS, JavaScript)",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 414
    },
    {
        "front": "What is HTTP keep-alive/persistent connections?",
        "back": "A feature where a single TCP connection can handle multiple HTTP requests, reducing network overhead and improving performance by maintaining the connection for subsequent requests.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 415
    },
    {
        "front": "What is the sequence of HTTP requests when loading a webpage?",
        "back": "1. First HTTP request to get HTML file\n2. Browser parses HTML\n3. Additional HTTP requests to get embedded resources",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 416
    },
    {
        "front": "What major change did HTTP/1.1 introduce regarding TCP connections?",
        "back": "HTTP/1.1 made persistent connections the default behavior, allowing multiple requests over a single TCP connection, improving upon HTTP/1.0 which required a new TCP connection for each request.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 417
    },
    {
        "front": "What happens to data visibility when session layer encryption (like DES) is implemented?",
        "back": "Application layer data becomes encrypted, while lower layer headers (transport, network, link layers) remain unencrypted for routing purposes.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 418
    },
    {
        "front": "Which protocol layers remain visible despite session layer encryption?",
        "back": "- Transport Layer: TCP port numbers and header information\n- Network Layer: IP addresses and routing information\n- Link Layer: Immediate hop MAC addresses",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 419
    },
    {
        "front": "What is the key principle regarding layer visibility in network security?",
        "back": "Higher layer encryption doesn't protect lower layer headers, as intermediate nodes need access to routing information to forward packets.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 420
    },
    {
        "front": "How does MAC address visibility work at the Link Layer in a routed network?",
        "back": "Only immediate hop MAC addresses are visible to each router. End-to-end MAC addresses are not visible at intermediate routers.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 421
    },
    {
        "front": "What is the basic formula for packet transmission time (Tt) in store-and-forward networks?",
        "back": "$$T_t = \\frac{\\text{Packet Size (Data + Header)}}{\\text{Bandwidth}}$$",
        "type": "formula-based",
        "topic": "Application Layer Protocols",
        "id": 422
    },
    {
        "front": "What is the complete formula for total transmission time in a multi-hop, multi-packet scenario?",
        "back": "$$T_{total} = (n \\times T_t) + ((k-1) \\times T_t)$$\nWhere:\n- n = number of hops\n- k = number of packets\n- Tt = transmission time for one packet",
        "type": "formula-based",
        "topic": "Application Layer Protocols",
        "id": 423
    },
    {
        "front": "What are the trade-offs between large and small packet sizes in store-and-forward networks?",
        "back": "Large packets:\n- Fewer transmissions\n- Longer individual transmission times\n\nSmall packets:\n- Better pipelining\n- Higher overhead due to headers",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 424
    },
    {
        "front": "How does pipelining affect packet transmission time after the first packet?",
        "back": "While the first packet must traverse all hops (n\u00d7Tt), subsequent packets benefit from pipelining and each takes only Tt additional time.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 425
    },
    {
        "front": "What is TTL (Time To Live) in IP networking and what is its primary purpose?",
        "back": "TTL is a field in IP packets that helps prevent infinite routing loops and tracks packet lifetime in networks. It gets decremented at each network layer hop until it reaches zero or its destination.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 426
    },
    {
        "front": "When exactly is the TTL value decremented in a network?",
        "back": "TTL is decremented only when:\n1. A packet visits the Network Layer\n2. When processed by each router\n3. At the destination node before processing\nNote: TTL is NOT decremented within LANs (at Data Link Layer)",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 427
    },
    {
        "front": "What is the formula for calculating Final TTL in IP networking?",
        "back": "$$Final\\_TTL = Initial\\_TTL - (Number\\_of\\_Routers + 1)$$\nWhere +1 accounts for final destination processing",
        "type": "formula-based",
        "topic": "Application Layer Protocols",
        "id": 428
    },
    {
        "front": "How does TTL processing differ between LANs and Routers?",
        "back": "In LANs (Ethernet/Token Ring): No TTL decrement as packets stay at Data Link Layer\nAt Routers: TTL decrements as packets must visit Network Layer for routing decisions",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 429
    },
    {
        "front": "What is the initial state of a TCP socket when created?",
        "back": "A TCP socket starts as an active (unconnected) socket when created.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 430
    },
    {
        "front": "What are the three main purposes of the listen() function in TCP sockets?",
        "back": "1. Transform an active socket into a passive socket\n2. Prepare the socket to accept incoming client connections\n3. Put the socket in a listening state",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 431
    },
    {
        "front": "What is the correct sequence of socket functions for setting up a TCP server?",
        "back": "1. socket() \u2192 Creates active socket\n2. bind() \u2192 Associates socket with port/address\n3. listen() \u2192 Converts to passive socket\n4. accept() \u2192 Accepts incoming connections",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 432
    },
    {
        "front": "What is the key difference between active and passive sockets in terms of client connections?",
        "back": "A passive socket can handle multiple client connections, while an active socket is used for a single connection.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 433
    },
    {
        "front": "What are the four main built-in functionalities of pure HTML?",
        "back": "1. Document Structure Definition\n2. Content Embedding (`<iframe>`, `<embed>`, `<object>`)\n3. Page Refresh (`<meta http-equiv=\"refresh\">`)\n4. Page Redirection (`<meta http-equiv=\"refresh\" content=\"0; URL=new-page.html\">`)",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 434
    },
    {
        "front": "What are the key limitations of pure HTML (without scripting)?",
        "back": "- Cannot execute dynamic operations\n- Cannot perform real-time calculations\n- Cannot access system information\n- Cannot handle user interactions beyond basic form submissions\n- Cannot modify page content after loading",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 435
    },
    {
        "front": "What is the fundamental distinction between content types in web development?",
        "back": "Static Content: Handled by pure HTML\nDynamic Content: Requires client-side scripting (JavaScript) or server-side processing",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 436
    },
    {
        "front": "Which HTML elements are used for content embedding?",
        "back": "The three main elements for content embedding are:\n- `<iframe>`\n- `<embed>`\n- `<object>`",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 437
    },
    {
        "front": "What is SMTP and what is its primary function in email communication?",
        "back": "SMTP (Simple Mail Transfer Protocol) is used for sending emails from client to server. It operates on port 25 and is a push protocol that moves mail from sender to recipient's mail server.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 438
    },
    {
        "front": "What is POP3 and how does it handle email retrieval?",
        "back": "POP3 (Post Office Protocol) is used for retrieving emails from server to client. It operates on port 110, is a pull protocol that downloads mail from server to local client, and usually deletes mail from server after download.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 439
    },
    {
        "front": "How is HTTP used in email systems?",
        "back": "HTTP is used for webmail interfaces, allowing users to view and manage emails through web browsers. It provides a graphical interface and is commonly used in services like Gmail and Yahoo Mail.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 440
    },
    {
        "front": "What is the key difference between IMAP and POP3 in email retrieval?",
        "back": "While both retrieve emails, IMAP keeps emails on the server and synchronizes across devices, whereas POP3 typically downloads emails to the local client and deletes them from the server.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 441
    },
    {
        "front": "What is a Layer 4 firewall and at which OSI layer does it operate?",
        "back": "A Layer 4 firewall operates at the Transport Layer of the OSI model, examining network traffic up to this layer.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 442
    },
    {
        "front": "What are the main filtering capabilities of a Layer 4 firewall?",
        "back": "A Layer 4 firewall can filter based on:\n- IP addresses (source and destination)\n- Port numbers\n- Protocol types (TCP, UDP, ICMP)\n- Time-based rules",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 443
    },
    {
        "front": "What are the key limitations of a Layer 4 firewall?",
        "back": "Key limitations include:\n- Cannot inspect application layer data\n- Cannot distinguish between individual users on the same system\n- Cannot examine application-specific content\n- Cannot verify user authentication information",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 444
    },
    {
        "front": "What types of decisions can a Layer 4 firewall NOT make?",
        "back": "A Layer 4 firewall cannot make decisions based on:\n- User identities\n- Application content\n- Session-specific information",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 445
    },
    {
        "front": "What makes a link 'unused' in distance vector routing?",
        "back": "A link becomes unused when there exists another path with a lower total cost between two nodes. Mathematically, for nodes i and j, a link L is unused if: $$\\text{Cost}(\\text{alternate_path}(i,j)) < \\text{Cost}(L_{ij})$$",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 446
    },
    {
        "front": "What is the core principle of path selection in distance vector routing?",
        "back": "Routers always choose the shortest path based on the total weight (cost) to reach destinations.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 447
    },
    {
        "front": "What happens to routing tables when link weights change in distance vector routing?",
        "back": "When link weights change, routes are recalculated repeatedly until all routing tables stabilize (reach convergence).",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 448
    },
    {
        "front": "How can an unused link potentially become part of the network routing?",
        "back": "By changing the weights of unused links to a lower value, they may become part of new shortest paths in the network.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 449
    },
    {
        "front": "What is the basic principle of Distance Vector Routing?",
        "back": "Distance Vector Routing is based on three key principles:\n1. Each router maintains a distance vector with shortest known distances to all destinations\n2. Routers exchange these vectors with neighbors periodically\n3. Routes are chosen based on the minimum distance/cost path to each destination",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 450
    },
    {
        "front": "What is the Bellman-Ford equation used in Distance Vector Routing, and what do its components represent?",
        "back": "The Bellman-Ford equation is: $$D_x(y) = min_v\\{c(x,v) + D_v(y)\\}$$\nWhere:\n- $$D_x(y)$$ is the cost of least-cost path from x to y\n- $$c(x,v)$$ is the cost to neighbor v\n- $$D_v(y)$$ is the cost from neighbor v to destination y",
        "type": "formula-based",
        "topic": "Application Layer Protocols",
        "id": 451
    },
    {
        "front": "How does link usage work in Distance Vector Routing?",
        "back": "In Distance Vector Routing:\n- Not all links will be used in final routing tables\n- Links are only used if they form part of a shortest path between source-destination pairs\n- Links with higher weights may remain unused if shorter alternative paths exist",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 452
    },
    {
        "front": "What defines convergence in Distance Vector Routing?",
        "back": "Convergence in Distance Vector Routing occurs when:\n1. All routing tables stabilize\n2. Final routing tables only include links that form optimal paths\n3. Links that don't contribute to any shortest path are excluded",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 453
    },
    {
        "front": "Which protocols operate at the Application Layer of the OSI model?",
        "back": "Telnet, FTP, and HTTP operate at the Application Layer, providing end-user services.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 454
    },
    {
        "front": "What are the specific functions of Telnet, FTP, and HTTP protocols?",
        "back": "- Telnet: Remote terminal access\n- FTP: File transfer\n- HTTP: Web page transfer",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 455
    },
    {
        "front": "What is Enterprise JavaBeans (EJB) and what are its key characteristics?",
        "back": "EJB is a server-side component architecture for J2EE that:\n- Acts as deployable units in J2EE servers\n- Provides services for transactions, security, and persistence\n- Supports distributed computing",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 456
    },
    {
        "front": "What is the Common Language Specification (CLS) in .NET Framework and what capabilities does it provide?",
        "back": "CLS defines rules for .NET compatibility that enable:\n- Cross-language inheritance\n- Sharing of classes between different languages\n- Seamless exchange of data types\n- Interoperability between different .NET languages",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 457
    },
    {
        "front": "What is the fundamental approach TCP uses for data transmission and reliability?",
        "back": "TCP uses a byte-stream oriented approach where each byte of data is assigned a unique sequence number starting from an Initial Sequence Number (ISN).",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 458
    },
    {
        "front": "What are the four main purposes of TCP sequence numbers?",
        "back": "TCP sequence numbers help in:\n1. Ordering data correctly at the receiver\n2. Detecting missing bytes\n3. Eliminating duplicate bytes\n4. Ensuring reliable, ordered delivery",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 459
    },
    {
        "front": "What is the size of TCP's sequence number field and what is the formula for sequence space?",
        "back": "The sequence number field is 32 bits long.\nSequence space formula: $$\\text{Sequence Space} = 2^{32} \\text{ bytes}$$",
        "type": "formula-based",
        "topic": "Application Layer Protocols",
        "id": 460
    },
    {
        "front": "In TCP, what do the sequence number and acknowledgment number represent?",
        "back": "- The sequence number represents the first byte in the segment being sent\n- The acknowledgment number represents the next expected byte",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 461
    },
    {
        "front": "What is a MAC address and what is its primary purpose?",
        "back": "A MAC (Media Access Control) address is a unique hardware identifier assigned to network interface cards (NICs). It serves as a physical address burned into the NIC during manufacturing to uniquely identify network devices.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 462
    },
    {
        "front": "What is the structure and format of a MAC address?",
        "back": "A MAC address is 48-bit (6-byte) long, written as XX:XX:XX:XX:XX:XX where each X is a hexadecimal digit. The first 3 bytes identify the manufacturer (OUI), and the last 3 bytes are unique to the specific device.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 463
    },
    {
        "front": "How does a MAC address differ from an IP address in terms of hierarchy and dependence?",
        "back": "MAC addresses are flat addresses that maintain their uniqueness across the entire Internet, independent of network topology or hierarchy. In contrast, IP addresses are hierarchical and network-dependent.",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 464
    },
    {
        "front": "What are the key properties of MAC address uniqueness?",
        "back": "MAC addresses are:\n- Globally unique across all manufacturers and devices\n- Assigned by device manufacturers following IEEE standards\n- Independent of network topology\n- Constant even if device changes networks\n- Unique regardless of subnet boundaries, local network segments, or geographic locations",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 465
    },
    {
        "front": "How do you calculate the maximum number of available hosts in a subnet?",
        "back": "The formula is $$2^n - 2$$, where n is the number of host bits (zeros) in the subnet mask. Subtract 2 because one address is reserved for the network address and one for the broadcast address.",
        "type": "formula-based",
        "topic": "Application Layer Protocols",
        "id": 466
    },
    {
        "front": "What is the binary representation of the subnet mask 255.255.255.192?",
        "back": "11111111.11111111.11111111.11000000",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 467
    },
    {
        "front": "How many host bits are available in a subnet mask of 255.255.255.192?",
        "back": "6 host bits (the number of zeros in the binary representation)",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 468
    },
    {
        "front": "Calculate the maximum number of available hosts for a subnet with mask 255.255.255.192",
        "back": "With 6 host bits: $$2^6 - 2 = 64 - 2 = 62$$ hosts",
        "type": "formula-based",
        "topic": "Application Layer Protocols",
        "id": 469
    },
    {
        "front": "What are the two types of keys used in public key cryptography?",
        "back": "1. Public key (openly shared with everyone)\n2. Private key (kept secret by owner)",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 470
    },
    {
        "front": "What is the fundamental property of public key encryption regarding data encryption and decryption?",
        "back": "- Data encrypted with a public key can only be decrypted with the corresponding private key\n- Data encrypted with a private key can only be decrypted with the corresponding public key",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 471
    },
    {
        "front": "How does secure message transmission work in public key cryptography?",
        "back": "- Sender encrypts message using receiver's public key\n- Only the receiver can decrypt it using their private key\n- This ensures confidentiality as only the intended recipient can read the message",
        "type": "definition/recall-based",
        "topic": "Application Layer Protocols",
        "id": 472
    },
    {
        "front": "What is the mathematical representation of public key encryption and decryption?",
        "back": "If $$E_{pub}(M)$$ represents encryption of message M with public key, and $$D_{priv}(C)$$ represents decryption of ciphertext C with private key, then:\n$$D_{priv}(E_{pub}(M)) = M$$",
        "type": "formula-based",
        "topic": "Application Layer Protocols",
        "id": 473
    },
    {
        "front": "What is the key difference between IP addressing and MAC addressing in TCP/IP networking?",
        "back": "IP addressing is end-to-end (remains unchanged throughout the path), while MAC addressing is hop-by-hop (changes at each network hop).",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 474
    },
    {
        "front": "What is the role of ARP (Address Resolution Protocol) in TCP/IP networking?",
        "back": "ARP maps IP addresses to MAC addresses on the local network segment, determining the MAC address of the next hop device.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 475
    },
    {
        "front": "Explain the encapsulation principle in TCP/IP networking regarding IP and MAC addresses.",
        "back": "The IP packet (Layer 3) containing source and destination IP addresses is encapsulated within the Ethernet frame (Layer 2) containing source and destination MAC addresses.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 476
    },
    {
        "front": "In TCP/IP networking, what address information remains constant throughout packet transmission, and what changes at each hop?",
        "back": "The source and destination IP addresses remain constant throughout transmission, while the source and destination MAC addresses change at each network hop.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 477
    },
    {
        "front": "What is IP Fragmentation?",
        "back": "IP Fragmentation is a process where large IP datagrams are broken down into smaller fragments when they need to traverse networks with smaller Maximum Transmission Unit (MTU) sizes.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 478
    },
    {
        "front": "What are the key rules for IP fragmentation?",
        "back": "1. Each fragment must contain a multiple of 8 bytes (except last fragment)\n2. Original IP header is copied to each fragment\n3. More Fragments (MF) bit is set for all fragments except the last one\n4. Fragment Offset field indicates position in original datagram",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 479
    },
    {
        "front": "How is the maximum fragment size calculated in IP fragmentation?",
        "back": "Maximum Fragment Size = MTU - IP Header Size (20 bytes)\nNote: Each fragment must carry data in multiples of 8 bytes",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 480
    },
    {
        "front": "What is the formula for calculating the number of fragments in IP fragmentation?",
        "back": "$$Number of Fragments = \\left\\lceil\\frac{Original Data Size}{(Smallest MTU - IP Header Size)}\\right\\rceil$$\nwhere Original Data Size = Total Size - IP Header Size",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 481
    },
    {
        "front": "Where does fragmentation and reassembly occur in IP networks?",
        "back": "- Fragmentation can occur at each hop if needed\n- Reassembly only happens at the final destination\n- Each fragment includes its own IP header",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 482
    },
    {
        "front": "What is the Longest Prefix Match (LPM) rule in IP forwarding?",
        "back": "When multiple prefixes match a destination IP address, choose the matching prefix with the largest N (most specific match). For example, if an IP matches both /24 and /26 prefixes, use /26.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 483
    },
    {
        "front": "How do you calculate the number of available hosts for a subnet with prefix length N?",
        "back": "The formula is $$2^{(32-N)} - 2$$, where N is the prefix length. The subtraction of 2 accounts for the network and broadcast addresses.",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 484
    },
    {
        "front": "What does a prefix /N notation mean in subnet masks?",
        "back": "A prefix /N means the first N bits of the address are fixed. For example, /24 means the first 24 bits are fixed, leaving 8 bits variable.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 485
    },
    {
        "front": "What are the key steps in the IP forwarding process?",
        "back": "1. Check if IP falls within prefix range\n2. Identify all matching prefixes\n3. Select entry with longest matching prefix\n4. Forward to corresponding next-hop router",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 486
    },
    {
        "front": "What are the key components that determine network data transfer time?",
        "back": "1. File size ($$F$$)\n2. Chunk size ($$C$$)\n3. Number of chunks ($$N = F/C$$)\n4. Link bandwidth ($$B$$)",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 487
    },
    {
        "front": "How is the time for a single chunk transmission calculated?",
        "back": "The time for a single chunk transmission is: $$T_{chunk} = \\frac{\\text{chunk size in bits}}{\\text{bandwidth}}$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 488
    },
    {
        "front": "What is the formula for total transfer time in a two-hop network path with equal bandwidth links?",
        "back": "$$T_{total} = 2T_{chunk} + (N-1)T_{chunk}$$\nwhere N is the number of chunks and $$T_{chunk}$$ is the transmission time for one chunk",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 489
    },
    {
        "front": "What is the pipeline effect in multi-hop network transmission?",
        "back": "The pipeline effect allows chunks to be transmitted on the second link while simultaneously receiving on the first link, enabling parallel transmission and reducing overall transfer time.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 490
    },
    {
        "front": "What is Network Address Translation (NAT)?",
        "back": "NAT is a mechanism that modifies packet headers when traffic passes between private and public networks, allowing multiple devices in a private network to share a single public IP address.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 491
    },
    {
        "front": "What is the primary modification made by NAT when a packet moves from internal to external network?",
        "back": "NAT replaces the private source IP address with a public IP address from its pool.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 492
    },
    {
        "front": "What happens to the header checksum during NAT translation and why?",
        "back": "The header checksum must be recalculated because any modification to IP header fields requires checksum recalculation to maintain packet integrity.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 493
    },
    {
        "front": "What are the steps in the NAT translation process?",
        "back": "1. Packet arrives at NAT device from internal network\n2. NAT maintains a translation table mapping private to public addresses\n3. Source IP is replaced with corresponding public IP\n4. Header checksum is recalculated\n5. Modified packet is forwarded to external network",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 494
    },
    {
        "front": "What is OSPF and what type of routing protocol is it?",
        "back": "OSPF (Open Shortest Path First) is an Intra-Domain routing protocol that operates within a single autonomous system.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 495
    },
    {
        "front": "What are the core algorithms used by OSPF?",
        "back": "OSPF uses Link State Algorithm and Dijkstra's shortest path algorithm for route calculation.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 496
    },
    {
        "front": "List four key features of OSPF.",
        "back": "1. Supports Variable Length Subnet Masks (VLSM)\n2. Uses multicast communication within areas\n3. Implements incremental updates\n4. Allows logical network segmentation through areas",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 497
    },
    {
        "front": "How does OSPF achieve efficiency in network routing?",
        "back": "OSPF achieves efficiency through:\n1. Bandwidth conservation via partial updates\n2. Reduced routing table size through hierarchical organization\n3. Larger network diameter support\n4. Efficient resource utilization through VLSM support",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 498
    },
    {
        "front": "What is the efficiency formula for Stop-and-Wait protocol?",
        "back": "$$\\eta = \\frac{1}{1 + \\frac{2T_p}{T_t}} = \\frac{1}{1 + \\frac{2d \\times B}{v \\times L}}$$\nWhere:\n- $$T_p$$ = Propagation delay\n- $$T_t$$ = Transmission time\n- $$d$$ = Link length\n- $$B$$ = Bandwidth\n- $$v$$ = Signal propagation speed\n- $$L$$ = Packet length",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 499
    },
    {
        "front": "How does link length (d) and bandwidth (B) affect Stop-and-Wait protocol efficiency?",
        "back": "The efficiency is inversely proportional to both link length (d) and bandwidth (B). This means as either the link length or bandwidth increases, the protocol efficiency decreases.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 500
    },
    {
        "front": "How does packet length (L) affect Stop-and-Wait protocol efficiency?",
        "back": "The efficiency is directly proportional to packet length (L). This means as the packet length increases, the protocol efficiency increases.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 501
    },
    {
        "front": "Under what conditions does Stop-and-Wait protocol perform worst (lowest efficiency)?",
        "back": "The protocol performs worst when:\n1. The link length is long (higher propagation delay)\n2. The transmission rate is high (shorter transmission time)\nThis is because the sender spends more time waiting for acknowledgments relative to the time spent transmitting data.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 502
    },
    {
        "front": "What is the formula for calculating the minimum number of bits required for TCP sequence number field?",
        "back": "$$\\text{Minimum bits required} = \\lceil \\log_2(\\text{MSL} \\times \\text{Bandwidth in bytes}) \\rceil$$\nWhere MSL is in seconds and bandwidth is converted from bits/s to bytes/s",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 503
    },
    {
        "front": "What are the two key factors that determine the TCP sequence number field size?",
        "back": "1. Maximum Segment Lifetime (MSL)\n2. Link bandwidth",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 504
    },
    {
        "front": "Why is proper TCP sequence number field sizing important?",
        "back": "It ensures:\n1. No sequence number is reused while its previous instance might still exist in the network\n2. TCP can uniquely identify segments during the maximum possible lifetime of a packet\n3. Prevents sequence number wraparound",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 505
    },
    {
        "front": "When converting bandwidth for TCP sequence number calculation, what conversion needs to be made?",
        "back": "Bandwidth must be converted from bits per second to bytes per second",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 506
    },
    {
        "front": "What are the two main components of End-to-End Delay in Data Communications?",
        "back": "1. Transmission Time (Tt)\n2. Propagation Time (Tp)",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 507
    },
    {
        "front": "What is the formula for Transmission Time (Tt) in data communications?",
        "back": "$$T_t = \\frac{\\text{Packet Size (bits)}}{\\text{Bandwidth (bps)}}$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 508
    },
    {
        "front": "What is the formula for Propagation Time (Tp) in data communications?",
        "back": "$$T_p = \\frac{\\text{Distance}}{\\text{Propagation Speed}}$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 509
    },
    {
        "front": "What is the formula for Total End-to-End Delay in data communications?",
        "back": "$$T_{total} = T_t + T_p$$\nWhere Tt is Transmission Time and Tp is Propagation Time",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 510
    },
    {
        "front": "Why is propagation delay particularly significant in satellite communications?",
        "back": "Propagation delay is significant in satellite communications due to the large distances that signals must travel between Earth and the satellite.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 511
    },
    {
        "front": "What is the Count-to-Infinity Problem in Distance Vector Routing?",
        "back": "The Count-to-Infinity Problem occurs when:\n1. A link failure isn't immediately communicated to all routers\n2. Routers exchange incorrect routing information\n3. Routers continue to increment their distance metrics based on outdated information",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 512
    },
    {
        "front": "What is the probability of a routing loop forming between two routers with equal update rates in Distance Vector Routing?",
        "back": "$$P(\\text{routing loop}) = \\frac{1}{2}$$ \nThis occurs with continuous time and uniform distribution, where the probability equals the area where the first update arrives before the second update divided by the total possible area.",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 513
    },
    {
        "front": "What are the four main prevention mechanisms for the Count-to-Infinity Problem?",
        "back": "1. Split horizon\n2. Route poisoning\n3. Hold-down timers\n4. Defining maximum metric values",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 514
    },
    {
        "front": "How is the probability of a routing loop mathematically expressed in Distance Vector Routing?",
        "back": "$$P(\\text{routing loop}) = \\frac{\\text{Cases leading to loop}}{\\text{Total possible cases}}$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 515
    },
    {
        "front": "What is Route Aggregation (Supernetting)?",
        "back": "Route aggregation is a technique to combine multiple contiguous network prefixes into a single larger prefix to reduce routing table size.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 516
    },
    {
        "front": "What are the three prerequisites for route aggregation?",
        "back": "1. Networks must be contiguous (numerically adjacent)\n2. Networks must share the same next-hop router\n3. Combined networks must align with bit boundaries",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 517
    },
    {
        "front": "What is CIDR notation and what does the prefix length indicate?",
        "back": "CIDR notation format is network_address/prefix_length (e.g., 12.20.164.0/22). The prefix length indicates the number of fixed bits from the left in the network address.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 518
    },
    {
        "front": "How is the prefix length determined in route aggregation?",
        "back": "$$\\text{Prefix Length} = \\text{Number of consecutive matching bits from left}$$\n\nTo determine:\n1. Convert addresses to binary\n2. Find common prefix bits\n3. Count the number of matching bits from left",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 519
    },
    {
        "front": "What is the basic process of DNS iterative resolution?",
        "back": "1. Client queries local DNS resolver\n2. Resolver queries root DNS server\n3. Each subsequent server provides referral to next level server\n4. Process continues until authoritative server is reached",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 520
    },
    {
        "front": "What is the formula for calculating the number of query-response pairs in DNS resolution?",
        "back": "$$\\text{Number of Query-Response Pairs} = \\text{Number of Domain Levels}$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 521
    },
    {
        "front": "What are the DNS resolution levels for the domain 'example.com'?",
        "back": "1. Level 1: Root DNS (.)\n2. Level 2: Top Level Domain (.com)\n3. Level 3: Authoritative server (example.com)",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 522
    },
    {
        "front": "What are two key characteristics of DNS iterative resolution?",
        "back": "1. Each level requires separate query-response exchange\n2. Resolution path follows domain hierarchy from right to left",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 523
    },
    {
        "front": "What is the fundamental formula for calculating total subnets in a router-connected network?",
        "back": "$$Total\\_Subnets = Total\\_Router\\_Interfaces - Number\\_of\\_Router\\_to\\_Router\\_Links$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 524
    },
    {
        "front": "What are the two key principles for counting subnets in a network topology?",
        "back": "1. Each router interface represents a potential subnet\n2. When counting total subnets, count each interface from all routers and subtract overlapping connections between routers",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 525
    },
    {
        "front": "How are router-to-router connections counted when calculating total subnets?",
        "back": "Router-to-router connections count as a single subnet, even though they involve two interfaces (one from each router)",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 526
    },
    {
        "front": "What are the main applications of subnet counting in network administration?",
        "back": "Subnet counting is crucial for:\n- Network design and planning\n- IP address allocation\n- Routing table management\n- Network segmentation",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 527
    },
    {
        "front": "What is Pure ALOHA protocol and its main characteristic?",
        "back": "Pure ALOHA is a random access protocol where nodes can transmit frames at any time without coordination.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 528
    },
    {
        "front": "How is frame transmission time ($$T_{fr}$$) calculated in Pure ALOHA?",
        "back": "$$T_{fr} = \\frac{\\text{Frame Length}}{\\text{Channel Rate}}$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 529
    },
    {
        "front": "What is the throughput equation for Pure ALOHA, and what do its variables represent?",
        "back": "The throughput equation is $$S = G \\cdot e^{-2G}$$, where:\n- S is the throughput (successful transmissions per frame time)\n- G is the offered load (average frames generated in one frame transmission time)\n- e is the natural exponential\n- Factor of 2 accounts for vulnerability period being twice the frame transmission time",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 530
    },
    {
        "front": "What is the maximum throughput of Pure ALOHA and at what offered load (G) is it achieved?",
        "back": "Pure ALOHA achieves maximum throughput of 18.4% when G = 0.5",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 531
    },
    {
        "front": "What is the Distance Vector Routing Algorithm?",
        "back": "A routing protocol where each router calculates the shortest path to all destinations based on information received from its neighbors.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 532
    },
    {
        "front": "What is the basic formula for calculating total path cost in Distance Vector Routing?",
        "back": "$$Distance_{total} = Distance_{to\\_neighbor} + Distance_{neighbor\\_to\\_destination}$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 533
    },
    {
        "front": "How is the best path selected in Distance Vector Routing?",
        "back": "The router calculates path cost through each neighbor and selects the minimum cost path using: $$BestPath = \\min\\{Cost_{via\\_neighbor1}, Cost_{via\\_neighbor2}, ..., Cost_{via\\_neighborN}\\}$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 534
    },
    {
        "front": "What is the Bellman-Ford equation used in Distance Vector Routing?",
        "back": "$$D_x(d) = \\min_v\\{c(x,v) + D_v(d)\\}$$ where:\n- $D_x(d)$ is distance from x to d\n- $c(x,v)$ is cost to neighbor v\n- $D_v(d)$ is neighbor v's distance to d",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 535
    },
    {
        "front": "What are the two key pieces of information stored in a Distance Vector routing table?",
        "back": "1. Distance to destination\n2. Next hop (neighbor) to use for reaching destination",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 536
    },
    {
        "front": "What is the fundamental formula for calculating a network address?",
        "back": "$$\\text{Network Address} = \\text{IP Address} \\land \\text{Subnet Mask}$$ where \u2227 represents bitwise AND operation",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 537
    },
    {
        "front": "What is the structure of a subnet mask?",
        "back": "$$\\text{Subnet Mask} = \\text{Network bits + Subnet bits (1's)} | \\text{Host bits (0's)}$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 538
    },
    {
        "front": "How can you determine if two hosts belong to the same subnet?",
        "back": "Hosts belong to the same subnet if they have the same network address after applying the subnet mask through a bitwise AND operation.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 539
    },
    {
        "front": "What is the number of usable host addresses in a /30 subnet mask?",
        "back": "A /30 subnet mask allows for 2 usable host addresses per subnet.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 540
    },
    {
        "front": "What protocol is used for sending emails and what type of protocol is it?",
        "back": "SMTP (Simple Mail Transfer Protocol) is used for sending emails. It's a 'push' protocol that transmits emails from sender to recipient's mail server.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 541
    },
    {
        "front": "What are the two main protocols used for retrieving emails and how do they differ?",
        "back": "1. POP3 (Post Office Protocol v3): Downloads emails to client and usually removes them from server\n2. IMAP (Internet Message Access Protocol): Keeps emails on server and allows access from multiple devices",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 542
    },
    {
        "front": "What is MIME in email systems and what is its purpose?",
        "back": "MIME (Multipurpose Internet Mail Extensions) is a content standard (not a transfer protocol) that:\n- Enables non-ASCII content in emails\n- Supports attachments like audio, video, and images",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 543
    },
    {
        "front": "Why do email systems use separate protocols for sending and receiving?",
        "back": "Email systems use separate protocols because sending and receiving are fundamentally different operations with different requirements. SMTP pushes mail out, while POP3/IMAP pull mail in.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 544
    },
    {
        "front": "What are the two main categories of cryptographic algorithms?",
        "back": "1. Asymmetric Key Cryptography (Public Key Cryptography)\n2. Symmetric Key Cryptography",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 545
    },
    {
        "front": "What is the key characteristic of Symmetric Key Cryptography?",
        "back": "Symmetric Key Cryptography uses the same key for both encryption and decryption processes.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 546
    },
    {
        "front": "What is the key characteristic of Asymmetric Key Cryptography?",
        "back": "Asymmetric Key Cryptography uses different keys for encryption and decryption (a public key and a private key pair).",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 547
    },
    {
        "front": "Name examples of Asymmetric Key Cryptography algorithms.",
        "back": "1. RSA (Rivest-Shamir-Adleman)\n2. Diffie-Hellman",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 548
    },
    {
        "front": "Name examples of Symmetric Key Cryptography algorithms.",
        "back": "1. Electronic Code Book (ECB)\n2. DES\n3. AES\n4. Blowfish",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 549
    },
    {
        "front": "Compare the performance and security aspects of Symmetric vs. Asymmetric encryption.",
        "back": "Symmetric: Generally faster but requires secure key distribution\nAsymmetric: Generally slower but more secure for key exchange",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 550
    },
    {
        "front": "What is a DMZ (Demilitarized Zone) in network security?",
        "back": "A DMZ is an isolated network segment positioned between trusted (internal) and untrusted (external) networks, designed to host public-facing services while protecting the internal network.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 551
    },
    {
        "front": "What are the main components of a dual firewall DMZ architecture?",
        "back": "1. External/Perimeter Firewall: Controls internet to DMZ traffic\n2. DMZ Zone: Hosts public-facing services\n3. Internal Firewall: Controls DMZ to internal network traffic\n4. Internal Network: Contains sensitive resources",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 552
    },
    {
        "front": "What is the typical traffic flow pattern in a DMZ architecture?",
        "back": "Internet <-> Perimeter Firewall <-> DMZ <-> Internal Firewall <-> Internal Network",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 553
    },
    {
        "front": "What are the three main security benefits of a DMZ architecture?",
        "back": "1. Traffic Control: Enables granular control over three distinct network segments\n2. Defense in Depth: Two security barriers must be breached to reach internal network\n3. Isolation: Public-facing services are separated from internal resources",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 554
    },
    {
        "front": "What is the Avalanche Effect in cryptography?",
        "back": "The avalanche effect is a fundamental cryptographic property where a small change in the input (like a single bit) results in a significant change (approximately 50%) in the output bits.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 555
    },
    {
        "front": "What is the mathematical representation of the Avalanche Effect in terms of Hamming Distance?",
        "back": "For input X changing to X' by 1 bit, the output Y changes to Y' where: $$\\text{Hamming Distance}(Y, Y') \\approx \\frac{\\text{output length}}{2}$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 556
    },
    {
        "front": "What are the three main security benefits of the Avalanche Effect?",
        "back": "1. Cryptographic strength against statistical analysis\n2. Unpredictability of output patterns\n3. Protection against differential cryptanalysis",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 557
    },
    {
        "front": "In which types of cryptographic systems is the Avalanche Effect crucial?",
        "back": "The Avalanche Effect is crucial for:\n- Hash functions\n- Block ciphers\n- Encryption algorithms",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 558
    },
    {
        "front": "What is IP packet fragmentation and when is it necessary?",
        "back": "IP packet fragmentation occurs when an IP packet needs to traverse a network with a smaller Maximum Transmission Unit (MTU) than its size. The packet must be broken into smaller fragments to accommodate the network's MTU constraints.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 559
    },
    {
        "front": "What are the essential components that each IP fragment must contain?",
        "back": "Each IP fragment must contain:\n1. Original IP header (with modified fields)\n2. Fragment offset field indicating position in original packet\n3. Payload that's a multiple of 8 bytes",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 560
    },
    {
        "front": "How is the maximum fragment payload size calculated in IP fragmentation?",
        "back": "Maximum Fragment Payload Size = $$\\text{MTU} - \\text{IP Header Size}$$ (rounded down to multiple of 8)",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 561
    },
    {
        "front": "How is the Fragment Offset calculated in IP fragmentation?",
        "back": "Fragment Offset = $$\\text{Offset} = \\frac{\\text{Previous Fragment Payload Size}}{8}$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 562
    },
    {
        "front": "What are the key rules for IP packet fragmentation?",
        "back": "1. First fragment has offset = 0\n2. Subsequent fragments' offsets are calculated based on previous fragments\n3. Fragment payload must be multiple of 8 bytes (except last fragment)\n4. Each fragment carries its own IP header\n5. Original IP header is copied to all fragments with appropriate modifications",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 563
    },
    {
        "front": "What is TCP sequence number wrap-around and why does it occur?",
        "back": "TCP sequence number wrap-around occurs when the 32-bit sequence numbers reach their maximum value ($$2^{32}$$) and reset to zero. This happens because TCP uses a finite number of bits to track bytes in transmission.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 564
    },
    {
        "front": "What is the formula for calculating TCP sequence number wrap-around time?",
        "back": "$$T_{wrap} = \\frac{2^{32} \\text{ bytes} \\times 8 \\text{ bits/byte}}{\\text{Bandwidth (bits/second)}}$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 565
    },
    {
        "front": "What are the two key factors that determine TCP sequence number wrap-around time?",
        "back": "1. Total possible sequence numbers ($$2^{32}$$ numbers)\n2. Network bandwidth (transmission rate)",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 566
    },
    {
        "front": "Why is TCP sequence number wrap-around time important in network protocol design?",
        "back": "It is important for:\n1. Ensuring reliable data transmission\n2. Preventing sequence number ambiguity\n3. Avoiding confusion between old and new packets in a TCP session\n4. Proper TCP connection management",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 567
    },
    {
        "front": "What is TCP Slow Start and what is its main purpose?",
        "back": "TCP Slow Start is an algorithm used by TCP to avoid sending more data than the network can handle at the beginning of a transmission.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 568
    },
    {
        "front": "How does the congestion window (cwnd) change with each ACK in TCP Slow Start?",
        "back": "For each received ACK, the congestion window increases by 1 MSS (Maximum Segment Size). Formula: $$cwnd_{new} = cwnd_{old} + 1\\text{ MSS}$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 569
    },
    {
        "front": "How does the congestion window (cwnd) change per Round Trip Time (RTT) in TCP Slow Start?",
        "back": "The congestion window doubles every RTT, following the formula: $$cwnd_{RTT_{new}} = 2 \\times cwnd_{RTT_{old}}$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 570
    },
    {
        "front": "What is the growth pattern of the congestion window in TCP Slow Start starting from 1 MSS?",
        "back": "The growth pattern is exponential:\n- Start: 1 MSS\n- After 1 RTT: 2 MSS\n- After 2 RTT: 4 MSS\n- After 3 RTT: 8 MSS\nAnd continues doubling each RTT",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 571
    },
    {
        "front": "What is the size of UDP header port number fields?",
        "back": "Each UDP port number field is $$16$$ bits in size, allowing for 65,536 possible port numbers.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 572
    },
    {
        "front": "What is the size of a MAC address and how is it typically written?",
        "back": "A MAC address is $$48$$ bits in total length and is typically written as six groups of two hexadecimal digits (e.g., 00:1A:2B:3C:4D:5E).",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 573
    },
    {
        "front": "What is the size of the IPv6 Next Header field and its purpose?",
        "back": "The IPv6 Next Header field is $$8$$ bits in size and is used to identify the type of the next header in the packet.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 574
    },
    {
        "front": "What is the size of the TCP Sequence Number field and its purpose?",
        "back": "The TCP Sequence Number field is $$32$$ bits in size and is used to track byte ordering in TCP segments.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 575
    },
    {
        "front": "What is WPA and what was its primary purpose?",
        "back": "WPA (Wi-Fi Protected Access) is a security protocol designed specifically for wireless networks. It was developed as a replacement for the vulnerable WEP standard to secure data transmission over Wi-Fi networks.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 576
    },
    {
        "front": "What is the evolution sequence of Wi-Fi security protocols?",
        "back": "WEP \u2192 WPA \u2192 WPA2",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 577
    },
    {
        "front": "What is the key difference between WPA and WPA2 in terms of hardware compatibility?",
        "back": "WPA maintains compatibility with older hardware, while WPA2 may require newer network cards.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 578
    },
    {
        "front": "What does WPA2 represent in terms of IEEE standards?",
        "back": "WPA2 represents full IEEE 802.11i compliance in wireless security standards.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 579
    },
    {
        "front": "What type of routing algorithm does RIP use and what is its primary metric?",
        "back": "RIP uses Distance Vector Routing (DVR) algorithm and uses hop count as its routing metric.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 580
    },
    {
        "front": "What transport protocol does RIP use and on which port?",
        "back": "RIP uses UDP on port 520.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 581
    },
    {
        "front": "What type of routing algorithm does OSPF use and what is its scope?",
        "back": "OSPF uses Link State Routing (LSR) algorithm and works within a single Autonomous System.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 582
    },
    {
        "front": "Why does OSPF implement its own transport mechanism instead of using TCP or UDP?",
        "back": "OSPF needs reliable multicasting capability. It can't use TCP (no multicast support) or UDP (no reliability), so it implements its own reliable transport mechanism with acknowledgments and retransmission.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 583
    },
    {
        "front": "What is the basic efficiency formula for Stop-and-Wait ARQ Protocol?",
        "back": "$$\\text{Efficiency} = \\frac{\\text{Information Frame Transmission Time}}{\\text{Total Transmission Time}} \\times 100\\%$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 584
    },
    {
        "front": "What are the components included in the Total Transmission Time for Stop-and-Wait ARQ?",
        "back": "Total Transmission Time includes:\n1. Information frame transmission time\n2. Acknowledgment frame transmission time\n3. Propagation delay (both directions)\n4. Frame processing time",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 585
    },
    {
        "front": "How is frame transmission time calculated in Stop-and-Wait ARQ?",
        "back": "Frame transmission time = $$\\frac{\\text{Frame Size (bits)}}{\\text{Bit Rate}}$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 586
    },
    {
        "front": "What is the formula for total time in Stop-and-Wait ARQ Protocol?",
        "back": "Total time = $$T_{info} + T_{ack} + 2 \\times T_{prop} + T_{process}$$\nWhere:\nTinfo = Information frame transmission time\nTack = Acknowledgment frame transmission time\nTprop = Propagation delay\nTprocess = Processing time",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 587
    },
    {
        "front": "What factors affect the efficiency of Stop-and-Wait ARQ Protocol?",
        "back": "1. Channel bit rate\n2. Propagation delay\n3. Frame sizes (both data and ACK)\n4. Processing overhead\n5. Frame overhead bytes",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 588
    },
    {
        "front": "What are the two main numbers needed to start RSA key generation?",
        "back": "Two large prime numbers, typically denoted as p and q.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 589
    },
    {
        "front": "How is the RSA modulus (n) calculated?",
        "back": "The modulus n is calculated by multiplying the two prime numbers: $$n = p \u00d7 q$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 590
    },
    {
        "front": "What is the formula for Euler's totient function \u03c6(n) in RSA?",
        "back": "$$\\phi(n) = (p-1)(q-1)$$, where p and q are the initial prime numbers.",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 591
    },
    {
        "front": "How is the private key (d) calculated in RSA?",
        "back": "The private key d is calculated using: $$d \\cdot e \\bmod \\phi(n) = 1$$ or $$d = e^{-1} \\bmod \\phi(n)$$, where e is the public key and \u03c6(n) is Euler's totient function.",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 592
    },
    {
        "front": "What are the requirements for choosing the public key (e) in RSA?",
        "back": "1. e must be greater than 1\n2. e must be less than \u03c6(n)\n3. e must be coprime with \u03c6(n)",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 593
    },
    {
        "front": "What is the fundamental security principle of RSA?",
        "back": "The security of RSA relies on the difficulty of factoring the product of two large prime numbers.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 594
    },
    {
        "front": "What is CRC (Cyclic Redundancy Check) and what is its primary purpose?",
        "back": "CRC is a method for detecting errors in digital data transmission that uses polynomial division over GF(2) (Galois Field of 2 elements).",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 595
    },
    {
        "front": "What is the mathematical formula for CRC calculation?",
        "back": "The CRC is calculated using the formula: $$M(x) \\cdot x^k \\bmod G(x)$$ where M(x) is the message polynomial, k is the degree of the generator polynomial G(x), and the remainder becomes the check bits.",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 596
    },
    {
        "front": "What determines the number of check bits in CRC, and how are they calculated?",
        "back": "The degree (n) of the generator polynomial G(x) determines the number of check bits. If the degree is n, then n check bits are added. These bits are calculated as the remainder of the polynomial division.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 597
    },
    {
        "front": "What are the key properties of CRC error detection?",
        "back": "1. Operations are performed in GF(2) where addition is XOR with no carries\n2. Can detect all burst errors up to length equal to degree of generator polynomial\n3. Widely used in network protocols and storage systems\n4. Easy to implement in hardware",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 598
    },
    {
        "front": "What are the two main methods of implementing digital signatures in cryptographic systems?",
        "back": "1. Authentication and Secrecy Method: Message is encrypted with sender's private key first, then with receiver's public key (provides both authentication and confidentiality)\n2. Authentication-Only Method: Only the message digest is encrypted with sender's private key (provides authentication without confidentiality)",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 599
    },
    {
        "front": "What is a birthday attack in the context of digital signatures?",
        "back": "A birthday attack is an attempt to find two different messages that produce the same hash value. Its success depends on access to encryption keys, and only the original sender with private key access can successfully execute it because creating a fraudulent message requires re-encryption with the sender's private key.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 600
    },
    {
        "front": "Why can only the original sender successfully execute a birthday attack on digital signatures?",
        "back": "Because creating a fraudulent message requires re-encryption with the sender's private key. Neither receivers nor third parties can forge signatures without access to this private key.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 601
    },
    {
        "front": "What is the mathematical expression for a valid digital signature?",
        "back": "$$\\text{Valid Digital Signature} = E_{private\\_key}(Message)$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 602
    },
    {
        "front": "What are the three key functions of Dynamic Routing Protocols?",
        "back": "1. Route Discovery\n2. Route Distribution\n3. Topology Consensus",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 603
    },
    {
        "front": "What is Route Discovery in Dynamic Routing Protocols?",
        "back": "Route Discovery is when routers:\n- Automatically discover available network paths\n- Learn about new networks dynamically\n- Adapt to network topology changes without manual configuration",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 604
    },
    {
        "front": "What is Route Distribution in Dynamic Routing Protocols?",
        "back": "Route Distribution is when routers:\n- Share routing information with neighboring routers\n- Propagate updates about network changes\n- Maintain routing tables automatically",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 605
    },
    {
        "front": "What are the key benefits of Dynamic Routing Protocols?",
        "back": "Key benefits include:\n- Automated network adaptation\n- Reduced manual configuration\n- Better fault tolerance\n- Scalability for large networks",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 606
    },
    {
        "front": "What is bit stuffing in data link layer?",
        "back": "Bit stuffing is a technique used in data link layer protocols to ensure data transparency and proper frame synchronization by preventing data patterns from being mistaken as control flags.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 607
    },
    {
        "front": "What is the basic rule of bit stuffing when sending data?",
        "back": "After detecting 5 consecutive 1s in the data, automatically insert (stuff) a 0 bit.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 608
    },
    {
        "front": "What is the basic rule of bit destuffing when receiving data?",
        "back": "After detecting 5 consecutive 1s followed by 0, automatically remove (destuff) the 0 bit.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 609
    },
    {
        "front": "Given the original data sequence '11111111', what would be the sequence after bit stuffing?",
        "back": "The sequence after bit stuffing would be '111110111' (a 0 is inserted after the first five 1s).",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 610
    },
    {
        "front": "What is the formula for minimum sender window size (ws) for 100% utilization in Selective Repeat ARQ?",
        "back": "$$w_s \\geq 1 + 2a$$ where $$a = \\frac{\\text{propagation time}}{\\text{transmission time}}$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 611
    },
    {
        "front": "What is the relationship between sender and receiver windows in Selective Repeat ARQ?",
        "back": "The sender and receiver windows are equal: $$w_s = w_r$$",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 612
    },
    {
        "front": "What is the minimum requirement for total sequence numbers in Selective Repeat ARQ?",
        "back": "Total sequence numbers needed must be greater than or equal to $$2 \\times w_s$$ (twice the window size)",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 613
    },
    {
        "front": "How do you calculate the number of bits needed for the sequence number field in Selective Repeat ARQ?",
        "back": "Required bits = $$\\lceil \\log_2(\\text{total sequence numbers}) \\rceil$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 614
    },
    {
        "front": "What are the three key non-overlapping channel characteristics in WiFi (IEEE 802.11)?",
        "back": "1. WiFi operates using non-overlapping channels\n2. Maximum of 3 non-overlapping channels are available\n3. Allows multiple simultaneous transmissions without interference",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 615
    },
    {
        "front": "How does collision handling in WiFi differ from wired networks, and what mechanism is used instead?",
        "back": "Unlike wired networks where collision detection is used, WiFi uses Collision Avoidance because collision detection is not feasible in wireless networks. This is implemented through the RTS-CTS (Request to Send - Clear to Send) mechanism.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 616
    },
    {
        "front": "Explain the RTS-CTS mechanism in WiFi.",
        "back": "RTS-CTS (Request to Send - Clear to Send) is a collision avoidance mechanism that:\n1. Reserves wireless channel for specific nodes\n2. Announces channel reservation to all nearby nodes\n3. Helps prevent collisions in wireless transmission",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 617
    },
    {
        "front": "How does frame acknowledgment work in IEEE 802.11, and what happens if an ACK is not received?",
        "back": "Frame acknowledgment requires:\n1. All unicast frames must receive acknowledgment (ACK)\n2. If ACK not received:\n   - Sender assumes transmission failure\n   - Implements random backoff period\n   - Retransmits the frame",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 618
    },
    {
        "front": "What is the formula for calculating minimum frame size in CSMA/CD networks?",
        "back": "$$L_{min} = B \u00d7 2 \u00d7 T_{prop}$$\nWhere:\n- $L_{min}$ is minimum frame size in bits\n- $B$ is bandwidth in bits per second\n- $T_{prop}$ is maximum propagation delay",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 619
    },
    {
        "front": "Why is the factor of 2 included in the minimum frame size calculation for CSMA/CD?",
        "back": "The factor of 2 accounts for the round-trip time (RTT), ensuring that a collision can be detected before the sender finishes transmitting the frame.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 620
    },
    {
        "front": "What is the main purpose of having a minimum frame size in CSMA/CD networks?",
        "back": "To ensure that a sender can detect collisions before completing frame transmission, allowing the network to operate efficiently by enabling proper collision detection across the maximum network diameter.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 621
    },
    {
        "front": "How do you convert the minimum frame size from bits to bytes?",
        "back": "Divide the result (in bits) by 8, since 1 byte = 8 bits.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 622
    },
    {
        "front": "What is IP datagram fragmentation and when is it necessary?",
        "back": "IP datagram fragmentation occurs when an IP datagram needs to traverse a network with a smaller Maximum Transmission Unit (MTU). The datagram must be broken into smaller pieces to accommodate the network's MTU constraints.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 623
    },
    {
        "front": "What is the formula for calculating the number of fragments needed in IP fragmentation?",
        "back": "$$\\text{Number of Fragments} = \\left\\lceil\\frac{\\text{Original Data Size}}{\\text{Maximum Payload Size}}\\right\\rceil$$ where Maximum Payload Size = MTU - IP Header Size (20 bytes)",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 624
    },
    {
        "front": "What are the key requirements for IP fragmentation?",
        "back": "1. Each fragment must include the original IP header (20 bytes)\n2. All fragments except the last one must contain data size that's a multiple of 8 bytes\n3. The maximum payload size per fragment = MTU - IP header size\n4. The last fragment may be partially filled",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 625
    },
    {
        "front": "What happens to IP fragments at the receiving end?",
        "back": "The receiving host reassembles all the fragments back into the original datagram using the information contained in their IP headers.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 626
    },
    {
        "front": "What are the three main security features provided by a digital signature?",
        "back": "1. Authentication\n2. Non-repudiation\n3. Integrity",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 627
    },
    {
        "front": "What is the mathematical formula for creating a digital signature?",
        "back": "$$Signature = K^{-}_{sender}(H(m))$$\nwhere:\n- $$K^{-}_{sender}$$ is the sender's private key\n- $$H(m)$$ is the message digest/hash\n- $$m$$ is the original message",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 628
    },
    {
        "front": "What is the complete format of a signed message in digital signatures?",
        "back": "$$\\{m, K^{-}_{sender}(H(m))\\}$$\nwhere m is the original message and the second part is the encrypted hash",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 629
    },
    {
        "front": "What are the steps in the digital signature verification process?",
        "back": "1. Compute $$H(m)$$ from received message\n2. Decrypt signature using sender's public key $$K^{+}$$\n3. Compare both values for match",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 630
    },
    {
        "front": "What is the key difference between stateful and stateless protocols?",
        "back": "Stateful protocols maintain information about client sessions and remember previous interactions, while stateless protocols don't retain any information between requests and treat each request as independent.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 631
    },
    {
        "front": "Give three examples of stateful protocols.",
        "back": "1. FTP (File Transfer Protocol)\n2. POP3 (Post Office Protocol)\n3. TCP (Transmission Control Protocol)",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 632
    },
    {
        "front": "What are the key characteristics of stateful protocols?",
        "back": "Stateful protocols require:\n1. More server resources\n2. Authentication mechanisms\n3. Session management\n4. Connection tracking",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 633
    },
    {
        "front": "What are the standard port numbers for FTP, POP3, and HTTP?",
        "back": "- FTP: Ports 20, 21 (TCP)\n- POP3: Port 110 (TCP)\n- HTTP: Port 80 (TCP)",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 634
    },
    {
        "front": "What are the three main address resolution protocols in computer networking?",
        "back": "1. DNS (Domain Name System): Resolves domain names to IP addresses\n2. ARP (Address Resolution Protocol): Maps IP addresses to MAC addresses\n3. RARP (Reverse Address Resolution Protocol): Maps MAC addresses to IP addresses",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 635
    },
    {
        "front": "What is the function of DNS (Domain Name System)?",
        "back": "DNS resolves domain names to IP addresses",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 636
    },
    {
        "front": "What is the function of ARP (Address Resolution Protocol)?",
        "back": "ARP maps IP addresses to MAC addresses",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 637
    },
    {
        "front": "How is DHCP different from address resolution protocols?",
        "back": "DHCP is not an address resolution protocol. Its primary function is to dynamically assign IP addresses to network devices and provide other network configuration parameters.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 638
    },
    {
        "front": "What is the correct resolution flow in network address translation?",
        "back": "Domain Name -(DNS)\u2192 IP Address -(ARP)\u2192 MAC Address\nMAC Address -(RARP)\u2192 IP Address",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 639
    },
    {
        "front": "What are the two main categories of layers in the OSI Model?",
        "back": "1. Host-to-Host Layers (Upper Layers) - Layers 4-7\n2. Media Layers (Lower Layers) - Layers 1-3",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 640
    },
    {
        "front": "Which layers are included in the Host-to-Host (Upper) Layers of the OSI Model?",
        "back": "- Transport Layer (Layer 4)\n- Session Layer (Layer 5)\n- Presentation Layer (Layer 6)\n- Application Layer (Layer 7)",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 641
    },
    {
        "front": "Which layers are included in the Media (Lower) Layers of the OSI Model?",
        "back": "- Physical Layer (Layer 1)\n- Data Link Layer (Layer 2)\n- Network Layer (Layer 3)",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 642
    },
    {
        "front": "What are the key characteristics of Host-to-Host Layers in the OSI Model?",
        "back": "- Focus on application-specific functions\n- Deal with data formatting, encryption, and session management\n- Handle end-to-end reliable data delivery\n- Are implemented primarily in software\n- Operate independently of the underlying network infrastructure",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 643
    },
    {
        "front": "What is the Longest Prefix Match principle in IP routing?",
        "back": "It is the fundamental concept where routers select the most specific (longest) matching prefix from the routing table to determine the output interface for incoming packets.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 644
    },
    {
        "front": "What is the mathematical formula for calculating the network portion in IP routing?",
        "back": "For an IP address $$A$$ and subnet mask $$M$$, the network portion is calculated as: $$A \\text{ AND } M$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 645
    },
    {
        "front": "What are the key steps in the Longest Prefix Matching process?",
        "back": "1. Apply each subnet mask to the destination IP using bitwise AND operation\n2. Compare the result with the corresponding destination network address\n3. Among all matching entries, select the one with the longest prefix (most specific match)",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 646
    },
    {
        "front": "Why is Longest Prefix Matching important in IP routing?",
        "back": "It enables hierarchical IP routing and allows for efficient route aggregation while maintaining specific routing requirements for subnets. More specific routes (longer masks) take precedence over more general routes.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 647
    },
    {
        "front": "What is PING (Packet InterNet Groper) and what protocol does it use?",
        "back": "PING is a diagnostic tool that uses ICMP (Internet Control Message Protocol) to test network connectivity by sending echo request datagrams and receiving echo replies.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 648
    },
    {
        "front": "What are the four main purposes of PING?",
        "back": "1. Tests network connectivity\n2. Verifies if remote host is responsive\n3. Measures network latency\n4. Helps diagnose network problems",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 649
    },
    {
        "front": "What are the main types of ICMP error messages that PING might receive?",
        "back": "The main ICMP error messages are:\n1. Destination unreachable\n2. Time exceeded\n3. Network unreachable\n4. Host unreachable",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 650
    },
    {
        "front": "What are the three possible response types when using PING?",
        "back": "1. Successful response: Shows round-trip time\n2. Error response: Returns appropriate ICMP error message\n3. No response: Indicates potential network/host issues",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 651
    },
    {
        "front": "What is Channel Load in Slotted ALOHA and how is it calculated?",
        "back": "Channel Load represents the average number of transmission attempts per time slot. It is calculated as: $$Channel Load = \\frac{Number of Requests per second}{Number of Slots per second}$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 652
    },
    {
        "front": "How do you calculate the number of slots per second in Slotted ALOHA?",
        "back": "The number of slots per second is calculated as: $$Slots per second = \\frac{1}{Slot Duration (in seconds)}$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 653
    },
    {
        "front": "What is the optimal channel load value for Slotted ALOHA and why is it significant?",
        "back": "The optimal channel load for Slotted ALOHA is 1.0, as this provides maximum throughput. When channel load exceeds 1.0, the probability of collisions increases.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 654
    },
    {
        "front": "What are two key characteristics of Slotted ALOHA regarding transmission timing and channel load?",
        "back": "1. Transmissions can only begin at slot boundaries\n2. Higher channel load indicates more network congestion",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 655
    },
    {
        "front": "What is the formula for calculating a network address in IP networking?",
        "back": "$$NetworkAddress = IPAddress \\text{ AND } SubnetMask$$\nThis is performed through a bitwise AND operation between the IP address and subnet mask.",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 656
    },
    {
        "front": "What do the 1s and 0s in a subnet mask represent?",
        "back": "1s indicate the network portion of the address, while 0s indicate the host portion.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 657
    },
    {
        "front": "What are the steps to calculate a network address?",
        "back": "1. Convert both IP and subnet mask to binary\n2. Perform bitwise AND operation\n3. Convert result back to decimal notation",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 658
    },
    {
        "front": "In a Class B subnet mask of 255.255.224.0, what does each octet represent?",
        "back": "- First two octets (255.255): Network bits\n- Third octet (224 = 11100000): Subnet bits\n- Last octet (0): Host bits",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 659
    },
    {
        "front": "What does a TCP acknowledgment (ACK) number represent?",
        "back": "A TCP ACK number indicates the next byte number that the receiver expects to receive.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 660
    },
    {
        "front": "How do you calculate the number of bytes received in TCP when ISN = 0?",
        "back": "When Initial Sequence Number (ISN) = 0: $$\\text{Bytes Received} = \\text{ACK Number}$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 661
    },
    {
        "front": "How do you calculate the number of bytes received in TCP when ISN = 1?",
        "back": "When Initial Sequence Number (ISN) = 1: $$\\text{Bytes Received} = \\text{ACK Number} - 1$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 662
    },
    {
        "front": "What are the three key principles of TCP acknowledgment numbers?",
        "back": "1. ACK numbers are cumulative, acknowledging all bytes up to (but not including) the ACK number\n2. The meaning of an ACK number requires knowing the initial sequence number\n3. ACK value represents the next expected byte, not the total bytes received",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 663
    },
    {
        "front": "How is the total IP header size calculated given HLEN?",
        "back": "Total header size = $$\\text{HLEN} \\times 4$$ bytes, where HLEN is measured in 32-bit words",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 664
    },
    {
        "front": "What is the formula for calculating data length in an IP packet?",
        "back": "$$\\text{Data Length} = \\text{Total Length} - (\\text{HLEN} \\times 4)$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 665
    },
    {
        "front": "How do you calculate the starting byte number for a fragment given its offset?",
        "back": "Starting byte number = $$\\text{Offset} \\times 8$$\nNote: Fragment offset is measured in 8-byte units",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 666
    },
    {
        "front": "What is the formula for calculating the last byte position in an IP packet fragment?",
        "back": "$$\\text{Last Byte} = (\\text{Offset} \\times 8) + \\text{Data Length} - 1$$\nNote: Subtract 1 because byte numbering starts from 0",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 667
    },
    {
        "front": "What are the two primary numbers needed to start RSA key generation?",
        "back": "Two prime numbers, typically denoted as p and q.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 668
    },
    {
        "front": "What is the formula for calculating the RSA modulus (n)?",
        "back": "$$n = p \u00d7 q$$ where p and q are prime numbers",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 669
    },
    {
        "front": "How is Euler's totient function \u03c6(n) calculated in RSA?",
        "back": "$$\u03c6(n) = (p-1)(q-1)$$ where p and q are the chosen prime numbers",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 670
    },
    {
        "front": "What is the fundamental relationship between encryption key (e) and decryption key (d) in RSA?",
        "back": "$$d \u00d7 e \\bmod \u03c6(n) = 1$$ or equivalently $$d \u00d7 e \u2261 1 \\pmod{\u03c6(n)}$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 671
    },
    {
        "front": "What is the main mathematical principle that ensures RSA's security?",
        "back": "The difficulty of factoring the product of large prime numbers (the modulus n) into its prime factors p and q.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 672
    },
    {
        "front": "What is OSPF (Open Shortest Path First) and what type of routing algorithm does it use?",
        "back": "OSPF is a routing protocol that implements the Link State routing algorithm. It enables routers to maintain a complete map of the network topology and calculate the best paths to all destinations.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 673
    },
    {
        "front": "What are the key characteristics of Link State routing as used in OSPF?",
        "back": "1. Maintains complete network topology map\n2. Exchanges link state info with all routers\n3. Uses Dijkstra's algorithm for path calculation\n4. Requires more memory/processing power\n5. Offers faster convergence\n6. Better handles topology changes",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 674
    },
    {
        "front": "How does Link State routing (OSPF) differ from Distance Vector routing?",
        "back": "Link State routing maintains a complete network map and exchanges information with all routers, while Distance Vector only shares routing tables with immediate neighbors. Link State offers faster convergence and better topology change handling, though requires more resources.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 675
    },
    {
        "front": "What algorithm does OSPF use to calculate the shortest path?",
        "back": "OSPF uses Dijkstra's shortest path algorithm to independently calculate the best path to all destinations in the network.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 676
    },
    {
        "front": "What is Network Address Translation (NAT)?",
        "back": "NAT is a networking technique that modifies IP address information in packet headers during routing, serving as a bridge between private and public networks. It's primarily used for IP address conservation and security.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 677
    },
    {
        "front": "What are the three main types of NAT?",
        "back": "1. Static NAT: One-to-one mapping\n2. Dynamic NAT: Pool of public IPs\n3. PAT (Port Address Translation): Many-to-one mapping using ports",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 678
    },
    {
        "front": "How does NAT work at a basic level?",
        "back": "NAT works by:\n1. Translating private (internal) IP addresses to public (external) addresses\n2. Operating at the router/gateway level\n3. Maintaining a translation table for tracking connections",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 679
    },
    {
        "front": "What are the main benefits of using NAT?",
        "back": "The main benefits of NAT are:\n1. Conservation of public IPv4 addresses\n2. Enhanced security by hiding internal network structure\n3. Enabling private networks to access public internet",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 680
    },
    {
        "front": "What is IP packet fragmentation and when does it occur?",
        "back": "IP packet fragmentation occurs when a packet is larger than the network's Maximum Transmission Unit (MTU). In such cases, the packet must be fragmented into smaller pieces to traverse the network.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 681
    },
    {
        "front": "How is the maximum fragment size calculated in IP fragmentation?",
        "back": "Maximum Fragment Size = $$\\text{MTU} - 20\\text{ bytes}$$ (where 20 bytes represents the IP Header Size)",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 682
    },
    {
        "front": "How is the Fragment Offset calculated in IP fragmentation?",
        "back": "$$\\text{Offset} = \\frac{\\text{Previous Fragments Total Size}}{8}$$ (measured in 8-byte units)",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 683
    },
    {
        "front": "What are the key rules for IP packet fragmentation?",
        "back": "1. Each fragment (except last) must be multiple of 8 bytes\n2. All fragments of same packet carry same ID\n3. Last fragment has MF=0\n4. Each fragment needs its own IP header",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 684
    },
    {
        "front": "What is the purpose of the More Fragments (MF) bit in IP fragmentation?",
        "back": "The MF bit indicates whether more fragments follow:\n- Set to 1 if more fragments follow\n- Set to 0 for the last fragment",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 685
    },
    {
        "front": "What are the three key components of a Globally Unique Identifier (GUID) in distributed systems?",
        "back": "1. Host Identifier Component (spatial uniqueness)\n2. Sequence Component (multiple IDs per second)\n3. Temporal Component (time-based uniqueness)",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 686
    },
    {
        "front": "How is the number of bits needed for the sequence component calculated in GUID generation?",
        "back": "$$\\text{bits needed} = \\left\\lceil \\log_2(\\text{max_ids_per_second}) \\right\\rceil$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 687
    },
    {
        "front": "What is the formula for calculating the wraparound period for the temporal component in GUID generation?",
        "back": "$$\\text{Wraparound period} = 2^{\\text{temporal_bits}} \\text{ seconds}$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 688
    },
    {
        "front": "What is the formula for calculating the total bits needed in a GUID?",
        "back": "$$\\text{Total Bits} = \\text{IP bits} + \\text{Sequence bits} + \\text{Temporal bits}$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 689
    },
    {
        "front": "What is the fundamental principle of Longest Prefix Matching in CIDR routing?",
        "back": "When multiple routing table entries match a destination IP address, select the entry with the longest matching prefix (largest n in /n notation), also known as the 'most specific route' rule.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 690
    },
    {
        "front": "What is the formula for calculating a Network Prefix in CIDR routing?",
        "back": "Network Prefix = IP Address AND (Subnet Mask)\nWhere the Subnet Mask in binary is: $$\\underbrace{1...1}_{n\\text{ bits}}\\underbrace{0...0}_{32-n\\text{ bits}}$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 691
    },
    {
        "front": "What are the steps for matching an IP address in CIDR routing?",
        "back": "1. Apply each subnet mask to the destination IP by keeping the first n bits and setting others to 0\n2. Compare the result with the network prefix in the routing table\n3. Multiple matches may occur\n4. Select the entry with the longest matching prefix (largest n)",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 692
    },
    {
        "front": "What are the key benefits of using Longest Prefix Matching in CIDR?",
        "back": "1. Allows for hierarchical routing\n2. Enables efficient route aggregation\n3. Provides flexible network addressing\n4. Overcomes limitations of classful addressing",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 693
    },
    {
        "front": "What are the three main IP header fields that can be modified during packet transmission?",
        "back": "1. Time to Live (TTL)\n2. Header Checksum\n3. Fragment Offset",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 694
    },
    {
        "front": "How does the Time to Live (TTL) field change during packet transmission, and what is its formula?",
        "back": "TTL decrements by 1 at each router hop. The formula is: $$TTL_{new} = TTL_{original} - \\text{number of hops}$$\nPurpose: Prevents infinite routing loops",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 695
    },
    {
        "front": "What triggers a recalculation of the Header Checksum in an IP packet?",
        "back": "The Header Checksum must be recalculated whenever any header field (such as TTL) changes, ensuring header integrity during transmission.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 696
    },
    {
        "front": "What is the Fragment Offset in IP headers and how is it calculated?",
        "back": "Fragment Offset identifies the position of a fragment in the original datagram. It is calculated as: $$\\text{Fragment Offset} = \\frac{\\text{Starting byte position}}{8}$$\nIt may change if packet fragmentation occurs due to different MTU sizes in network paths.",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 697
    },
    {
        "front": "What is bit stuffing in data communication?",
        "back": "Bit stuffing is a technique used in data link layer protocols to prevent pattern confusion when special delimiter patterns appear in the actual data.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 698
    },
    {
        "front": "What is the basic rule of bit stuffing?",
        "back": "A '0' bit is inserted (stuffed) after every sequence of five consecutive '1' bits in the data stream.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 699
    },
    {
        "front": "What is the mathematical representation of when bit stuffing occurs?",
        "back": "$$\\text{Five 1's} + \\text{Next bit is 1} \\rightarrow \\text{Insert 0}$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 700
    },
    {
        "front": "What is the standard delimiter pattern in bit stuffing, and how is it protected?",
        "back": "The standard delimiter pattern is 01111110. It is protected by inserting a '0' after any five consecutive '1's in the data, ensuring this pattern never appears within the actual data.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 701
    },
    {
        "front": "What are the main responsibilities of the Physical Layer (Layer 1) in the OSI model?",
        "back": "The Physical Layer handles:\n1. Bit synchronization\n2. Raw bit transmission\n3. Physical connections management",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 702
    },
    {
        "front": "What are the key functions of the Data Link Layer (Layer 2) in the OSI model?",
        "back": "The Data Link Layer handles:\n1. Error detection and correction\n2. Flow control\n3. Frame management\n4. MAC sublayer functions (channel sharing and access control protocols)",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 703
    },
    {
        "front": "What are the primary responsibilities of the Network Layer (Layer 3) in the OSI model?",
        "back": "The Network Layer is responsible for:\n1. Routing\n2. Packet forwarding\n3. Addressing",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 704
    },
    {
        "front": "What are the main functions of the Transport Layer (Layer 4) in the OSI model?",
        "back": "The Transport Layer handles:\n1. End-to-end process communication\n2. Segmentation and reassembly\n3. Reliability",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 705
    },
    {
        "front": "What is the main difference between Distance Vector Routing and Link State Routing protocols?",
        "back": "Distance Vector Routing exchanges distance information to known destinations, while Link State Routing exchanges information about direct network connections and maintains complete network topology.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 706
    },
    {
        "front": "What are the key characteristics of RIP (Routing Information Protocol)?",
        "back": "- Uses Distance Vector Routing\n- Uses Bellman-Ford algorithm\n- Maintains a vector of distances to all networks\n- Simpler but less efficient\n- Prone to counting-to-infinity problem",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 707
    },
    {
        "front": "What are the key characteristics of OSPF (Open Shortest Path First)?",
        "back": "- Uses Link State Routing\n- Uses Dijkstra's shortest path algorithm\n- Maintains complete network topology\n- More complex but more efficient\n- Better convergence time and scalability",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 708
    },
    {
        "front": "What is an Interior Gateway Protocol (IGP) and what is its purpose?",
        "back": "An Interior Gateway Protocol (IGP) is a routing protocol used within an autonomous system to handle internal routing between networks in the same organization or administrative domain.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 709
    },
    {
        "front": "What is the link utilization formula for Selective Repeat protocol?",
        "back": "$$\\eta_{SR} = \\frac{N}{1+2a}$$ where N is the window size and a is the normalized propagation delay",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 710
    },
    {
        "front": "How is normalized propagation delay (a) calculated in Selective Repeat protocol?",
        "back": "$$a = \\frac{T_p}{T_t} = \\frac{T_p \\times B}{L}$$ where Tp is propagation delay, Tt is transmission time, B is bandwidth, and L is packet length",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 711
    },
    {
        "front": "What is the fundamental requirement for sequence number space in Selective Repeat protocol?",
        "back": "$$2N \\leq 2^n$$ where N is the window size and n is the number of bits. The sequence number space must be at least twice the window size.",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 712
    },
    {
        "front": "How do you calculate the minimum number of bits needed for sequence numbers in Selective Repeat protocol?",
        "back": "Required bits = $$\\lceil \\log_2(2N) \\rceil$$ where N is the window size. This ensures the sequence number space is at least twice the window size.",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 713
    },
    {
        "front": "What are the two main phases of TCP congestion control after a timeout?",
        "back": "1. Slow Start Phase\n2. Congestion Avoidance Phase",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 714
    },
    {
        "front": "What happens to the Congestion Window (cwnd) and Slow Start Threshold (ssthresh) immediately after a TCP timeout?",
        "back": "- Congestion Window (cwnd) is reset to 1 MSS (Maximum Segment Size)\n- Slow Start Threshold (ssthresh) = $$\\frac{\\text{Previous cwnd}}{2}$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 715
    },
    {
        "front": "How does the window size change during the Slow Start phase of TCP congestion control?",
        "back": "The window size doubles every RTT: $$\\text{cwnd}_{\\text{new}} = 2 \\times \\text{cwnd}_{\\text{old}}$$\nThis continues until ssthresh is reached.",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 716
    },
    {
        "front": "How does the window size change during the Congestion Avoidance phase of TCP congestion control?",
        "back": "Linear increase per RTT: $$\\text{cwnd}_{\\text{new}} = \\text{cwnd}_{\\text{old}} + \\text{MSS}$$\nThis continues until original window size is reached.",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 717
    },
    {
        "front": "What is the formula for calculating total recovery time in TCP congestion control?",
        "back": "Total time = $$\\text{RTT} \\times (\\text{rounds in slow start} + \\text{rounds in congestion avoidance})$$\nWhere rounds = number of increases needed to reach target window size",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 718
    },
    {
        "front": "What are the two main components of a Token Ring Network's total cycle time?",
        "back": "1. Ring Latency (Tp): Time for signal propagation around the ring\n2. Total Token Holding Time: Sum of all stations' token holding times",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 719
    },
    {
        "front": "What is the formula for Ring Latency (Tp) in a Token Ring Network?",
        "back": "$$T_p = \\frac{\\text{Ring Length}}{\\text{Propagation Speed}}$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 720
    },
    {
        "front": "What is the formula for Total Token Holding Time in a Token Ring Network?",
        "back": "$$T_{hold} = N \\times THT$$\nwhere N is the number of stations and THT is token holding time per station",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 721
    },
    {
        "front": "What is the formula for minimum timeout period in a Token Ring Network?",
        "back": "$$T_{timeout} = T_p + N \\times THT$$\nwhere Tp is ring latency, N is number of stations, and THT is token holding time per station",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 722
    },
    {
        "front": "What is the correct sequence of steps in web browser-server communication?",
        "back": "1. DNS Resolution\n2. TCP Connection\n3. HTTP Request\n4. HTTP Response",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 723
    },
    {
        "front": "What happens during the DNS Resolution step in web communication?",
        "back": "During DNS Resolution, the browser converts the domain name to an IP address using the Domain Name System (DNS) protocol to locate the target server.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 724
    },
    {
        "front": "What occurs during the TCP Connection step in web communication?",
        "back": "During TCP Connection:\n- A reliable connection is established using three-way handshake\n- Uses port 80 for HTTP or 443 for HTTPS\n- Creates a pathway for data transmission",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 725
    },
    {
        "front": "Why must DNS Resolution occur before TCP Connection in web communication?",
        "back": "DNS Resolution must occur first because you need the server's IP address before you can establish a TCP connection. This demonstrates the hierarchical nature of the TCP/IP protocol stack.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 726
    },
    {
        "front": "What is the bit structure of a Class C IPv4 address?",
        "back": "First 3 bits: '110' (class identifier)\nNext 21 bits: network addressing\nLast 8 bits: host addressing",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 727
    },
    {
        "front": "How do you calculate the total number of possible networks in IPv4 Class C?",
        "back": "Total networks = $$2^{(24-3)}$$ = $$2^{21}$$\nWhere:\n- 24 is the network portion bits\n- 3 is the reserved bits for class identification",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 728
    },
    {
        "front": "What is the general formula for calculating the number of possible networks in any IPv4 class?",
        "back": "Number of possible networks = $$2^{(available\\ bits)}$$\nWhere available bits = Total network bits - Reserved class identifier bits",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 729
    },
    {
        "front": "What was the primary purpose of the IPv4 classification system?",
        "back": "The classification system was used for:\n1. Efficient network hierarchy\n2. Simplified routing\n3. Network size flexibility (Class A for large networks, Class C for small networks)",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 730
    },
    {
        "front": "What are the three main email protocols at the Application Layer?",
        "back": "1. SMTP (Simple Mail Transfer Protocol) - for sending emails\n2. POP (Post Office Protocol) - for receiving emails\n3. IMAP (Internet Message Access Protocol) - for receiving and managing emails",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 731
    },
    {
        "front": "Which transport layer protocol supports email communications and why is it chosen?",
        "back": "TCP (Transmission Control Protocol) is used because it provides:\n- Reliable delivery\n- Ordered data transmission\n- Connection-oriented service\n- Error checking and recovery",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 732
    },
    {
        "front": "What is the protocol hierarchy for email communications?",
        "back": "Application Layer: SMTP/POP/IMAP\nTransport Layer: TCP\nNetwork Layer: IP",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 733
    },
    {
        "front": "What is the specific purpose of SMTP in email communications?",
        "back": "SMTP (Simple Mail Transfer Protocol) is used specifically for sending emails.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 734
    },
    {
        "front": "What is a Protocol Data Unit (PDU) in networking?",
        "back": "A PDU is the basic unit of data at each layer of the network protocol stack. Each layer encapsulates data from the layer above and adds its own header information.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 735
    },
    {
        "front": "Match each network layer with its corresponding PDU type:",
        "back": "Application Layer (L7-L5) \u2192 Message\nTransport Layer (L4) \u2192 Segment (TCP) or Datagram (UDP)\nNetwork Layer (L3) \u2192 Packet\nData Link Layer (L2) \u2192 Frame\nPhysical Layer (L1) \u2192 Bits",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 736
    },
    {
        "front": "What is the PDU at the Transport Layer (L4) and how does it differ for TCP and UDP?",
        "back": "At the Transport Layer, the PDU is called:\n- Segment when using TCP\n- Datagram when using UDP\nThis layer adds port numbers and reliability mechanisms.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 737
    },
    {
        "front": "What is the purpose of PDU encapsulation in the network protocol stack?",
        "back": "PDU encapsulation ensures proper data handling and addressing at each network layer by having each layer add its own header information to the data received from the layer above.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 738
    },
    {
        "front": "What is the formula for calculating aggregate bandwidth in a network switch?",
        "back": "$$\\text{Aggregate Bandwidth} = \\text{Number of Ports} \\times \\text{Port Speed}$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 739
    },
    {
        "front": "What are the two key components needed to calculate aggregate bandwidth in a network switch?",
        "back": "1. Number of ports (total available physical connections)\n2. Port speed (data transfer rate per port)",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 740
    },
    {
        "front": "What are the three important considerations when calculating aggregate bandwidth?",
        "back": "1. Bandwidth is typically measured in bits per second (bps)\n2. Modern switches often support full-duplex communication\n3. Units should be consistent (convert if necessary)",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 741
    },
    {
        "front": "What is aggregate bandwidth in the context of network switches?",
        "back": "Aggregate bandwidth represents the total data transfer capacity across all ports in a network switch.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 742
    },
    {
        "front": "What is LDAP and what is its primary purpose?",
        "back": "LDAP (Lightweight Directory Access Protocol) is a standardized protocol designed for directory service authentication and management. Its primary purposes are:\n- Centralized authentication and authorization\n- Directory information storage and retrieval\n- User management and access control",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 743
    },
    {
        "front": "What are the main components stored in LDAP?",
        "back": "LDAP stores:\n- User login credentials\n- Passwords\n- Contact information\n- Access permissions\n- Organizational data",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 744
    },
    {
        "front": "What are the key features of LDAP?",
        "back": "Key features of LDAP include:\n- Stores user credentials and attributes\n- Maintains hierarchical directory structure\n- Provides single source of truth for user information\n- Centralizes authentication management",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 745
    },
    {
        "front": "What are the main benefits of implementing LDAP?",
        "back": "The main benefits of LDAP are:\n- Simplified user management\n- Centralized authentication\n- Reduced administrative overhead\n- Consistent access control\n- Scalable directory services",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 746
    },
    {
        "front": "How do you determine if two IP addresses belong to the same network?",
        "back": "Perform a bitwise AND operation between each IP address and the subnet mask. If the results are identical, the IP addresses belong to the same network. Mathematically: $$(IP_1 \text{ AND Mask}) = (IP_2 \text{ AND Mask})$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 747
    },
    {
        "front": "What is the relationship between subnet mask size and network size?",
        "back": "The more 1s in the subnet mask (larger subnet mask), the smaller the network size. Conversely, the more 0s in the subnet mask (smaller subnet mask), the larger the network size.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 748
    },
    {
        "front": "How do you calculate the number of available host addresses in a network based on the subnet mask?",
        "back": "The number of available host addresses = $$2^n - 2$$, where n is the number of 0s in the subnet mask. The subtraction of 2 accounts for the network and broadcast addresses.",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 749
    },
    {
        "front": "What are the key properties of a subnet mask?",
        "back": "1. Subnet masks are continuous sequences of 1s followed by 0s\n2. Used to determine network boundaries\n3. Calculated using: $$\\text{Subnet Mask} = \\text{IP Address} \\text{ AND } \\text{Network Mask}$$",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 750
    },
    {
        "front": "What are the key characteristics of client-server applications?",
        "back": "1. Dedicated server providing services to multiple clients\n2. Require establishment of connections\n3. Follow request-response model\n4. Operate at application layer\n5. Maintain state information\n6. Use TCP/UDP protocols",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 751
    },
    {
        "front": "What are the main characteristics of network utilities?",
        "back": "1. Basic network diagnostic tools\n2. Don't follow traditional client-server architecture\n3. Use lower-level protocols (like ICMP)\n4. Connectionless\n5. Focus on network diagnostics",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 752
    },
    {
        "front": "Give examples of client-server applications and network utilities",
        "back": "Client-Server Applications:\n- Web browsing\n- Email\n- Chat applications\n\nNetwork Utilities:\n- Ping\n- Traceroute",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 753
    },
    {
        "front": "What are the key differences between client-server applications and network utilities in terms of protocol and connection handling?",
        "back": "Client-Server Applications:\n- Use TCP/UDP protocols\n- Have persistent connections\n- Maintain state information\n\nNetwork Utilities:\n- Use simpler protocols (ICMP)\n- Are connectionless\n- Don't maintain state",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 754
    },
    {
        "front": "What is the purpose of the TTL (Time to Live) field in IP datagrams?",
        "back": "TTL is a mechanism that prevents packets from circulating indefinitely in the network by limiting their lifetime.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 755
    },
    {
        "front": "How does the TTL mechanism work in IP networking?",
        "back": "1. Each IP packet starts with an initial TTL value\n2. Every router decrements TTL by 1 when forwarding\n3. If TTL reaches 0, the packet is discarded\n\nFormula: $$TTL_{new} = TTL_{current} - 1$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 756
    },
    {
        "front": "What are the key benefits of using TTL in IP networking?",
        "back": "1. Prevents infinite routing loops\n2. Helps manage network congestion\n3. Ensures packets don't consume network resources indefinitely\n4. Acts as a safeguard against routing misconfiguration",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 757
    },
    {
        "front": "What is the practical application of TTL in networking?",
        "back": "1. Used in network troubleshooting (e.g., traceroute)\n2. Helps determine network path and routing issues\n3. Default initial TTL values typically range from 64 to 255",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 758
    },
    {
        "front": "What is IPSEC Tunnel Mode and how does it handle packet encapsulation?",
        "back": "IPSEC Tunnel Mode is a security protocol that encapsulates the entire original IP packet (header + payload) as the payload of a new IP packet, with a completely new IP header added.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 759
    },
    {
        "front": "What are the primary use cases for IPSEC Tunnel Mode?",
        "back": "IPSEC Tunnel Mode is commonly used for:\n- VPN (Virtual Private Network) connections\n- Site-to-site security\n- Gateway-to-gateway communications",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 760
    },
    {
        "front": "What is the key difference between IPSEC Tunnel Mode and Transport Mode?",
        "back": "Tunnel Mode encrypts the entire original packet and adds a new IP header, while Transport Mode only encrypts the payload and uses the original IP header.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 761
    },
    {
        "front": "What security benefit does IPSEC Tunnel Mode provide?",
        "back": "IPSEC Tunnel Mode provides enhanced security by protecting both the data (payload) and routing information (original IP header) of the packet through complete encapsulation.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 762
    },
    {
        "front": "What is AES (Advanced Encryption Standard) and what type of cipher is it?",
        "back": "AES is a symmetric block cipher encryption algorithm, meaning it uses the same key for both encryption and decryption. It is based on a substitution-permutation network (SPN) architecture.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 763
    },
    {
        "front": "What are the supported key lengths in AES?",
        "back": "AES supports three key lengths: $$\\{128, 192, 256\\}$$ bits",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 764
    },
    {
        "front": "What is the block size used in AES?",
        "back": "AES processes data in fixed-size blocks of 128 bits",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 765
    },
    {
        "front": "What are the key features that make AES an effective encryption algorithm?",
        "back": "Key features of AES include:\n1. Faster performance compared to predecessors\n2. High security through complex mathematical operations\n3. Efficient software implementation\n4. Standardized specification",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 766
    },
    {
        "front": "What is the formula for calculating the number of frames needed to maximize link utilization in a sliding window protocol?",
        "back": "Number of frames needed = $$\\text{Bandwidth} \\times \\text{Propagation Time} \\times \\frac{1}{\\text{Frame Size}}$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 767
    },
    {
        "front": "How is the minimum window size (in bits) calculated in sliding window protocols?",
        "back": "Minimum window size = $$\\lceil \\log_2(\\text{frames needed}) \\rceil$$ bits\nActual window size = $$2^I$$ where I is the number of bits",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 768
    },
    {
        "front": "What are the components of Round Trip Time (RTT) in sliding window protocols?",
        "back": "$$\\text{RTT} = \\text{Frame Propagation Time} + \\text{Frame Transmission Time} + \\text{ACK Propagation Time} + \\text{ACK Transmission Time}$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 769
    },
    {
        "front": "How is the waiting time calculated when the window is exhausted in sliding window protocols?",
        "back": "$$\\text{Waiting Time} = \\text{RTT} - \\text{Total Transmission Time}$$\nwhere Total Transmission Time = $$\\text{Frame Transmission Time} \\times \\text{Window Size}$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 770
    },
    {
        "front": "What is the formula for calculating the number of frames in transit in a data link protocol?",
        "back": "$$N_{frames} = \\frac{T_{prop} \\times BW}{Frame_{size}}$$\nWhere:\n- $T_{prop}$ is propagation time\n- $BW$ is link bandwidth\n- $Frame_{size}$ is the size of each frame",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 771
    },
    {
        "front": "How do you calculate the minimum number of bits needed for sequence numbers in sliding window protocols?",
        "back": "$$Bits_{required} = \\lceil \\log_2(N_{frames}) \\rceil$$\nWhere $N_{frames}$ is the number of frames that can be in transit simultaneously.",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 772
    },
    {
        "front": "What is the minimum required sequence number space in relation to frames in transit?",
        "back": "The sequence number space must be at least twice the maximum number of frames that can be in transit simultaneously.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 773
    },
    {
        "front": "What are the key components needed to calculate sequence number bits in data link protocols?",
        "back": "1. Frame transit calculation (using propagation time, bandwidth, and frame size)\n2. Logarithmic calculation for minimum bits needed\n3. Consideration of full duplex operation\n4. Ensuring sequence space is twice the maximum frames in transit",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 774
    },
    {
        "front": "How is data represented in polynomial form for CRC error detection?",
        "back": "Data is represented as polynomials where bit positions correspond to powers of x. For example, 10010 is represented as $$x^4 + x$$.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 775
    },
    {
        "front": "What is the fundamental mathematical relationship between received data R(x), transmitted data C(x), and error pattern E(x) in CRC?",
        "back": "$$R(x) = C(x) + E(x)$$, where all arithmetic is performed modulo-2 (1+1=0)",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 776
    },
    {
        "front": "What is the key requirement for detecting odd number of bit errors in CRC, and why?",
        "back": "The generator polynomial G(x) must have $$(1+x)$$ as a factor. This ensures G(x) cannot divide any E(x) with odd number of terms, as E(1)=1 for odd error patterns.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 777
    },
    {
        "front": "What is the fundamental formula for CRC error detection?",
        "back": "$$R(x) \\bmod G(x) = [C(x) + E(x)] \\bmod G(x)$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 778
    },
    {
        "front": "How is the TCP Initial Sequence Number (ISN) generated?",
        "back": "TCP ISN is generated using a Time-of-Day (ToD) clock counter that increments every millisecond, using the lower 32 bits of the counter.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 779
    },
    {
        "front": "What is the data-driven rate in TCP sequence numbers and how is it calculated?",
        "back": "The data-driven rate is how sequence numbers increase based on transmitted data, increasing by 1 for every byte. The maximum rate is limited by $$\\frac{2^{32}}{MaxPacketLifetime}$$.",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 780
    },
    {
        "front": "What is the ISN Change Rate in TCP and how is it calculated?",
        "back": "The ISN Change Rate is the rate at which new connections can safely use new ISNs. It is calculated as $$\\frac{1}{MaxPacketLifetime}$$, where Maximum Packet Lifetime must pass before sequence numbers can be reused.",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 781
    },
    {
        "front": "What is the safety principle for TCP sequence number management?",
        "back": "The safety principle requires waiting for Maximum Packet Lifetime before reusing sequence numbers to avoid confusion between old and new connections, ensuring no overlap between sequence numbers of different incarnations of the same connection.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 782
    },
    {
        "front": "What is a subnet mask and what is its primary purpose?",
        "back": "A subnet mask is a 32-bit number used to divide an IP address into network and host portions. It consists of consecutive 1s followed by consecutive 0s and is used for network segmentation.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 783
    },
    {
        "front": "How can the subnet mask 255.255.255.192 be represented in CIDR notation?",
        "back": "/26 (because it has 26 consecutive 1s in binary representation)",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 784
    },
    {
        "front": "What is the binary representation of the subnet mask 255.255.255.192?",
        "back": "11111111.11111111.11111111.11000000",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 785
    },
    {
        "front": "How is the last octet value of 192 calculated in a subnet mask?",
        "back": "$$192 = 128 + 64$$ (represented in binary as 11000000)",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 786
    },
    {
        "front": "How do you calculate the total number of network bits in a subnet mask for a Class C network with 2 subnet bits?",
        "back": "$$\text{Total network bits} = \text{Original prefix length} + \text{Subnet bits} = 24 + 2 = 26$$ bits",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 787
    },
    {
        "front": "What is the binary representation of the subnet mask 255.255.255.224?",
        "back": "11111111.11111111.11111111.11100000",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 788
    },
    {
        "front": "How do you determine if two IP addresses are in the same subnet?",
        "back": "Apply the subnet mask using bitwise AND operation: $$\\text{Subnet Number} = \\text{IP Address} \\;\\&\\; \\text{Subnet Mask}$$. Hosts are in the same subnet if they share the same subnet number.",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 789
    },
    {
        "front": "What are the three requirements for a valid gateway address?",
        "back": "1. Must be in the same subnet as the host\n2. Must be directly reachable (one hop away)\n3. Must have an interface on the host's network segment",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 790
    },
    {
        "front": "How do you break down the subnet mask 255.255.255.224 in the last octet?",
        "back": "224 represents 3 network bits (128 + 64 + 32 = 224), creating subnets with boundaries at multiples of 32",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 791
    },
    {
        "front": "What is the binary representation of the subnet mask 255.255.255.224?",
        "back": "11111111.11111111.11111111.11100000",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 792
    },
    {
        "front": "How do you calculate the number of possible subnets?",
        "back": "$$\\text{Number of possible subnets} = 2^n$$ where n is the number of subnet bits",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 793
    },
    {
        "front": "What is the formula to find a subnet ID?",
        "back": "$$\\text{Subnet ID} = \\text{IP Address} \\text{ AND } \\text{Subnet Mask}$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 794
    },
    {
        "front": "In a subnet mask of 255.255.255.224, how many bits are used for hosts and how many for the network?",
        "back": "27 bits are used for network (subnet) identification and 5 bits are used for hosts",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 795
    },
    {
        "front": "How many unique keys are needed in a secret/private key cryptosystem for n individuals?",
        "back": "The total number of unique keys needed is $$\\frac{n(n-1)}{2}$$, where n is the number of individuals. This follows a quadratic growth pattern ($$O(n^2)$$).",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 796
    },
    {
        "front": "How many keys does each individual need in a public key cryptosystem?",
        "back": "Each individual needs exactly two keys:\n1. One public key (for encryption by others)\n2. One private key (for decryption)",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 797
    },
    {
        "front": "What is the total number of keys needed in a public key cryptosystem for n individuals?",
        "back": "Total keys needed = $$2n$$, following a linear growth pattern ($$O(n)$$)",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 798
    },
    {
        "front": "Why are public key systems more manageable for large-scale secure communications compared to private key systems?",
        "back": "Public key systems have linear key growth ($$O(n)$$) compared to quadratic growth ($$O(n^2)$$) in private key systems, making them more scalable for large networks, despite being computationally more intensive.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 799
    },
    {
        "front": "What are the three main states in a TCP server's connection establishment sequence?",
        "back": "LISTEN \u2192 SYN_RCVD \u2192 ESTABLISHED",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 800
    },
    {
        "front": "What is the state transition sequence for a TCP client during connection establishment?",
        "back": "CLOSED \u2192 SYN_SENT \u2192 ESTABLISHED",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 801
    },
    {
        "front": "What happens if the SYN+ACK packet is lost during TCP three-way handshake?",
        "back": "Connection cannot be established as the client never receives acknowledgment",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 802
    },
    {
        "front": "What happens if the final ACK is lost during TCP three-way handshake?",
        "back": "Connection can still be established if the client sends data immediately after",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 803
    },
    {
        "front": "What are the four fundamental principles of TCP three-way handshake?",
        "back": "1. Requires minimum of three packets for connection establishment\n2. Retransmission mechanisms handle packet losses\n3. State machine follows a specific sequence that cannot be altered\n4. Each side (client/server) follows its own state transition path",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 804
    },
    {
        "front": "At which OSI layer do routers operate and what type of addresses do they primarily use?",
        "back": "Routers operate at Layer 3 (Network Layer) and primarily use IP addresses for making routing decisions between different networks.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 805
    },
    {
        "front": "What are the three main types of addresses used in networking and their respective OSI layers?",
        "back": "1. IP Address (Layer 3): For logical addressing and routing between networks\n2. MAC Address (Layer 2): For physical addressing within the same network\n3. Port numbers (Layer 4): For identifying applications/services",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 806
    },
    {
        "front": "How do routers handle traffic between different networks?",
        "back": "Routers:\n1. Examine the destination IP address\n2. Consult their routing tables\n3. Make forwarding decisions based on network portions of IP addresses\n4. Use physical addresses only for hop-to-hop delivery",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 807
    },
    {
        "front": "What are the address lengths for IPv4 and IPv6?",
        "back": "IPv4: 32-bit address\nIPv6: 128-bit address",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 808
    },
    {
        "front": "What is IEEE 802.11?",
        "back": "IEEE 802.11 is the primary standard that defines protocols for implementing wireless local area network (WLAN) communication, commonly known as Wi-Fi.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 809
    },
    {
        "front": "What are the key aspects covered by the IEEE 802.11 standard?",
        "back": "The key aspects include:\n1. Physical layer specifications\n2. MAC (Media Access Control) layer protocols\n3. Wireless data transmission methods\n4. Security protocols",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 810
    },
    {
        "front": "What specifications vary between different versions of IEEE 802.11 (like 802.11a, b, g)?",
        "back": "Different versions specify variations in:\n- Operating frequencies\n- Data rates\n- Range capabilities\n- Security features",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 811
    },
    {
        "front": "What are the different IEEE 802 standards and their corresponding technologies?",
        "back": "- 802.3: Ethernet\n- 802.11: WLAN (Wi-Fi)\n- 802.15: Bluetooth\n- 802.16: Broadband Wireless (WiMAX)",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 812
    },
    {
        "front": "What is the range of Class D IP addresses?",
        "back": "Class D IP addresses range from 224.0.0.0 to 239.255.255.255",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 813
    },
    {
        "front": "What is the purpose of Class D IP addresses?",
        "back": "Class D addresses are dedicated to multicast communication, used when data needs to be sent to multiple destinations simultaneously.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 814
    },
    {
        "front": "What is the binary pattern that identifies a Class D IP address?",
        "back": "Class D addresses always start with '1110' in binary",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 815
    },
    {
        "front": "What is the mathematical representation of the first octet range for Class D addresses in binary?",
        "back": "First octet ranges from $$224_{10} = 11100000_2$$ to $$239_{10} = 11101111_2$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 816
    },
    {
        "front": "What are the three main security properties provided by digital signatures?",
        "back": "Digital signatures provide:\n1. Authentication\n2. Non-repudiation\n3. Integrity",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 817
    },
    {
        "front": "What is the role of private and public keys in digital signatures?",
        "back": "Private key: Used for signing messages (by the sender)\nPublic key: Used for signature verification (by anyone)",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 818
    },
    {
        "front": "What is the mathematical formula for creating a digital signature?",
        "back": "$$Signature = E_{PrivateKey}(Hash(Message))$$\nWhere E represents the encryption function",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 819
    },
    {
        "front": "What is the mathematical formula for verifying a digital signature?",
        "back": "$$Verification = D_{PublicKey}(Signature) = Hash(Message)$$\nWhere D represents the decryption function",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 820
    },
    {
        "front": "What are the four steps in the digital signature process flow?",
        "back": "1. Sender creates message hash\n2. Sender encrypts hash with their private key\n3. Receiver decrypts signature with sender's public key\n4. Receiver verifies hash matches",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 821
    },
    {
        "front": "What is a digital certificate and its primary purpose?",
        "back": "A digital certificate is an electronic document used to prove the ownership of a public key in a Public Key Infrastructure (PKI). It provides a trusted way to verify identities and enable secure communications.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 822
    },
    {
        "front": "What is the X.509 standard and its main purpose?",
        "back": "X.509 is a standard that provides a standardized format for digital certificates. It enables secure identity verification in digital communications and forms the backbone of internet security protocols like SSL/TLS.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 823
    },
    {
        "front": "List the key components contained in an X.509 certificate.",
        "back": "An X.509 certificate contains:\n- Identity information of the certificate holder\n- Public key of the holder\n- Digital signature of the Certificate Authority (CA)\n- Validity period\n- Certificate version\n- Serial number",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 824
    },
    {
        "front": "What are the main applications/usage areas of X.509 certificates?",
        "back": "X.509 certificates are used in:\n- HTTPS for secure web browsing\n- Email security (S/MIME)\n- Code signing\n- Client authentication",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 825
    },
    {
        "front": "How is Network ID calculated from IP address and subnet mask?",
        "back": "Network ID is calculated using the bitwise AND operation between the IP address and subnet mask: $$Network\\_ID = IP\\_Address \\ \\& \\ Subnet\\_Mask$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 826
    },
    {
        "front": "What determines if two hosts are on the same network?",
        "back": "Two hosts are on the same network if they have the same Network ID after performing the bitwise AND operation between their IP addresses and subnet masks.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 827
    },
    {
        "front": "How does subnet mask size affect network size?",
        "back": "- Larger subnet mask (more 1s) creates smaller networks\n- Smaller subnet mask (more 0s) creates larger networks",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 828
    },
    {
        "front": "What happens when two hosts use different subnet masks?",
        "back": "- Hosts can have different views of whether they're on the same network\n- The host with the larger subnet mask (smaller network) has a more restrictive view of its network",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 829
    },
    {
        "front": "What is the formula for calculating the optimal window size in sliding window protocols?",
        "back": "$$\\text{Optimal Window Size} = \\frac{\\text{Bandwidth} \\times \\text{Round Trip Time}}{\\text{Packet Size}}$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 830
    },
    {
        "front": "What is the bandwidth-delay product (BDP) in sliding window protocols?",
        "back": "The bandwidth-delay product represents the maximum amount of data that can be in transit before receiving acknowledgments, determining the optimal window size for maximum channel utilization.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 831
    },
    {
        "front": "What are the three key components needed to calculate the optimal window size?",
        "back": "1. Bandwidth (in bits per second)\n2. Round Trip Time (RTT)\n3. Packet Size (in bits)",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 832
    },
    {
        "front": "What are the three main benefits of using the optimal window size in sliding window protocols?",
        "back": "1. Sender can continuously transmit without waiting for ACKs\n2. Channel capacity is fully utilized\n3. Flow control mechanism operates efficiently",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 833
    },
    {
        "front": "What is TTL (Time-to-Live) in IP datagrams and what is its primary purpose?",
        "back": "TTL is an 8-bit field in the IPv4 header that serves as a packet lifetime controller. Its primary purpose is to prevent infinite routing loops in connectionless IP networks.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 834
    },
    {
        "front": "What is the value range of the TTL field in IPv4, and how is it processed by routers?",
        "back": "TTL value range is $$0-255$$. Each router decrements the TTL by 1 when forwarding the packet. When TTL reaches 0, the packet is discarded.",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 835
    },
    {
        "front": "What is the maximum number of hops possible with TTL, and why is it not 255?",
        "back": "The maximum possible hops is 254, because it's calculated as (initial TTL - 1).",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 836
    },
    {
        "front": "What are the three main significance points of TTL in IP networking?",
        "back": "1. Prevents network congestion and instability\n2. Acts as a safeguard against routing loops\n3. Essential for maintaining network reliability in connectionless protocols",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 837
    },
    {
        "front": "What are the main components of a Distance Vector routing table?",
        "back": "A Distance Vector routing table contains two main components:\n1. Next hop information\n2. Cost to reach destinations",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 838
    },
    {
        "front": "What are the three steps in the synchronous update process of Distance Vector routing?",
        "back": "1. Direct neighbor cost assessment (1 for accessible, \u221e for inaccessible)\n2. Information exchange with neighbors\n3. Route table updates based on minimum cost paths",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 839
    },
    {
        "front": "What is the Count-to-Infinity Problem in Distance Vector routing?",
        "back": "The Count-to-Infinity Problem occurs when a node/link fails in the network, causing routes to be gradually updated with increasing costs. This results in slow convergence and potential temporary routing loops.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 840
    },
    {
        "front": "What is the mathematical pattern of cost increments in the Count-to-Infinity Problem?",
        "back": "Initial direct costs: $$c_0 = 1$$\nAfter failure, costs increase by 2 every two iterations: $$c_n = c_{n-1} + 2$$\nwhere n represents iteration pairs",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 841
    },
    {
        "front": "What are the three main components of a Distance Vector routing table entry?",
        "back": "1. Destination node\n2. Next hop router\n3. Path cost (distance)",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 842
    },
    {
        "front": "What are the three synchronized steps in the Distance Vector routing table update process?",
        "back": "1. Direct Neighbor Detection\n2. Information Exchange\n3. Table Update",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 843
    },
    {
        "front": "What is the mathematical formula for calculating distance to a destination in Distance Vector routing?",
        "back": "$$\\text{Distance}(X,Y) = \\min_{Z \\in \\text{neighbors}} \\{1 + \\text{Distance}(Z,Y)\\}$$\nwhere X is current router, Y is destination, and Z is neighboring router",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 844
    },
    {
        "front": "What defines convergence in Distance Vector routing?",
        "back": "Convergence occurs when all routers have optimal paths to all destinations, with each entry showing the most efficient next hop and minimum total cost to reach the destination.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 845
    },
    {
        "front": "What is the purpose of subnet masking?",
        "back": "Subnet masking is the process of borrowing bits from the host portion of an IP address to create additional network identifiers, enabling network segmentation and efficient IP address allocation.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 846
    },
    {
        "front": "What is the formula to calculate the number of subnet bits needed?",
        "back": "$$\\text{Number of bits} = \\lceil \\log_2(\\text{number of subnets}) \\rceil$$",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 847
    },
    {
        "front": "What is the default subnet mask for a Class B network?",
        "back": "255.255.0.0 (where the first two octets are for network [16 bits] and the last two octets are for hosts [16 bits])",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 848
    },
    {
        "front": "How do you create a subnet mask after determining the number of borrowed bits?",
        "back": "1. Convert borrowed bits to 1's in binary\n2. Convert resulting binary to decimal\n3. Keep original network bits\n4. Add subnet bits in appropriate octet\nExample: 6 borrowed bits = 11111100 in binary = 252 in decimal\nFinal format: 255.255.252.0",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 849
    },
    {
        "front": "What is the primary purpose of the Spanning Tree Algorithm (STA) in bridge networks?",
        "back": "The Spanning Tree Algorithm prevents network loops while maintaining connectivity in bridged LANs by creating a logical, loop-free topology from a physically meshed network.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 850
    },
    {
        "front": "What are the three main functions of the Spanning Tree Algorithm in terms of network structure?",
        "back": "1. Ensures all LANs are connected (spanning)\n2. Eliminates loops (tree property)\n3. Blocks redundant paths while maintaining them as backups",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 851
    },
    {
        "front": "What specific network problems does the Spanning Tree Algorithm prevent?",
        "back": "1. Broadcast storms\n2. Duplicate frame delivery\n3. Infinite packet circulation",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 852
    },
    {
        "front": "What are the key benefits of implementing the Spanning Tree Algorithm?",
        "back": "1. Network stability maintenance\n2. Automatic backup path provision\n3. Prevention of infinite packet circulation\n4. Deterministic packet routing",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 853
    },
    {
        "front": "What is the maximum window size for Selective Reject (SREJ) protocol in terms of n-bit sequence numbers?",
        "back": "The maximum window size for Selective Reject protocol is $$2^{n-1}$$, which is half of the sequence number space.",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 854
    },
    {
        "front": "What is the maximum window size for Go-Back-N protocol in terms of n-bit sequence numbers?",
        "back": "The maximum window size for Go-Back-N protocol is $$2^n - 1$$.",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 855
    },
    {
        "front": "Why does Selective Reject protocol have a smaller window size compared to Go-Back-N?",
        "back": "The smaller window size in Selective Reject is necessary to prevent sequence number ambiguity and ensure that the receiver can distinguish between new frames and retransmitted frames.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 856
    },
    {
        "front": "What is the total sequence number space in terms of n-bit sequence numbers?",
        "back": "The total sequence number space is $$2^n$$, where n is the number of bits used for sequence numbering.",
        "type": "formula-based",
        "topic": "Network Layer Protocol",
        "id": 857
    },
    {
        "front": "What is ARP (Address Resolution Protocol) and what is its primary function?",
        "back": "ARP is a networking protocol that bridges Layer 3 and Layer 2 by mapping IP addresses (logical addresses) to MAC addresses (physical/hardware addresses) in IPv4 networks.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 858
    },
    {
        "front": "What are the steps in the ARP process flow?",
        "back": "1. Device needs to send data to an IP address on local network\n2. Device checks ARP cache for existing mapping\n3. If not found, broadcasts ARP request\n4. Target device responds with its MAC address\n5. Mapping is stored in ARP cache for future use",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 859
    },
    {
        "front": "What is the purpose of ARP in local networks?",
        "back": "ARP enables actual packet delivery on local networks by:\n- Allowing devices to determine where to send frames at the physical level\n- Maintaining the crucial link between logical addressing (IP) and physical addressing (MAC)\n- Making local network communication possible",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 860
    },
    {
        "front": "Which networking layers does ARP bridge, and why is this important?",
        "back": "ARP bridges Layer 3 (Network Layer) and Layer 2 (Data Link Layer). This is important because it allows devices to translate logical IP addresses into physical MAC addresses, which is essential for local network communication.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 861
    },
    {
        "front": "What is the principle of layer independence in networking?",
        "back": "Each layer in the network architecture (OSI/TCP-IP) operates independently of the layers above it. For example, the Network Layer makes routing decisions without considering Transport Layer protocols.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 862
    },
    {
        "front": "What factors influence routing decisions at the Network Layer (Layer 3)?",
        "back": "Routing decisions are based on:\n- Network topology\n- Current network conditions\n- Routing algorithms and policies\n- Destination IP addresses",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 863
    },
    {
        "front": "How does Transport Protocol Transparency work in packet routing?",
        "back": "Routers operate at the Network Layer and don't examine transport layer headers. This means that routing decisions are made independently of whether TCP or UDP is being used, and packets can take different routes even within the same session.",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 864
    },
    {
        "front": "What are the key characteristics of Dynamic Routing?",
        "back": "Dynamic Routing characteristics include:\n- Routes can change during an active session\n- Multiple paths may exist between source and destination\n- Path selection is independent of the transport protocol being used",
        "type": "definition/recall-based",
        "topic": "Network Layer Protocol",
        "id": 865
    },
    {
        "front": "What is the Avalanche Effect in cryptography?",
        "back": "The Avalanche Effect is a property where a small change in the input (plaintext or key) results in a significant change in the output (ciphertext). Ideally, a single bit change in input should change approximately 50% of output bits.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 866
    },
    {
        "front": "What are the three main benefits of the Avalanche Effect in cryptographic strength?",
        "back": "1. Makes the relationship between input and output highly nonlinear\n2. Prevents pattern recognition and statistical analysis\n3. Makes the cipher more resistant to differential cryptanalysis",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 867
    },
    {
        "front": "What is the mathematical expression for measuring the Avalanche Effect?",
        "back": "$$\\frac{H(C,C')}{n} \\approx 0.5$$\nWhere:\n- H(C,C') is the Hamming distance between ciphertexts\n- n is the block size in bits\n- C and C' are ciphertexts from original and modified inputs",
        "type": "formula-based",
        "topic": "Network Security",
        "id": 868
    },
    {
        "front": "What is the ideal percentage of output bits that should change when a single input bit is modified in the Avalanche Effect?",
        "back": "50% of the output bits should change when a single input bit is modified.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 869
    },
    {
        "front": "What is a Columnar Transposition Cipher?",
        "back": "A cipher that rearranges text by writing the plaintext in rows under a keyword and reading it off in columns based on the alphabetical order of the keyword's letters. No characters are substituted, only their positions change.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 870
    },
    {
        "front": "How is the numerical key sequence derived from a keyword (e.g., TOMATO) in a Columnar Transposition Cipher?",
        "back": "The letters in the keyword are numbered based on their alphabetical order. For example: $$TOMATO \\rightarrow 6,4,3,1,6,4$$",
        "type": "formula-based",
        "topic": "Network Security",
        "id": 871
    },
    {
        "front": "What are the three key properties of a Columnar Transposition Cipher?",
        "back": "1. No characters are substituted; only positions change\n2. The keyword length determines the matrix width\n3. Multiple columns can share the same number (due to repeated letters in keyword)",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 872
    },
    {
        "front": "What is the basic encryption process in a Columnar Transposition Cipher?",
        "back": "1. Write plain text in rows under the keyword\n2. Add padding (usually 'X') to complete the matrix if needed\n3. Read text off in columns according to numerical order of keyword letters\n4. Separate columns with '/' in final ciphertext",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 873
    },
    {
        "front": "Why are Regular Expressions sufficient for validating IPv4 addresses?",
        "back": "Regular Expressions are sufficient because IPv4 addresses:\n1. Have a finite length\n2. Contain numbers with finite range (0-255)\n3. Have a deterministic structure (can be represented by DFA)\n4. Don't require context or memory between components",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 874
    },
    {
        "front": "What is the hierarchy of formal languages from lowest to highest power?",
        "back": "1. Regular Languages (RE)\n2. Context-Free Languages (CFL)\n3. Context-Sensitive Languages (CSL)\n4. Recursively Enumerable Languages",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 875
    },
    {
        "front": "What are the key characteristics of an IPv4 address pattern?",
        "back": "An IPv4 address consists of:\n- Four decimal numbers\n- Each number ranges from 0 to 255\n- Numbers are separated by dots\n- Fixed pattern length",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 876
    },
    {
        "front": "What is an important principle regarding the choice of language class for pattern validation?",
        "back": "When a pattern can be validated by a simpler language class (like Regular Expressions), using more powerful language classes (like Context-Free or Context-Sensitive Grammars) is unnecessary and less efficient.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 877
    },
    {
        "front": "What are the two main phases of TCP Congestion Control?",
        "back": "1. Slow Start Phase\n2. Congestion Avoidance Phase",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 878
    },
    {
        "front": "How does the window size grow during TCP's Slow Start phase?",
        "back": "- Window starts with 1 MSS (Maximum Segment Size)\n- Growth is exponential: window size doubles every RTT\n- Formula: $$cwnd_{new} = cwnd_{current} \u00d7 2$$ per RTT\n- Continues until reaching slow-start threshold (ssthresh)",
        "type": "formula-based",
        "topic": "Network Security",
        "id": 879
    },
    {
        "front": "How does the window size grow during TCP's Congestion Avoidance phase?",
        "back": "- Begins when cwnd reaches ssthresh\n- Linear growth: increases by 1 MSS per RTT\n- Formula: $$cwnd_{new} = cwnd_{current} + MSS$$ per RTT",
        "type": "formula-based",
        "topic": "Network Security",
        "id": 880
    },
    {
        "front": "What are the three factors that limit TCP window growth?",
        "back": "1. Slow start threshold (ssthresh)\n2. Receiver's advertised window size\n3. Network capacity",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 881
    },
    {
        "front": "What does 'n' represent in CIDR notation (x.x.x.x/n)?",
        "back": "In CIDR notation, 'n' represents the number of network prefix bits.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 882
    },
    {
        "front": "What is the formula for calculating the number of available host addresses in a CIDR block?",
        "back": "$$\\text{Number of Hosts} = 2^{(32-n)} - 2$$, where n is the network prefix length. The -2 accounts for the network and broadcast addresses.",
        "type": "formula-based",
        "topic": "Network Security",
        "id": 883
    },
    {
        "front": "What are the three key rules for subnet planning when allocating from a larger block (/n) to smaller blocks (/m)?",
        "back": "1. The new subnet must fall within the original address space\n2. The subnet mask (m) must be larger than the original mask (n)\n3. All host bits in the subnet address must be zero",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 884
    },
    {
        "front": "What are the three requirements for valid route aggregation in CIDR?",
        "back": "1. Subnets must be contiguous within the original address space\n2. The starting address of the subnet must align with its size boundary\n3. The subnet mask must accommodate the required number of hosts",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 885
    },
    {
        "front": "What is a Columnar Transposition Cipher?",
        "back": "A transposition cipher that rearranges the order of characters in plaintext without changing the actual characters. The message is written in rows and read column-wise according to a keyword-based ordering.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 886
    },
    {
        "front": "How is the keyword processed in a Columnar Transposition Cipher?",
        "back": "1. Each letter in the keyword is assigned a number based on alphabetical order\n2. These numbers determine the reading order of columns\n3. Example: LAYER \u2192 determines column ordering based on alphabetical position",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 887
    },
    {
        "front": "What are the mathematical components of a Columnar Transposition Cipher?",
        "back": "For a keyword length $$n$$ and message length $$m$$:\n1. Matrix has $$n$$ columns\n2. Number of rows = $$\\lceil \\frac{m}{n} \\rceil$$\n3. Columns are read in order of numbers assigned to keyword letters",
        "type": "formula-based",
        "topic": "Network Security",
        "id": 888
    },
    {
        "front": "What is the key security principle of a Columnar Transposition Cipher?",
        "back": "The cipher's security relies on the permutation of columns, making it a type of transposition rather than substitution cipher. It rearranges character positions without changing the characters themselves.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 889
    },
    {
        "front": "How is the total overhead calculated in network protocols?",
        "back": "Total overhead = Connection establishment overhead + Disconnection overhead",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 890
    },
    {
        "front": "What is the formula for calculating overhead percentage in networking?",
        "back": "$$\\frac{\\text{Total Overhead}}{\\text{Packet Size}} \\times 100 = \\text{Overhead Percentage}$$",
        "type": "formula-based",
        "topic": "Network Security",
        "id": 891
    },
    {
        "front": "How do you calculate the minimum packet size (x) when given a specific overhead percentage?",
        "back": "$$x = \\frac{\\text{Total Overhead} \\times 100}{\\text{Overhead Percentage}}$$",
        "type": "formula-based",
        "topic": "Network Security",
        "id": 892
    },
    {
        "front": "What is network overhead and why is it important?",
        "back": "Network overhead is the additional data needed for control and management in networking protocols. It's important because it affects efficiency and must be considered when implementing services across layers while maintaining specified overhead percentage requirements.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 893
    },
    {
        "front": "What is the formula for calculating optimal window size in sliding window protocols?",
        "back": "$$\\text{Window Size} = \\frac{\\text{Round Trip Time} \\times \\text{Bandwidth}}{\\text{Frame Size}}$$",
        "type": "formula-based",
        "topic": "Network Security",
        "id": 894
    },
    {
        "front": "What are the three key parameters needed to calculate optimal window size in sliding window protocols?",
        "back": "1. Round Trip Time (RTT): Time for packet to reach destination and acknowledgment to return\n2. Bandwidth: Channel capacity in bits per second\n3. Frame Size: Size of individual packets",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 895
    },
    {
        "front": "What is the formula for maximum channel utilization in sliding window protocols?",
        "back": "$$\\text{Utilization} = \\frac{n}{1 + 2a} = 1$$\nWhere:\nn = window size\na = propagation time / transmission time",
        "type": "formula-based",
        "topic": "Network Security",
        "id": 896
    },
    {
        "front": "What is the main purpose of optimal window size calculation in sliding window protocols?",
        "back": "To ensure efficient use of network resources by keeping the channel busy while waiting for acknowledgments, preventing both underutilization and overflow.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 897
    },
    {
        "front": "What is CRC (Cyclic Redundancy Check) and what is its primary purpose?",
        "back": "CRC is a powerful error detection technique used in network communications. It uses polynomial division to detect transmission errors.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 898
    },
    {
        "front": "What are the key types of errors that CRC can detect with certainty?",
        "back": "CRC can detect:\n1. All single-bit errors\n2. All burst errors \u2264 polynomial degree\n3. All errors affecting an odd number of bits\n4. Most burst errors > polynomial degree (with high probability)",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 899
    },
    {
        "front": "What is the mathematical formula used for CRC error detection?",
        "back": "CRC uses polynomial division: $$Data(x) \\bmod G(x)$$\nwhere G(x) is the generator polynomial",
        "type": "formula-based",
        "topic": "Network Security",
        "id": 900
    },
    {
        "front": "What are the common implementations of CRC and where are they used?",
        "back": "Common implementations are:\n1. CRC-32 (32-bit polynomial) - used in Ethernet and Token Ring\n2. CRC-16 (16-bit polynomial)",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 901
    },
    {
        "front": "What is the purpose of the carrier sensing window in CSMA?",
        "back": "The carrier sensing window is a fixed duration during which nodes must listen to the medium before transmitting to detect ongoing transmissions.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 902
    },
    {
        "front": "What is the formula for calculating signal propagation distance in CSMA?",
        "back": "$$d = v \\times t$$ where d is distance, v is signal speed, and t is time",
        "type": "formula-based",
        "topic": "Network Security",
        "id": 903
    },
    {
        "front": "How is the maximum safe distance calculated in CSMA for collision avoidance?",
        "back": "$$d_{max} = v \\times T_{sensing}$$ where v is signal speed and $$T_{sensing}$$ is the carrier sensing window duration",
        "type": "formula-based",
        "topic": "Network Security",
        "id": 904
    },
    {
        "front": "What are the three key factors determined by CSMA propagation delay considerations?",
        "back": "1. Maximum network diameter for reliable communication\n2. Minimum carrier sense duration needed\n3. Trade-offs between network size and collision probability",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 905
    },
    {
        "front": "What is PGP (Pretty Good Privacy) and what is its primary purpose?",
        "back": "PGP is a cryptographic security protocol primarily designed for email communication security. It provides privacy through encryption, authentication of sender, message integrity verification, and digital signatures.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 906
    },
    {
        "front": "What are the main functions of PGP?",
        "back": "PGP's main functions include:\n1. Encrypting and decrypting email messages, text files, directories, and disk partitions\n2. Digital signing of messages\n3. Providing end-to-end security for email communications",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 907
    },
    {
        "front": "What are the key security features of PGP?",
        "back": "PGP's key security features include:\n1. Combined symmetric and asymmetric encryption\n2. Public key infrastructure (PKI)\n3. Confidentiality through encryption\n4. Authenticity through digital signatures\n5. Data integrity maintenance during transmission",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 908
    },
    {
        "front": "What security services does PGP provide for email communication?",
        "back": "PGP provides four main security services:\n1. Privacy through encryption\n2. Authentication of sender\n3. Message integrity verification\n4. Digital signatures",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 909
    },
    {
        "front": "What is IPSec and at which layer of the TCP/IP protocol stack does it operate?",
        "back": "IPSec is a security protocol suite that operates at the Internet Layer (Network Layer/Layer 3) of the TCP/IP protocol stack.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 910
    },
    {
        "front": "What are the three core functions of IPSec?",
        "back": "The three core functions of IPSec are:\n1. Authentication of data packets\n2. Encryption of packet contents\n3. End-to-end security for all IP traffic",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 911
    },
    {
        "front": "Compare the network layers at which IPSec, TLS, and SSH operate.",
        "back": "- IPSec: Internet Layer (Layer 3)\n- TLS: Transport Layer (Layer 4)\n- SSH: Application Layer (Layer 7)",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 912
    },
    {
        "front": "What is the unique advantage of implementing security at the IP layer using IPSec?",
        "back": "IPSec provides comprehensive protection for all application traffic by implementing security at the IP level, making it transparent to applications and eliminating the need for application-specific security implementations.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 913
    },
    {
        "front": "What is MD5 (Message Digest Algorithm 5) and what is its output size?",
        "back": "MD5 is a cryptographic hash function that produces a fixed-size output of 128 bits (16 bytes) regardless of input size.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 914
    },
    {
        "front": "What are the key characteristics of the MD5 hash function?",
        "back": "1. One-way function (not reversible)\n2. Deterministic (same input always produces same output)\n3. Fixed output length of 128 bits\n4. Originally designed for cryptographic security",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 915
    },
    {
        "front": "What is the mathematical representation of the MD5 hash function?",
        "back": "$$MD5(M) \\rightarrow \\{0,1\\}^{128}$$ where M is the input message of any length",
        "type": "formula-based",
        "topic": "Network Security",
        "id": 916
    },
    {
        "front": "What is the current security status of MD5 and what are the recommended alternatives?",
        "back": "MD5 is no longer considered cryptographically secure. Modern applications should use stronger alternatives like SHA-256 or SHA-3. However, MD5 is still used in non-security contexts for checksums and data integrity verification.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 917
    },
    {
        "front": "What are the two main types of Interior Gateway Protocols (IGPs)?",
        "back": "1. OSPF (Open Shortest Path First) - Link-state routing protocol\n2. RIP (Routing Information Protocol) - Distance Vector-based protocol",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 918
    },
    {
        "front": "What is IGMP and what is its primary purpose?",
        "back": "IGMP (Internet Group Management Protocol) is used to manage membership in IP multicast groups. It operates between hosts and local multicast routers.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 919
    },
    {
        "front": "What is BGP and when is it used?",
        "back": "BGP (Border Gateway Protocol) is an Exterior Gateway Protocol used between different autonomous systems to handle inter-domain routing on the internet.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 920
    },
    {
        "front": "Compare Distance Vector and Link State routing algorithms",
        "back": "Distance Vector (used in RIP):\n- Based on Bellman-Ford algorithm\n- Routers share distance information with neighbors\n\nLink State (used in OSPF):\n- Maintains complete network topology\n- Uses Dijkstra's algorithm for path calculation",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 921
    },
    {
        "front": "What is the minimum size requirement for an Ethernet frame according to IEEE 802.3?",
        "back": "64 octets (bytes)",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 922
    },
    {
        "front": "What is a runt frame in Ethernet networking?",
        "back": "A runt frame is any Ethernet frame that is smaller than the minimum required size of 64 bytes. These frames are considered invalid and are typically discarded.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 923
    },
    {
        "front": "Why does Ethernet have a minimum frame size requirement?",
        "back": "The minimum size requirement exists to ensure proper collision detection in CSMA/CD networks.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 924
    },
    {
        "front": "What are the possible causes of runt frames in an Ethernet network?",
        "back": "Runt frames can be indicators of:\n- Network problems\n- Collisions\n- Malfunctioning network cards\n- Malicious activity",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 925
    },
    {
        "front": "What is the formula for calculating the total number of keys needed in symmetric key cryptography for N parties?",
        "back": "$$\\text{Total Keys} = \\frac{N(N-1)}{2}$$",
        "type": "formula-based",
        "topic": "Network Security",
        "id": 926
    },
    {
        "front": "Why is the formula for total symmetric keys divided by 2?",
        "back": "The division by 2 occurs because each connection needs only one key (bidirectional), not two separate keys for each direction of communication.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 927
    },
    {
        "front": "Compare the number of keys needed in symmetric vs. asymmetric cryptography for N parties.",
        "back": "Symmetric cryptography: $$\\frac{N(N-1)}{2}$$ keys\nAsymmetric cryptography: $$2N$$ keys (one public-private key pair per person)",
        "type": "formula-based",
        "topic": "Network Security",
        "id": 928
    },
    {
        "front": "What are the key principles of key distribution in symmetric cryptography?",
        "back": "1. Each pair needs one shared secret key\n2. Keys cannot be reused between different pairs\n3. Each person must communicate with (N-1) others\n4. Keys are bidirectional",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 929
    },
    {
        "front": "How do sequence numbers increment in TCP?",
        "back": "Sequence numbers increment by the number of bytes in the segment's data, not by 1. Formula: $$NextSeqNum = CurrentSeqNum + DataBytes$$",
        "type": "formula-based",
        "topic": "Network Security",
        "id": 930
    },
    {
        "front": "What is the formula for calculating TCP's Retransmission Timeout (RTO)?",
        "back": "$$RTO = RTT + 4 * RTTvariance$$, where RTT is the Round Trip Time",
        "type": "formula-based",
        "topic": "Network Security",
        "id": 931
    },
    {
        "front": "How is the Advertised Window calculated in TCP?",
        "back": "$$AdvertisedWindow = RcvBuffer - (LastByteRcvd - LastByteRead)$$",
        "type": "formula-based",
        "topic": "Network Security",
        "id": 932
    },
    {
        "front": "What is TCP's Flow Control Rule?",
        "back": "The number of unacknowledged bytes must be less than or equal to the Advertised Window. Formula: $$LastByteSent - LastByteAcked \u2264 AdvertisedWindow$$",
        "type": "formula-based",
        "topic": "Network Security",
        "id": 933
    },
    {
        "front": "What is the purpose of the Advertised Window in TCP?",
        "back": "The Advertised Window is a dynamic value that represents the receiver's available buffer space and is used for flow control to prevent the sender from overwhelming the receiver.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 934
    },
    {
        "front": "How many IP addresses are available in a /26 CIDR block?",
        "back": "A /26 network contains $$2^{32-26} = 2^6 = 64$$ addresses",
        "type": "formula-based",
        "topic": "Network Security",
        "id": 935
    },
    {
        "front": "What is the subnet mask for a /26 network?",
        "back": "255.255.255.192",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 936
    },
    {
        "front": "If you need to divide a /26 network (64 addresses) into 4 equal subnets, how many addresses will each subnet contain?",
        "back": "16 addresses (64 \u00f7 4 = 16)",
        "type": "formula-based",
        "topic": "Network Security",
        "id": 937
    },
    {
        "front": "What are the address ranges for the four subnets when dividing a /26 network starting at 130.34.12.64?",
        "back": "First subnet: x.x.x.64 to x.x.x.79\nSecond subnet: x.x.x.80 to x.x.x.95\nThird subnet: x.x.x.96 to x.x.x.111\nFourth subnet: x.x.x.112 to x.x.x.127",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 938
    },
    {
        "front": "What is the standard prefix for multicast MAC addresses?",
        "back": "Multicast MAC addresses always begin with `01:00:5E`",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 939
    },
    {
        "front": "What is the valid range for multicast MAC addresses?",
        "back": "The valid range is from `01:00:5E:00:00:00` to `01:00:5E:7F:FF:FF`",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 940
    },
    {
        "front": "How many unique multicast addresses are possible within the multicast MAC addressing scheme?",
        "back": "Approximately 8.3 million unique addresses ($$2^{23}$$ combinations)",
        "type": "formula-based",
        "topic": "Network Security",
        "id": 941
    },
    {
        "front": "What are the three key rules for multicast MAC addressing?",
        "back": "1. First 24 bits are fixed as `01:00:5E`\n2. 25th bit must be 0\n3. Last 23 bits can be any value within the valid range",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 942
    },
    {
        "front": "What is Auto-Negotiation in Ethernet networks?",
        "back": "Auto-negotiation is a capability that enables automatic configuration between connected Ethernet devices, allowing them to establish optimal communication parameters without manual configuration.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 943
    },
    {
        "front": "What are the three main parameters negotiated during Ethernet Auto-Negotiation?",
        "back": "1. Connection Speed (10/100/1000 Mbps)\n2. Duplex Mode (Half/Full)\n3. Flow Control settings",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 944
    },
    {
        "front": "Describe the basic process of Auto-Negotiation in Ethernet.",
        "back": "1. Devices exchange capability information when connected\n2. Best common parameters are selected automatically\n3. Highest possible performance level supported by both devices is established",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 945
    },
    {
        "front": "What are the four main benefits of Auto-Negotiation in Ethernet networks?",
        "back": "1. Plug-and-play functionality\n2. Optimal network performance\n3. Backward compatibility between different Ethernet standards\n4. Prevention of mismatched configurations",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 946
    },
    {
        "front": "What is a message digest in network security?",
        "back": "A message digest is a cryptographic hash value generated from input data, used for ensuring data integrity. It is created using one-way hash functions that produce fixed-length output.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 947
    },
    {
        "front": "What are the key differences between hash functions and encryption algorithms?",
        "back": "Hash Functions:\n- One-way functions with fixed-length output\n- Examples: SHA-1, MD5\n- Purpose: Data integrity verification\n\nEncryption Algorithms:\n- Two-way functions for data confidentiality\n- Examples: RSA, DES\n- Purpose: Data encryption/decryption",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 948
    },
    {
        "front": "What are the essential properties of message digest functions?",
        "back": "1. Fixed output length regardless of input size\n2. Deterministic (same input produces same output)\n3. Computationally infeasible to:\n   - Reverse the hash (one-way property)\n   - Find two different inputs with same hash (collision resistance)",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 949
    },
    {
        "front": "What are the main applications of message digests in network security?",
        "back": "Message digests are used in:\n1. Digital signatures\n2. Password hashing\n3. File integrity verification\n4. SSL/TLS protocols",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 950
    },
    {
        "front": "What are the key differences in computational complexity between Link State Routing (LSR) and Distance Vector Routing (DVR)?",
        "back": "LSR: Higher computational overhead due to global topology knowledge and Dijkstra's algorithm\nDVR: Lower computational overhead as it uses only local information and Bellman-Ford algorithm",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 951
    },
    {
        "front": "Compare the convergence properties of Link State Routing (LSR) and Distance Vector Routing (DVR)",
        "back": "LSR:\n- Faster convergence after topology changes\n- Only temporary routing loops possible\n- Self-correcting due to complete topology information\n\nDVR:\n- Slower convergence after topology changes\n- Can have persistent routing loops\n- Uses split horizon technique to minimize routing loops",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 952
    },
    {
        "front": "How does information distribution differ between Link State Routing (LSR) and Distance Vector Routing (DVR)?",
        "back": "LSR:\n- Maintains complete network topology\n- Each node has full network view\n- Uses flooding to distribute link state information\n\nDVR:\n- Maintains only neighbor information\n- Each node knows only distance to destinations via neighbors\n- Exchanges information only with immediate neighbors",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 953
    },
    {
        "front": "What technique does Distance Vector Routing (DVR) use to minimize routing loops?",
        "back": "DVR uses the split horizon technique to minimize routing loops.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 954
    },
    {
        "front": "What is a Protocol Data Unit (PDU)?",
        "back": "A Protocol Data Unit (PDU) represents data at different layers of the network protocol stack, where each layer encapsulates data with its own header information.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 955
    },
    {
        "front": "List the PDUs for each layer of the TCP/IP protocol stack from Application to Physical layer.",
        "back": "- Application Layer: Message\n- Transport Layer: Segment (TCP) or Datagram (UDP)\n- Network Layer: Datagram/Packet\n- Data Link Layer: Frame\n- Physical Layer: Bits",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 956
    },
    {
        "front": "What happens to data during encapsulation in the TCP/IP protocol stack?",
        "back": "As data moves down the protocol stack, each layer adds its own header to the data received from the upper layer, encapsulating it with additional information.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 957
    },
    {
        "front": "What happens during de-encapsulation in the TCP/IP protocol stack?",
        "back": "During de-encapsulation (receiving), each layer strips off its respective header as the data moves up the protocol stack.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 958
    },
    {
        "front": "What is a Feistel structure in cryptography?",
        "back": "A Feistel structure (or Feistel network) is a fundamental design principle used in block ciphers that divides the input block into two equal halves and applies multiple rounds of substitution and permutation operations.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 959
    },
    {
        "front": "What are the three key properties of a Feistel structure?",
        "back": "1. Symmetric encryption (same key for encryption/decryption)\n2. Block cipher design (processes fixed-size blocks of data)\n3. Reversible operation (encryption and decryption use same structure)",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 960
    },
    {
        "front": "Name two well-known cryptographic algorithms that implement the Feistel structure.",
        "back": "1. Data Encryption Standard (DES) - most famous example\n2. Blowfish and TWOFISH",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 961
    },
    {
        "front": "How does a Feistel structure differ from other cryptographic approaches?",
        "back": "Feistel structures differ from:\n1. Block ciphers like AES that use different structures\n2. Stream ciphers like RC4 that use continuous data flow\n3. Asymmetric algorithms like RSA that use different mathematical principles",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 962
    },
    {
        "front": "What is a packet filtering firewall and at which OSI layer does it operate?",
        "back": "A packet filtering firewall operates at the network layer (Layer 3) of the OSI model and makes decisions based on packet headers.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 963
    },
    {
        "front": "What are the main filtering criteria used by packet filtering firewalls?",
        "back": "Packet filtering firewalls filter traffic based on:\n- IP addresses\n- Ports\n- Protocols",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 964
    },
    {
        "front": "List four key limitations of packet filtering firewalls.",
        "back": "Key limitations:\n1. Cannot authenticate users\n2. Cannot inspect application-layer content\n3. Cannot make content-based decisions\n4. Unable to detect malware or viruses directly",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 965
    },
    {
        "front": "What are the primary use cases for packet filtering firewalls?",
        "back": "Primary use cases:\n1. Host-based access control\n2. Network segmentation\n3. Basic network security\n4. Traffic filtering based on source/destination addresses",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 966
    },
    {
        "front": "What is the mathematical formula for creating a digital signature?",
        "back": "$$Signature = E_{Private_{Sender}}(Hash(Message))$$",
        "type": "formula-based",
        "topic": "Network Security",
        "id": 967
    },
    {
        "front": "What is the formula for encrypting a message with digital signature?",
        "back": "$$Encrypted Message = E_{Public_{Recipient}}(Message || Signature)$$",
        "type": "formula-based",
        "topic": "Network Security",
        "id": 968
    },
    {
        "front": "What are the four key security properties provided by digital signatures with public key encryption?",
        "back": "1. Confidentiality: Only intended recipient can decrypt\n2. Authentication: Signature verifies sender's identity\n3. Integrity: Message cannot be tampered without detection\n4. Non-repudiation: Sender cannot deny sending the message",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 969
    },
    {
        "front": "What are the steps in the decryption and verification process of a digitally signed message?",
        "back": "1. Recipient decrypts using their private key\n2. Verify signature using sender's public key\n\nFormula: $$Decryption = D_{Public_{Sender}}(D_{Private_{Recipient}}(Encrypted Message))$$",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 970
    },
    {
        "front": "What are the main criteria for choosing UDP (User Datagram Protocol) in applications?",
        "back": "UDP is preferred when:\n- Speed is prioritized over reliability\n- Real-time delivery is crucial\n- Occasional packet loss is acceptable\n- Minimal protocol overhead is desired\n- No handshaking is required",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 971
    },
    {
        "front": "What are the main criteria for selecting TCP (Transmission Control Protocol)?",
        "back": "TCP is chosen when:\n- Reliability is essential\n- Data integrity must be guaranteed\n- Order of data packets matters\n- Connection-oriented service is needed\n- Complete data delivery is required",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 972
    },
    {
        "front": "Give examples of applications that typically use UDP.",
        "back": "Real-time multimedia applications and DNS queries typically use UDP.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 973
    },
    {
        "front": "Give examples of applications that typically use TCP.",
        "back": "File transfer and Email (SMTP) typically use TCP.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 974
    },
    {
        "front": "What are the two main phases of TCP's AIMD (Additive Increase Multiplicative Decrease) algorithm?",
        "back": "1. Slow Start Phase\n2. Congestion Avoidance Phase",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 975
    },
    {
        "front": "What is the formula for window size increase during TCP's Slow Start Phase?",
        "back": "$$cwnd_{new} = cwnd_{current} \u00d7 2$$\nWindow size doubles each RTT until reaching threshold",
        "type": "formula-based",
        "topic": "Network Security",
        "id": 976
    },
    {
        "front": "What is the formula for window size increase during TCP's Congestion Avoidance Phase?",
        "back": "$$cwnd_{new} = cwnd_{current} + 1$$\nWindow size increases linearly (additive increase)",
        "type": "formula-based",
        "topic": "Network Security",
        "id": 977
    },
    {
        "front": "What happens to the threshold and window size during a TCP timeout (congestion event)?",
        "back": "1. New threshold: $$ssthresh_{new} = \\frac{cwnd_{current}}{2}$$\n2. Window size reduces to initial value\n3. Algorithm returns to slow start phase",
        "type": "formula-based",
        "topic": "Network Security",
        "id": 978
    },
    {
        "front": "What are the two main components of network delay and their formulas?",
        "back": "1. Transmission Delay (Tx): $$T_x = \\frac{\\text{Packet Size}}{\\text{Bandwidth}}$$\n2. Propagation Delay (Tp): $$T_p = \\frac{\\text{Distance}}{\\text{Signal Speed}}$$",
        "type": "formula-based",
        "topic": "Network Security",
        "id": 979
    },
    {
        "front": "How does store-and-forward mechanism affect network delay?",
        "back": "In store-and-forward mechanism:\n- Routers must receive entire packet before forwarding\n- Each hop adds both transmission and propagation delays\n- For first packet: Total delay = sum of all Tx and Tp across hops",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 980
    },
    {
        "front": "What is the pipelining effect in network transmission and how does it affect total delay for multiple packets?",
        "back": "The pipelining effect means:\n- After first packet establishes the pipeline\n- Subsequent packets arrive at regular intervals\n- Total Time = (First packet complete path delay) + (transmission time \u00d7 (n-1) packets)",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 981
    },
    {
        "front": "What determines the transmission delay (Tx) in a network?",
        "back": "Transmission delay (Tx) is determined by the packet size divided by the bandwidth of the link, represented as: $$T_x = \\frac{\\text{Packet Size}}{\\text{Bandwidth}}$$",
        "type": "formula-based",
        "topic": "Network Security",
        "id": 982
    },
    {
        "front": "What is the format of CIDR notation?",
        "back": "network_address/prefix_length, where prefix_length indicates the number of fixed bits",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 983
    },
    {
        "front": "How do you calculate the number of available addresses in a CIDR block with prefix length n?",
        "back": "The number of available addresses is $$2^{32-n}$$, where n is the prefix length",
        "type": "formula-based",
        "topic": "Network Security",
        "id": 984
    },
    {
        "front": "What happens to the prefix length when splitting a CIDR block in half?",
        "back": "The prefix length increases by 1 for each halving of the address space",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 985
    },
    {
        "front": "What is the rule for subnet boundaries in CIDR block subdivision?",
        "back": "New subnets must start at valid network boundaries, where the first address in each subnet must be divisible by the subnet size ($$2^{32-\\text{prefix\\_length}}$$)",
        "type": "formula-based",
        "topic": "Network Security",
        "id": 986
    },
    {
        "front": "What is a poly-alphabetic substitution cipher?",
        "back": "A poly-alphabetic substitution cipher is an encryption method that uses multiple substitution alphabets to encrypt text, where each character can be encrypted differently depending on its position in the text.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 987
    },
    {
        "front": "What are the key security advantages of poly-alphabetic substitution ciphers?",
        "back": "1. More secure than mono-alphabetic ciphers\n2. Defeats simple frequency analysis\n3. Creates multiple substitution possibilities for each plaintext letter",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 988
    },
    {
        "front": "How does the Vigen\u00e8re Cipher work as an example of a poly-alphabetic cipher?",
        "back": "The Vigen\u00e8re Cipher:\n1. Uses a keyword to determine which shift to apply\n2. Each letter of the keyword specifies a different Caesar cipher to use\n3. Pattern repeats after the keyword length",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 989
    },
    {
        "front": "What is the main difference between mono-alphabetic and poly-alphabetic ciphers?",
        "back": "Mono-alphabetic ciphers use a single substitution pattern for the entire text, while poly-alphabetic ciphers use multiple substitution alphabets where the same character can be encrypted differently based on its position.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 990
    },
    {
        "front": "What is the primary purpose of Address Resolution Protocol (ARP)?",
        "back": "ARP maps IP addresses to MAC addresses in local networks, enabling communication between devices on the same network segment.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 991
    },
    {
        "front": "What is the main function of Reverse Address Resolution Protocol (RARP)?",
        "back": "RARP maps MAC addresses to IP addresses, typically used by diskless workstations to find their IP address.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 992
    },
    {
        "front": "What are the key characteristics of ARP operation?",
        "back": "1. Broadcasts request to all devices on local network\n2. Works only within same network segment\n3. Maintains an ARP cache for recent mappings\n4. Essential for IPv4 networks",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 993
    },
    {
        "front": "What protocol replaces ARP in IPv6 networks?",
        "back": "Neighbor Discovery Protocol (NDP) is used in IPv6 networks instead of ARP.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 994
    },
    {
        "front": "What is 8B/10B encoding and what is its basic principle?",
        "back": "8B/10B encoding is a line coding technique that converts 8-bit data bytes into 10-bit transmission characters. It maintains DC balance by ensuring equal numbers of 1s and 0s and provides sufficient state changes for reliable clock recovery.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 995
    },
    {
        "front": "What are the key benefits of 8B/10B encoding?",
        "back": "The key benefits are:\n1. Enables reliable clock recovery at receiver\n2. Eliminates DC bias in transmission\n3. Allows error detection\n4. Ensures minimum transition density\n5. Enables byte synchronization",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 996
    },
    {
        "front": "In which applications is 8B/10B encoding commonly used?",
        "back": "8B/10B encoding is used in:\n1. Gigabit Ethernet\n2. Fiber Channel\n3. SATA\n4. PCI Express",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 997
    },
    {
        "front": "Why is 8B/10B encoding particularly important in fiber optic media?",
        "back": "8B/10B encoding is crucial in fiber optic media because it maintains signal integrity in high-speed digital communications by ensuring reliable clock recovery and DC balance, which are essential for error-free transmission.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 998
    },
    {
        "front": "What is the basic principle of Distance Vector Routing (DVR) protocol?",
        "back": "Each node maintains a vector of distances to all other nodes in the network, containing the shortest known path cost to each destination. Nodes only exchange information with their direct neighbors, and the cost to itself is always 0.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 999
    },
    {
        "front": "What is the fundamental equation for updating distances in DVR?",
        "back": "$$D_{x,y} = \\min_v(c_{x,v} + D_{v,y})$$\nWhere:\n- $$D_{x,y}$$ is the distance from node x to y\n- $$c_{x,v}$$ is the direct cost to neighbor v\n- $$D_{v,y}$$ is neighbor v's distance to y",
        "type": "formula-based",
        "topic": "Network Security",
        "id": 1000
    },
    {
        "front": "How does DVR handle link failures?",
        "back": "1. Immediate neighbors set the cost to \u221e (infinity)\n2. Other nodes learn about the failure gradually through updates\n3. Nodes must find alternative paths if available\n4. Updates propagate through the network one round at a time",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1001
    },
    {
        "front": "What are the key characteristics of DVR updates?",
        "back": "1. Updates are synchronous within rounds\n2. Old values are used throughout a single round\n3. Changes in one round affect calculations in subsequent rounds\n4. When next hop is same, new distance replaces old one even if larger",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1002
    },
    {
        "front": "What is the basic principle of Distance Vector Routing (DVR) protocol?",
        "back": "Each node maintains a vector (table) containing:\n- Distances to all nodes in the network\n- The shortest known path cost to each destination\n- n entries for a network with n nodes (including 0 for itself)",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1003
    },
    {
        "front": "What is the Bellman-Ford equation used in Distance Vector Routing?",
        "back": "$$D_x(y) = min_v\\{c(x,v) + D_v(y)\\}$$\nWhere:\n- $$D_x(y)$$ is the cost of least-cost path from x to y\n- $$c(x,v)$$ is the cost to neighbor v\n- $$D_v(y)$$ is the cost from neighbor v to destination y",
        "type": "formula-based",
        "topic": "Network Security",
        "id": 1004
    },
    {
        "front": "How do nodes exchange information in Distance Vector Routing?",
        "back": "Nodes exchange their distance vectors only with direct neighbors, not with all nodes in the network. Updates are processed iteratively using the most recent link costs but previous round's vectors from neighbors.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1005
    },
    {
        "front": "What are the key properties of Distance Vector Routing?",
        "back": "1. Link costs are symmetric (same cost in both directions)\n2. Only directly connected nodes immediately update their vectors when link costs change\n3. Full convergence requires multiple rounds of updates\n4. Updates use current link costs but previous round's vectors from neighbors",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1006
    },
    {
        "front": "What are the three main classifications of cryptographic algorithms?",
        "back": "1. Message Digest Functions (Hash Functions)\n2. Encryption/Decryption Algorithms\n3. Key Exchange Algorithms",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1007
    },
    {
        "front": "What are the key properties of Message Digest Functions (Hash Functions)?",
        "back": "1. One-way function (irreversible)\n2. Deterministic (same input produces same output)\n3. Collision-resistant\n4. Used for data integrity verification",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1008
    },
    {
        "front": "What is the primary purpose of Encryption/Decryption Algorithms?",
        "back": "The primary purpose is to convert plaintext to ciphertext and vice versa, ensuring data confidentiality.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1009
    },
    {
        "front": "What is the purpose of Key Exchange Algorithms, and what's a common example?",
        "back": "Purpose: To securely share cryptographic keys between parties\nCommon Example: Diffie-Hellman\nUsed for: Establishing secure communication channels",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1010
    },
    {
        "front": "What is a VLAN (Virtual Local Area Network)?",
        "back": "A VLAN is a networking technology that allows logical segmentation of a network independent of physical topology, creating separate broadcast domains within a single physical network infrastructure.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1011
    },
    {
        "front": "What are the four key characteristics of VLANs?",
        "back": "1. Logical grouping of devices regardless of physical location\n2. Network isolation at Layer 2\n3. Reduced broadcast domain size\n4. Enhanced network security and management",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1012
    },
    {
        "front": "What are the main benefits of implementing VLANs?",
        "back": "1. Improved network performance\n2. Better security through isolation\n3. More flexible network design\n4. Cost-effective compared to physical separation\n5. Simplified network management",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1013
    },
    {
        "front": "What is the primary purpose of VLANs?",
        "back": "VLANs serve to:\n1. Enable network segmentation within switches/devices\n2. Create logical broadcast domains\n3. Separate network traffic without physical separation",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1014
    },
    {
        "front": "What is a MAC address and what is its basic structure?",
        "back": "A MAC address is a unique hardware identifier assigned to network interfaces, consisting of 48 bits (6 bytes) represented in hexadecimal format.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1015
    },
    {
        "front": "What are the three valid representation formats for MAC addresses?",
        "back": "1. Colon format: 01:23:45:67:89:AB\n2. Hyphen format: 01-23-45-67-89:AB\n3. Dot format: 0123.4567.89AB",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1016
    },
    {
        "front": "What are the two main components of a MAC address?",
        "back": "1. First 3 bytes: Organizationally Unique Identifier (OUI)\n2. Last 3 bytes: Network Interface Controller (NIC) specific",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1017
    },
    {
        "front": "Which OSI layer does MAC addressing operate at and what is its significance?",
        "back": "MAC addressing operates at Layer 2 (Data Link Layer) of the OSI model and is essential for network interface identification and communication.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1018
    },
    {
        "front": "What is ARP (Address Resolution Protocol) and what is its primary function?",
        "back": "ARP is a networking protocol that maps Layer 3 (Network Layer) addresses to Layer 2 (Data Link Layer) addresses, specifically converting IP addresses (logical addresses) to MAC addresses (physical addresses).",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1019
    },
    {
        "front": "What are the three steps in the ARP process?",
        "back": "1. Broadcasting an ARP request when a device needs to find a MAC address\n2. The device with matching IP address responds with its MAC address\n3. The mapping is stored in an ARP cache for future use",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1020
    },
    {
        "front": "What is the difference between ARP and RARP?",
        "back": "ARP maps IP addresses to MAC addresses, while RARP (Reverse ARP) maps MAC addresses to IP addresses.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1021
    },
    {
        "front": "Why is ARP essential for local network communication?",
        "back": "ARP is essential because devices need both logical (IP) and physical (MAC) addresses to communicate effectively within a local network.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1022
    },
    {
        "front": "What is UTP (Unshielded Twisted Pair) cabling and what is its basic construction?",
        "back": "UTP is a type of network cable consisting of pairs of unshielded copper wires twisted around each other. The twisting helps reduce electromagnetic interference (EMI) and crosstalk between pairs.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1023
    },
    {
        "front": "What are the main advantages of UTP cabling?",
        "back": "The main advantages of UTP cabling are:\n- Cost-effective compared to other cable types\n- Easy to install and maintain\n- Flexible and lightweight\n- Widely used in modern networking infrastructure",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1024
    },
    {
        "front": "What are the common applications of UTP cables?",
        "back": "Common applications of UTP cables include:\n- Local Area Networks (LANs)\n- Telephone connections\n- Ethernet networks",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1025
    },
    {
        "front": "Which OSI layer does UTP cabling belong to, and what aspects of networking does it impact?",
        "back": "UTP cabling belongs to the Physical Layer (Layer 1) of the OSI model. It impacts:\n- Network performance\n- Installation costs\n- Signal integrity\n- Maximum cable run lengths",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1026
    },
    {
        "front": "What are the two key components of the RSA cryptosystem?",
        "back": "1. Public key (e,n)\n2. Private key (d,n)",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1027
    },
    {
        "front": "What is the formula for calculating n in RSA, and what types of numbers are p and q?",
        "back": "$$n = p \u00d7 q$$, where p and q are large prime numbers",
        "type": "formula-based",
        "topic": "Network Security",
        "id": 1028
    },
    {
        "front": "What is Euler's totient function (\u03c6(n)) in RSA?",
        "back": "$$\u03c6(n) = (p-1)(q-1)$$, where p and q are the prime factors of n",
        "type": "formula-based",
        "topic": "Network Security",
        "id": 1029
    },
    {
        "front": "What are the encryption and decryption formulas in RSA?",
        "back": "Encryption: $$C = M^e \\bmod n$$\nDecryption: $$M = C^d \\bmod n$$\nwhere C is ciphertext, M is message",
        "type": "formula-based",
        "topic": "Network Security",
        "id": 1030
    },
    {
        "front": "What mathematical relationship must exist between public exponent (e) and private exponent (d) in RSA?",
        "back": "$$ed \u2261 1 \\bmod \u03c6(n)$$",
        "type": "formula-based",
        "topic": "Network Security",
        "id": 1031
    },
    {
        "front": "What is the main security principle of RSA?",
        "back": "RSA's security relies on the computational difficulty of factoring the product of two large primes. While n is public, its prime factors p and q must remain private.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1032
    },
    {
        "front": "What is Public Key Cryptography and what are its two key components?",
        "back": "Public Key Cryptography (Asymmetric Encryption) is a cryptographic system that uses two mathematically related keys:\n1. Public Key: Used by anyone to encrypt messages\n2. Private Key: Kept secret by the receiver for decryption",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1033
    },
    {
        "front": "What are the three main security features ensured by public key cryptography?",
        "back": "1. Confidentiality: Only intended receiver can read messages\n2. Authentication: Sender can be verified\n3. Non-repudiation: Sender cannot deny sending the message",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1034
    },
    {
        "front": "What is the mathematical representation of encryption and decryption in public key cryptography?",
        "back": "Encryption: $$C = E(M, K_{public})$$\nDecryption: $$M = D(C, K_{private})$$\nWhere:\nM = Original message\nC = Encrypted ciphertext\nE = Encryption function\nD = Decryption function",
        "type": "formula-based",
        "topic": "Network Security",
        "id": 1035
    },
    {
        "front": "What is the fundamental principle of public and private key relationship in asymmetric encryption?",
        "back": "The public and private keys are mathematically linked but computationally infeasible to derive one from the other. Data encrypted with the public key can only be decrypted with the corresponding private key.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1036
    },
    {
        "front": "What are the components of a character transmission in asynchronous serial communication?",
        "back": "A character transmission includes:\n- Start bit (1 bit)\n- Data bits (typically 8 bits)\n- Stop bits (1, 1.5, or 2 bits)",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1037
    },
    {
        "front": "What is the formula for calculating characters per second in asynchronous serial communication?",
        "back": "$$\\text{Characters/second} = \\floor{\\frac{\\text{Baud Rate}}{\\text{Total bits per character}}}$$\nNote: The floor function is used because only whole characters can be transmitted.",
        "type": "formula-based",
        "topic": "Network Security",
        "id": 1038
    },
    {
        "front": "What is the relationship between baud rate and bits per second (bps) in simple binary signaling?",
        "back": "In simple binary signaling, the baud rate equals the bits per second (bps). Baud rate represents the number of signal changes per second.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1039
    },
    {
        "front": "How do you calculate the total bits per character in asynchronous serial communication?",
        "back": "Total bits per character = Data bits + Start bit + Stop bits",
        "type": "formula-based",
        "topic": "Network Security",
        "id": 1040
    },
    {
        "front": "What is the primary access control mechanism in IEEE 802.5 Token Ring protocol?",
        "back": "Token Ring uses a token-passing scheme where only the station holding the token can transmit data, with the token circulating around the ring topology in a predetermined order.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1041
    },
    {
        "front": "What are the three key features of IEEE 802.5 Token Ring protocol?",
        "back": "1. Guaranteed Access: Each node gets network access when it receives the token\n2. Fair Bandwidth Distribution: Prevents single node monopolization\n3. Collision Prevention: Only one station can transmit at a time",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1042
    },
    {
        "front": "How does IEEE 802.5 Token Ring differ from Ethernet (802.3) in terms of network access?",
        "back": "Token Ring uses deterministic access with guaranteed transmission time, while Ethernet uses contention-based access with possible collisions.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1043
    },
    {
        "front": "Why is collision prevention guaranteed in IEEE 802.5 Token Ring?",
        "back": "Collisions are impossible because only the station holding the token can transmit data at any given time, and tokens are passed in a controlled, sequential manner.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1044
    },
    {
        "front": "What are the three fundamental security services provided by SSL (Secure Sockets Layer)?",
        "back": "1. Authentication (mutual client-server verification)\n2. Data Confidentiality (encryption)\n3. Data Integrity (protection against tampering)",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1045
    },
    {
        "front": "At which layer of the TCP/IP model does SSL operate?",
        "back": "SSL operates at the transport layer of TCP/IP, functioning as an intermediate security layer between TCP/IP and application protocols.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1046
    },
    {
        "front": "What is the relationship between SSL and HTTP?",
        "back": "When SSL is used with HTTP web traffic, it transforms HTTP into HTTPS, providing secure communication for web transactions.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1047
    },
    {
        "front": "What is NOT a responsibility of the SSL protocol?",
        "back": "SSL does NOT handle error detection and correction - this responsibility belongs to the TCP protocol.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1048
    },
    {
        "front": "What is Silly Window Syndrome (SWS) in TCP Flow Control?",
        "back": "A networking phenomenon that causes significant degradation in TCP performance due to inefficient window management, resulting in transmission of very small segments relative to header size.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1049
    },
    {
        "front": "What are the two main causes of Silly Window Syndrome?",
        "back": "1. Sender creating data too slowly\n2. Receiver consuming data too slowly",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1050
    },
    {
        "front": "What are the two main solutions to prevent Silly Window Syndrome?",
        "back": "1. Clark's Solution (Receiver-side): Don't advertise small window sizes\n2. Nagle's Algorithm (Sender-side): Accumulate data before sending",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1051
    },
    {
        "front": "What is the main negative impact of Silly Window Syndrome on network performance?",
        "back": "It creates unnecessary overhead and reduces network efficiency by causing the transmission of very small segments (packets) relative to header size, leading to inefficient use of available bandwidth.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1052
    },
    {
        "front": "What are the three core feature categories of WAP 2.0?",
        "back": "1. Push and Pull Technology\n2. Communication Features\n3. Device Management",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1053
    },
    {
        "front": "What is the difference between Push and Pull technology in WAP 2.0?",
        "back": "Push: Server-initiated content delivery\nPull: Client-initiated content requests",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1054
    },
    {
        "front": "What are the main communication features included in WAP 2.0?",
        "back": "1. Multimedia Messaging Services (MMS)\n2. Wireless Telephony Applications\n3. High-Speed Technology Support",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1055
    },
    {
        "front": "What are the device management capabilities in WAP 2.0?",
        "back": "1. User Agent Profile support\n2. Storage Device Interface capabilities",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1056
    },
    {
        "front": "In link state routing protocols, how many routing tables exist in a network?",
        "back": "The number of routing tables equals the number of routers in the network. Expressed as: $$Number\\_of\\_Routing\\_Tables = Number\\_of\\_Routers$$",
        "type": "formula-based",
        "topic": "Network Security",
        "id": 1057
    },
    {
        "front": "Who maintains routing tables in link state routing protocols?",
        "back": "Only routers maintain routing tables, not networks. Each router maintains its own routing table with complete topology information.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1058
    },
    {
        "front": "What information does each router maintain in link state routing?",
        "back": "Each router maintains complete topology information of the network and independently calculates optimal paths to all destinations.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1059
    },
    {
        "front": "What is the key distinction between networks and routers in link state routing?",
        "back": "Networks serve as destinations in the routing tables, while routers are the devices that maintain and use the routing tables.",
        "type": "definition/recall-based",
        "topic": "Network Security",
        "id": 1060
    }
]